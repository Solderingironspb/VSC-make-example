ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32f4xx_hal_uart.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_UART_Init,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_UART_Init
  22              		.syntax unified
  23              		.thumb
  24              		.thumb_func
  26              	HAL_UART_Init:
  27              	.LFB130:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @file    stm32f4xx_hal_uart.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief   UART HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *          functionalities of the Universal Asynchronous Receiver Transmitter Peripheral (UART).
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + IO operation functions
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral Control functions
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           + Peripheral State and Errors functions
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @verbatim
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                         ##### How to use this driver #####
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The UART HAL driver can be used as follows:
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Declare a UART_HandleTypeDef handle structure (eg. UART_HandleTypeDef huart).
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Initialize the UART low level resources by implementing the HAL_UART_MspInit() API:
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) Enable the USARTx interface clock.
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) UART pins configuration:
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the clock for the UART GPIOs.
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the UART TX/RX pins as alternate function pull-up.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) NVIC configuration if you need to use interrupt process (HAL_UART_Transmit_IT()
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_IT() APIs):
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority.
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the NVIC USART IRQ handle.
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (##) DMA Configuration if you need to use DMA process (HAL_UART_Transmit_DMA()
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              and HAL_UART_Receive_DMA() APIs):
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Declare a DMA handle structure for the Tx/Rx stream.
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Enable the DMAx interface clock.
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the declared DMA handle structure with the required
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   Tx/Rx parameters.
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the DMA Tx/Rx stream.
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Associate the initialized DMA handle to the UART DMA Tx/Rx handle.
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   interrupt on the DMA Tx/Rx stream.
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             (+++) Configure the USARTx interrupt priority and enable the NVIC USART IRQ handle
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                   (used for last byte sending completion detection in DMA non circular mode)
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Program the Baud Rate, Word Length, Stop Bit, Parity, Hardware
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         flow control and Mode(Receiver/Transmitter) in the huart Init structure.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART asynchronous mode, initialize the UART registers by calling
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_UART_Init() API.
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the UART Half duplex mode, initialize the UART registers by calling
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_HalfDuplex_Init() API.
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the LIN mode, initialize the UART registers by calling the HAL_LIN_Init() API.
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For the Multi-Processor mode, initialize the UART registers by calling
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         the HAL_MultiProcessor_Init() API.
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) The specific UART interrupts (Transmission complete interrupt,
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             RXNE interrupt and Error Interrupts) will be managed using the macros
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             __HAL_UART_ENABLE_IT() and __HAL_UART_DISABLE_IT() inside the transmit
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             and receive process.
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) These APIs (HAL_UART_Init() and HAL_HalfDuplex_Init()) configure also the
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             low level Hardware GPIO, CLOCK, CORTEX...etc) by calling the customized
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_MspInit() API.
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ##### Callback registration #####
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ==================================
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The compilation define USE_HAL_UART_REGISTER_CALLBACKS when set to 1
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     allows the user to configure dynamically the driver callbacks.
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use Function HAL_UART_RegisterCallback() to register a user callback.
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Function HAL_UART_RegisterCallback() allows to register following callbacks:
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function takes as parameters the HAL peripheral handle, the Callback ID
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and a pointer to the user callback function.
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Use function HAL_UART_UnRegisterCallback() to reset a callback to the default
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     weak (surcharged) function.
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_UnRegisterCallback() takes as parameters the HAL peripheral handle,
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and the Callback ID.
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This function allows to reset following callbacks:
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxHalfCpltCallback        : Tx Half Complete Callback.
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) TxCpltCallback            : Tx Complete Callback.
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxHalfCpltCallback        : Rx Half Complete Callback.
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) RxCpltCallback            : Rx Complete Callback.
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) ErrorCallback             : Error Callback.
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortCpltCallback         : Abort Complete Callback.
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortTransmitCpltCallback : Abort Transmit Complete Callback.
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) AbortReceiveCpltCallback  : Abort Receive Complete Callback.
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspInitCallback           : UART MspInit.
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) MspDeInitCallback         : UART MspDeInit.
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     For specific callback RxEventCallback, use dedicated registration/reset functions:
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     respectively HAL_UART_RegisterRxEventCallback() , HAL_UART_UnRegisterRxEventCallback().
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     By default, after the HAL_UART_Init() and when the state is HAL_UART_STATE_RESET
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     all callbacks are set to the corresponding weak (surcharged) functions:
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     examples HAL_UART_TxCpltCallback(), HAL_UART_RxHalfCpltCallback().
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done for MspInit and MspDeInit functions that are respectively
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     reset to the legacy weak (surcharged) functions in the HAL_UART_Init()
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and HAL_UART_DeInit() only when these callbacks are null (not registered beforehand).
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     If not, MspInit or MspDeInit are not null, the HAL_UART_Init() and HAL_UART_DeInit()
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     keep and use the user MspInit/MspDeInit callbacks (registered beforehand).
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Callbacks can be registered/unregistered in HAL_UART_STATE_READY state only.
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     Exception done MspInit/MspDeInit that can be registered/unregistered
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in HAL_UART_STATE_READY or HAL_UART_STATE_RESET state, thus registered (user)
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     MspInit/DeInit callbacks can be used during the Init/DeInit.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     In that case first register the MspInit/MspDeInit user callbacks
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     using HAL_UART_RegisterCallback() before calling HAL_UART_DeInit()
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     or HAL_UART_Init() function.
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     When The compilation define USE_HAL_UART_REGISTER_CALLBACKS is set to 0 or
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     not defined, the callback registration feature is not available
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and weak (surcharged) callbacks are used.
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Three operation modes are available within this driver :
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Polling mode IO operation ***
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =================================
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in blocking mode using HAL_UART_Transmit()
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in blocking mode using HAL_UART_Receive()
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** Interrupt mode IO operation ***
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ===================================
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode using HAL_UART_Transmit_IT()
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode using HAL_UART_Receive_IT()
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** DMA mode IO operation ***
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      ==============================
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Send an amount of data in non blocking mode (DMA) using HAL_UART_Transmit_DMA()
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of half transfer HAL_UART_TxHalfCpltCallback is executed and user ca
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxHalfCpltCallback
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At transmission end of transfer HAL_UART_TxCpltCallback is executed and user can
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_TxCpltCallback
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Receive an amount of data in non blocking mode (DMA) using HAL_UART_Receive_DMA()
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of half transfer HAL_UART_RxHalfCpltCallback is executed and user can
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxHalfCpltCallback
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) At reception end of transfer HAL_UART_RxCpltCallback is executed and user can
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_RxCpltCallback
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) In case of transfer Error, HAL_UART_ErrorCallback() function is executed and user can
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             add his own code by customization of function pointer HAL_UART_ErrorCallback
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Pause the DMA Transfer using HAL_UART_DMAPause()
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Resume the DMA Transfer using HAL_UART_DMAResume()
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Stop the DMA Transfer using HAL_UART_DMAStop()
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..] This subsection also provides a set of additional functions providing enhanced reception
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     services to user. (For example, these functions allow application to handle use cases
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     where number of data to be received is unknown).
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Compared to standard reception services which only consider number of received
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         data elements as reception completion criteria, these functions also consider additional ev
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         as triggers for updating reception status to caller :
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Detection of inactivity period (RX line has not been active for a given period).
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (++) RX inactivity detected by IDLE event, i.e. RX line has been in idle state (normally 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                for 1 frame time, after last received byte.
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two mode of transfer:
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The reception is performed in polling mode, until either expected number 
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or till IDLE event occurs. Reception is handled only during function execution.
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            When function exits, no data reception could occur. HAL status and number of actually re
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            are returned by function after finishing transfer.
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The reception is performed using Interrupts or DMA.
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            These API's return the HAL status.
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when using DMA mode.
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UARTEx_RxEventCallback() user callback will be executed during Receive process
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a reception error is det
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API:
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle()
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with Interrupt:
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_IT()
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API with DMA:
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_ReceiveToIdle_DMA()
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      *** UART HAL driver macros list ***
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      =============================================
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Below the list of most used macros in UART HAL driver.
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE: Enable the UART peripheral
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE: Disable the UART peripheral
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_FLAG : Check whether the specified UART flag is set or not
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_CLEAR_FLAG : Clear the specified UART pending flag
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_ENABLE_IT: Enable the specified UART interrupt
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_DISABLE_IT: Disable the specified UART interrupt
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) __HAL_UART_GET_IT_SOURCE: Check whether the specified UART interrupt has occurred or not
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) You can refer to the UART HAL driver header file for more useful macros
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   @endverbatim
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      [..]
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (@) Additional remark: If the parity is enabled, then the MSB bit of the data written
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            in the data register is transmitted but is changed by the parity bit.
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Depending on the frame length defined by the M bit (8-bits or 9-bits),
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the possible UART frame formats are as listed in the following table:
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |   M bit |  PCE bit  |            UART frame                 |
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------------------|---------------------------------------|
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    0      |    | SB | 8 bit data | STB |          |
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    0    |    1      |    | SB | 7 bit data | PB | STB |     |
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    0      |    | SB | 9 bit data | STB |          |
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |---------|-----------|---------------------------------------|
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     |    1    |    1      |    | SB | 8 bit data | PB | STB |     |
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     +-------------------------------------------------------------+
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @attention
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * All rights reserved.</center></h2>
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * the "License"; You may not use this file except in compliance with the
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * License. You may obtain a copy of the License at:
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                        opensource.org/licenses/BSD-3-Clause
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ******************************************************************************
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Includes ------------------------------------------------------------------*/
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #include "stm32f4xx_hal.h"
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 6


 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup STM32F4xx_HAL_Driver
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART UART
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief HAL UART module driver
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #ifdef HAL_UART_MODULE_ENABLED
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private typedef -----------------------------------------------------------*/
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private define ------------------------------------------------------------*/
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Constants
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private macro -------------------------------------------------------------*/
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private variables ---------------------------------------------------------*/
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Private function prototypes -----------------------------------------------*/
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @addtogroup UART_Private_Functions  UART Private Functions
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart);
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart);
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart);
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma);
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma);
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma);
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma);
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma);
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma);
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma);
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma);
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma);
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart);
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart);
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart);
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout);
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart);
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /* Exported functions ---------------------------------------------------------*/
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions UART Exported Functions
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group1 Initialization and de-initialization functions
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 7


 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief    Initialization and Configuration functions
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             ##### Initialization and Configuration functions #####
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to initialize the USARTx or the UARTy
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     in asynchronous mode.
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       (+) For the asynchronous mode only these parameters can be configured:
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Baud Rate
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Word Length
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Stop Bit
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Parity: If the parity is enabled, then the MSB bit of the data written
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the data register is transmitted but is changed by the parity bit.
 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              Depending on the frame length defined by the M bit (8-bits or 9-bits),
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              please refer to Reference manual for possible UART frame formats.
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Hardware flow control
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Receiver/transmitter modes
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (++) Over Sampling Method
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     [..]
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     The HAL_UART_Init(), HAL_HalfDuplex_Init(), HAL_LIN_Init() and HAL_MultiProcessor_Init() APIs
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     follow respectively the UART asynchronous, UART Half duplex, LIN and Multi-Processor configurat
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     procedures (details for the procedures are available in reference manual
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (RM0430 for STM32F4X3xx MCUs and RM0402 for STM32F412xx MCUs
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0383 for STM32F411xC/E MCUs and RM0401 for STM32F410xx MCUs
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0090 for STM32F4X5xx/STM32F4X7xx/STM32F429xx/STM32F439xx MCUs
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      RM0390 for STM32F446xx MCUs and RM0386 for STM32F469xx/STM32F479xx MCUs)).
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the UART mode according to the specified parameters in
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the UART_InitTypeDef and create the associated handle.
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
  29              		.loc 1 357 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 7, -8
  36              		.cfi_offset 14, -4
  37 0002 82B0     		sub	sp, sp, #8
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
  41 0006 7860     		str	r0, [r7, #4]
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 8


  42              		.loc 1 359 6
  43 0008 7B68     		ldr	r3, [r7, #4]
  44 000a 002B     		cmp	r3, #0
  45 000c 01D1     		bne	.L2
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
  46              		.loc 1 361 12
  47 000e 0123     		movs	r3, #1
  48 0010 3FE0     		b	.L3
  49              	.L2:
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.HwFlowCtl != UART_HWCONTROL_NONE)
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* The hardware flow control is available only for USART1, USART2, USART3 and USART6.
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Except for STM32F446xx devices, that is available for USART1, USART2, USART3, USART6, UART4 
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     */
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HWFLOW_INSTANCE(huart->Instance));
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_HARDWARE_FLOW_CONTROL(huart->Init.HwFlowCtl));
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     assert_param(IS_UART_INSTANCE(huart->Instance));
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
  50              		.loc 1 380 12
  51 0012 7B68     		ldr	r3, [r7, #4]
  52 0014 93F83D30 		ldrb	r3, [r3, #61]
  53 0018 DBB2     		uxtb	r3, r3
  54              		.loc 1 380 6
  55 001a 002B     		cmp	r3, #0
  56 001c 06D1     		bne	.L4
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
  57              		.loc 1 383 17
  58 001e 7B68     		ldr	r3, [r7, #4]
  59 0020 0022     		movs	r2, #0
  60 0022 83F83C20 		strb	r2, [r3, #60]
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 9


  61              		.loc 1 397 5
  62 0026 7868     		ldr	r0, [r7, #4]
  63 0028 FFF7FEFF 		bl	HAL_UART_MspInit
  64              	.L4:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
  65              		.loc 1 401 17
  66 002c 7B68     		ldr	r3, [r7, #4]
  67 002e 2422     		movs	r2, #36
  68 0030 83F83D20 		strb	r2, [r3, #61]
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
  69              		.loc 1 404 3
  70 0034 7B68     		ldr	r3, [r7, #4]
  71 0036 1B68     		ldr	r3, [r3]
  72 0038 DA68     		ldr	r2, [r3, #12]
  73 003a 7B68     		ldr	r3, [r7, #4]
  74 003c 1B68     		ldr	r3, [r3]
  75 003e 22F40052 		bic	r2, r2, #8192
  76 0042 DA60     		str	r2, [r3, #12]
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
  77              		.loc 1 407 3
  78 0044 7868     		ldr	r0, [r7, #4]
  79 0046 FFF7FEFF 		bl	UART_SetConfig
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In asynchronous mode, the following bits must be kept cleared:
 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
  80              		.loc 1 412 3
  81 004a 7B68     		ldr	r3, [r7, #4]
  82 004c 1B68     		ldr	r3, [r3]
  83 004e 1A69     		ldr	r2, [r3, #16]
  84 0050 7B68     		ldr	r3, [r7, #4]
  85 0052 1B68     		ldr	r3, [r3]
  86 0054 22F49042 		bic	r2, r2, #18432
  87 0058 1A61     		str	r2, [r3, #16]
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
  88              		.loc 1 413 3
  89 005a 7B68     		ldr	r3, [r7, #4]
  90 005c 1B68     		ldr	r3, [r3]
  91 005e 5A69     		ldr	r2, [r3, #20]
  92 0060 7B68     		ldr	r3, [r7, #4]
  93 0062 1B68     		ldr	r3, [r3]
  94 0064 22F02A02 		bic	r2, r2, #42
  95 0068 5A61     		str	r2, [r3, #20]
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
  96              		.loc 1 416 3
  97 006a 7B68     		ldr	r3, [r7, #4]
  98 006c 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 10


  99 006e DA68     		ldr	r2, [r3, #12]
 100 0070 7B68     		ldr	r3, [r7, #4]
 101 0072 1B68     		ldr	r3, [r3]
 102 0074 42F40052 		orr	r2, r2, #8192
 103 0078 DA60     		str	r2, [r3, #12]
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 104              		.loc 1 419 20
 105 007a 7B68     		ldr	r3, [r7, #4]
 106 007c 0022     		movs	r2, #0
 107 007e 1A64     		str	r2, [r3, #64]
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 108              		.loc 1 420 17
 109 0080 7B68     		ldr	r3, [r7, #4]
 110 0082 2022     		movs	r2, #32
 111 0084 83F83D20 		strb	r2, [r3, #61]
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 112              		.loc 1 421 18
 113 0088 7B68     		ldr	r3, [r7, #4]
 114 008a 2022     		movs	r2, #32
 115 008c 83F83E20 		strb	r2, [r3, #62]
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 116              		.loc 1 423 10
 117 0090 0023     		movs	r3, #0
 118              	.L3:
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 119              		.loc 1 424 1
 120 0092 1846     		mov	r0, r3
 121 0094 0837     		adds	r7, r7, #8
 122              		.cfi_def_cfa_offset 8
 123 0096 BD46     		mov	sp, r7
 124              		.cfi_def_cfa_register 13
 125              		@ sp needed
 126 0098 80BD     		pop	{r7, pc}
 127              		.cfi_endproc
 128              	.LFE130:
 130              		.section	.text.HAL_HalfDuplex_Init,"ax",%progbits
 131              		.align	1
 132              		.global	HAL_HalfDuplex_Init
 133              		.syntax unified
 134              		.thumb
 135              		.thumb_func
 137              	HAL_HalfDuplex_Init:
 138              	.LFB131:
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the half-duplex mode according to the specified
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_Init(UART_HandleTypeDef *huart)
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 139              		.loc 1 434 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 11


 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 8
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 7, -8
 146              		.cfi_offset 14, -4
 147 0002 82B0     		sub	sp, sp, #8
 148              		.cfi_def_cfa_offset 16
 149 0004 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 151 0006 7860     		str	r0, [r7, #4]
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 152              		.loc 1 436 6
 153 0008 7B68     		ldr	r3, [r7, #4]
 154 000a 002B     		cmp	r3, #0
 155 000c 01D1     		bne	.L6
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 156              		.loc 1 438 12
 157 000e 0123     		movs	r3, #1
 158 0010 47E0     		b	.L7
 159              	.L6:
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_HALFDUPLEX_INSTANCE(huart->Instance));
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 160              		.loc 1 446 12
 161 0012 7B68     		ldr	r3, [r7, #4]
 162 0014 93F83D30 		ldrb	r3, [r3, #61]
 163 0018 DBB2     		uxtb	r3, r3
 164              		.loc 1 446 6
 165 001a 002B     		cmp	r3, #0
 166 001c 06D1     		bne	.L8
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 167              		.loc 1 449 17
 168 001e 7B68     		ldr	r3, [r7, #4]
 169 0020 0022     		movs	r2, #0
 170 0022 83F83C20 		strb	r2, [r3, #60]
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 12


 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 171              		.loc 1 463 5
 172 0026 7868     		ldr	r0, [r7, #4]
 173 0028 FFF7FEFF 		bl	HAL_UART_MspInit
 174              	.L8:
 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 175              		.loc 1 467 17
 176 002c 7B68     		ldr	r3, [r7, #4]
 177 002e 2422     		movs	r2, #36
 178 0030 83F83D20 		strb	r2, [r3, #61]
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 179              		.loc 1 470 3
 180 0034 7B68     		ldr	r3, [r7, #4]
 181 0036 1B68     		ldr	r3, [r3]
 182 0038 DA68     		ldr	r2, [r3, #12]
 183 003a 7B68     		ldr	r3, [r7, #4]
 184 003c 1B68     		ldr	r3, [r3]
 185 003e 22F40052 		bic	r2, r2, #8192
 186 0042 DA60     		str	r2, [r3, #12]
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 187              		.loc 1 473 3
 188 0044 7868     		ldr	r0, [r7, #4]
 189 0046 FFF7FEFF 		bl	UART_SetConfig
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In half-duplex mode, the following bits must be kept cleared:
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN and IREN bits in the USART_CR3 register.*/
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 190              		.loc 1 478 3
 191 004a 7B68     		ldr	r3, [r7, #4]
 192 004c 1B68     		ldr	r3, [r3]
 193 004e 1A69     		ldr	r2, [r3, #16]
 194 0050 7B68     		ldr	r3, [r7, #4]
 195 0052 1B68     		ldr	r3, [r3]
 196 0054 22F49042 		bic	r2, r2, #18432
 197 0058 1A61     		str	r2, [r3, #16]
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_IREN | USART_CR3_SCEN));
 198              		.loc 1 479 3
 199 005a 7B68     		ldr	r3, [r7, #4]
 200 005c 1B68     		ldr	r3, [r3]
 201 005e 5A69     		ldr	r2, [r3, #20]
 202 0060 7B68     		ldr	r3, [r7, #4]
 203 0062 1B68     		ldr	r3, [r3]
 204 0064 22F02202 		bic	r2, r2, #34
 205 0068 5A61     		str	r2, [r3, #20]
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the Half-Duplex mode by setting the HDSEL bit in the CR3 register */
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR3, USART_CR3_HDSEL);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 13


 206              		.loc 1 482 3
 207 006a 7B68     		ldr	r3, [r7, #4]
 208 006c 1B68     		ldr	r3, [r3]
 209 006e 5A69     		ldr	r2, [r3, #20]
 210 0070 7B68     		ldr	r3, [r7, #4]
 211 0072 1B68     		ldr	r3, [r3]
 212 0074 42F00802 		orr	r2, r2, #8
 213 0078 5A61     		str	r2, [r3, #20]
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 214              		.loc 1 485 3
 215 007a 7B68     		ldr	r3, [r7, #4]
 216 007c 1B68     		ldr	r3, [r3]
 217 007e DA68     		ldr	r2, [r3, #12]
 218 0080 7B68     		ldr	r3, [r7, #4]
 219 0082 1B68     		ldr	r3, [r3]
 220 0084 42F40052 		orr	r2, r2, #8192
 221 0088 DA60     		str	r2, [r3, #12]
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 222              		.loc 1 488 20
 223 008a 7B68     		ldr	r3, [r7, #4]
 224 008c 0022     		movs	r2, #0
 225 008e 1A64     		str	r2, [r3, #64]
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 226              		.loc 1 489 17
 227 0090 7B68     		ldr	r3, [r7, #4]
 228 0092 2022     		movs	r2, #32
 229 0094 83F83D20 		strb	r2, [r3, #61]
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 230              		.loc 1 490 18
 231 0098 7B68     		ldr	r3, [r7, #4]
 232 009a 2022     		movs	r2, #32
 233 009c 83F83E20 		strb	r2, [r3, #62]
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 234              		.loc 1 492 10
 235 00a0 0023     		movs	r3, #0
 236              	.L7:
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 237              		.loc 1 493 1
 238 00a2 1846     		mov	r0, r3
 239 00a4 0837     		adds	r7, r7, #8
 240              		.cfi_def_cfa_offset 8
 241 00a6 BD46     		mov	sp, r7
 242              		.cfi_def_cfa_register 13
 243              		@ sp needed
 244 00a8 80BD     		pop	{r7, pc}
 245              		.cfi_endproc
 246              	.LFE131:
 248              		.section	.text.HAL_LIN_Init,"ax",%progbits
 249              		.align	1
 250              		.global	HAL_LIN_Init
 251              		.syntax unified
 252              		.thumb
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 14


 253              		.thumb_func
 255              	HAL_LIN_Init:
 256              	.LFB132:
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the LIN mode according to the specified
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  BreakDetectLength Specifies the LIN break detection length.
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_10B: 10-bit break detection
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_LINBREAKDETECTLENGTH_11B: 11-bit break detection
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_Init(UART_HandleTypeDef *huart, uint32_t BreakDetectLength)
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 257              		.loc 1 507 1
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 8
 260              		@ frame_needed = 1, uses_anonymous_args = 0
 261 0000 80B5     		push	{r7, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 7, -8
 264              		.cfi_offset 14, -4
 265 0002 82B0     		sub	sp, sp, #8
 266              		.cfi_def_cfa_offset 16
 267 0004 00AF     		add	r7, sp, #0
 268              		.cfi_def_cfa_register 7
 269 0006 7860     		str	r0, [r7, #4]
 270 0008 3960     		str	r1, [r7]
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 271              		.loc 1 509 6
 272 000a 7B68     		ldr	r3, [r7, #4]
 273 000c 002B     		cmp	r3, #0
 274 000e 01D1     		bne	.L10
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 275              		.loc 1 511 12
 276 0010 0123     		movs	r3, #1
 277 0012 57E0     		b	.L11
 278              	.L10:
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the LIN UART instance */
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_INSTANCE(huart->Instance));
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Break detection length parameter */
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_BREAK_DETECT_LENGTH(BreakDetectLength));
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_WORD_LENGTH(huart->Init.WordLength));
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_LIN_OVERSAMPLING(huart->Init.OverSampling));
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 279              		.loc 1 522 12
 280 0014 7B68     		ldr	r3, [r7, #4]
 281 0016 93F83D30 		ldrb	r3, [r3, #61]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 15


 282 001a DBB2     		uxtb	r3, r3
 283              		.loc 1 522 6
 284 001c 002B     		cmp	r3, #0
 285 001e 06D1     		bne	.L12
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 286              		.loc 1 525 17
 287 0020 7B68     		ldr	r3, [r7, #4]
 288 0022 0022     		movs	r2, #0
 289 0024 83F83C20 		strb	r2, [r3, #60]
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 290              		.loc 1 539 5
 291 0028 7868     		ldr	r0, [r7, #4]
 292 002a FFF7FEFF 		bl	HAL_UART_MspInit
 293              	.L12:
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 294              		.loc 1 543 17
 295 002e 7B68     		ldr	r3, [r7, #4]
 296 0030 2422     		movs	r2, #36
 297 0032 83F83D20 		strb	r2, [r3, #61]
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 298              		.loc 1 546 3
 299 0036 7B68     		ldr	r3, [r7, #4]
 300 0038 1B68     		ldr	r3, [r3]
 301 003a DA68     		ldr	r2, [r3, #12]
 302 003c 7B68     		ldr	r3, [r7, #4]
 303 003e 1B68     		ldr	r3, [r3]
 304 0040 22F40052 		bic	r2, r2, #8192
 305 0044 DA60     		str	r2, [r3, #12]
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 306              		.loc 1 549 3
 307 0046 7868     		ldr	r0, [r7, #4]
 308 0048 FFF7FEFF 		bl	UART_SetConfig
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In LIN mode, the following bits must be kept cleared:
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - CLKEN bits in the USART_CR2 register,
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 16


 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN bits in the USART_CR3 register.*/
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_CLKEN));
 309              		.loc 1 554 3
 310 004c 7B68     		ldr	r3, [r7, #4]
 311 004e 1B68     		ldr	r3, [r3]
 312 0050 1A69     		ldr	r2, [r3, #16]
 313 0052 7B68     		ldr	r3, [r7, #4]
 314 0054 1B68     		ldr	r3, [r3]
 315 0056 22F40062 		bic	r2, r2, #2048
 316 005a 1A61     		str	r2, [r3, #16]
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_HDSEL | USART_CR3_IREN | USART_CR3_SCEN));
 317              		.loc 1 555 3
 318 005c 7B68     		ldr	r3, [r7, #4]
 319 005e 1B68     		ldr	r3, [r3]
 320 0060 5A69     		ldr	r2, [r3, #20]
 321 0062 7B68     		ldr	r3, [r7, #4]
 322 0064 1B68     		ldr	r3, [r3]
 323 0066 22F02A02 		bic	r2, r2, #42
 324 006a 5A61     		str	r2, [r3, #20]
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the LIN mode by setting the LINEN bit in the CR2 register */
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, USART_CR2_LINEN);
 325              		.loc 1 558 3
 326 006c 7B68     		ldr	r3, [r7, #4]
 327 006e 1B68     		ldr	r3, [r3]
 328 0070 1A69     		ldr	r2, [r3, #16]
 329 0072 7B68     		ldr	r3, [r7, #4]
 330 0074 1B68     		ldr	r3, [r3]
 331 0076 42F48042 		orr	r2, r2, #16384
 332 007a 1A61     		str	r2, [r3, #16]
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART LIN Break detection length. */
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_LBDL);
 333              		.loc 1 561 3
 334 007c 7B68     		ldr	r3, [r7, #4]
 335 007e 1B68     		ldr	r3, [r3]
 336 0080 1A69     		ldr	r2, [r3, #16]
 337 0082 7B68     		ldr	r3, [r7, #4]
 338 0084 1B68     		ldr	r3, [r3]
 339 0086 22F02002 		bic	r2, r2, #32
 340 008a 1A61     		str	r2, [r3, #16]
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, BreakDetectLength);
 341              		.loc 1 562 3
 342 008c 7B68     		ldr	r3, [r7, #4]
 343 008e 1B68     		ldr	r3, [r3]
 344 0090 1969     		ldr	r1, [r3, #16]
 345 0092 7B68     		ldr	r3, [r7, #4]
 346 0094 1B68     		ldr	r3, [r3]
 347 0096 3A68     		ldr	r2, [r7]
 348 0098 0A43     		orrs	r2, r2, r1
 349 009a 1A61     		str	r2, [r3, #16]
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 350              		.loc 1 565 3
 351 009c 7B68     		ldr	r3, [r7, #4]
 352 009e 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 17


 353 00a0 DA68     		ldr	r2, [r3, #12]
 354 00a2 7B68     		ldr	r3, [r7, #4]
 355 00a4 1B68     		ldr	r3, [r3]
 356 00a6 42F40052 		orr	r2, r2, #8192
 357 00aa DA60     		str	r2, [r3, #12]
 566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state*/
 568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 358              		.loc 1 568 20
 359 00ac 7B68     		ldr	r3, [r7, #4]
 360 00ae 0022     		movs	r2, #0
 361 00b0 1A64     		str	r2, [r3, #64]
 569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 362              		.loc 1 569 17
 363 00b2 7B68     		ldr	r3, [r7, #4]
 364 00b4 2022     		movs	r2, #32
 365 00b6 83F83D20 		strb	r2, [r3, #61]
 570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 366              		.loc 1 570 18
 367 00ba 7B68     		ldr	r3, [r7, #4]
 368 00bc 2022     		movs	r2, #32
 369 00be 83F83E20 		strb	r2, [r3, #62]
 571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 370              		.loc 1 572 10
 371 00c2 0023     		movs	r3, #0
 372              	.L11:
 573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 373              		.loc 1 573 1
 374 00c4 1846     		mov	r0, r3
 375 00c6 0837     		adds	r7, r7, #8
 376              		.cfi_def_cfa_offset 8
 377 00c8 BD46     		mov	sp, r7
 378              		.cfi_def_cfa_register 13
 379              		@ sp needed
 380 00ca 80BD     		pop	{r7, pc}
 381              		.cfi_endproc
 382              	.LFE132:
 384              		.section	.text.HAL_MultiProcessor_Init,"ax",%progbits
 385              		.align	1
 386              		.global	HAL_MultiProcessor_Init
 387              		.syntax unified
 388              		.thumb
 389              		.thumb_func
 391              	HAL_MultiProcessor_Init:
 392              	.LFB133:
 574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initializes the Multi-Processor mode according to the specified
 577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         parameters in the UART_InitTypeDef and create the associated handle.
 578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Address USART address
 581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  WakeUpMethod specifies the USART wake-up method.
 582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_IDLELINE: Wake-up by an idle line detection
 584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *            @arg UART_WAKEUPMETHOD_ADDRESSMARK: Wake-up by an address mark
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 18


 585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_Init(UART_HandleTypeDef *huart, uint8_t Address, uint32_t Wake
 588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 393              		.loc 1 588 1
 394              		.cfi_startproc
 395              		@ args = 0, pretend = 0, frame = 16
 396              		@ frame_needed = 1, uses_anonymous_args = 0
 397 0000 80B5     		push	{r7, lr}
 398              		.cfi_def_cfa_offset 8
 399              		.cfi_offset 7, -8
 400              		.cfi_offset 14, -4
 401 0002 84B0     		sub	sp, sp, #16
 402              		.cfi_def_cfa_offset 24
 403 0004 00AF     		add	r7, sp, #0
 404              		.cfi_def_cfa_register 7
 405 0006 F860     		str	r0, [r7, #12]
 406 0008 0B46     		mov	r3, r1
 407 000a 7A60     		str	r2, [r7, #4]
 408 000c FB72     		strb	r3, [r7, #11]
 589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 409              		.loc 1 590 6
 410 000e FB68     		ldr	r3, [r7, #12]
 411 0010 002B     		cmp	r3, #0
 412 0012 01D1     		bne	.L14
 591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 413              		.loc 1 592 12
 414 0014 0123     		movs	r3, #1
 415 0016 5FE0     		b	.L15
 416              	.L14:
 593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the Address & wake up method parameters */
 599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WAKEUPMETHOD(WakeUpMethod));
 600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_ADDRESS(Address));
 601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
 602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));
 603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_RESET)
 417              		.loc 1 604 12
 418 0018 FB68     		ldr	r3, [r7, #12]
 419 001a 93F83D30 		ldrb	r3, [r3, #61]
 420 001e DBB2     		uxtb	r3, r3
 421              		.loc 1 604 6
 422 0020 002B     		cmp	r3, #0
 423 0022 06D1     		bne	.L16
 605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Allocate lock resource and initialize it */
 607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Lock = HAL_UNLOCKED;
 424              		.loc 1 607 17
 425 0024 FB68     		ldr	r3, [r7, #12]
 426 0026 0022     		movs	r2, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 19


 427 0028 83F83C20 		strb	r2, [r3, #60]
 608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_InitCallbacksToDefault(huart);
 611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->MspInitCallback == NULL)
 613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->MspInitCallback = HAL_UART_MspInit;
 615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware */
 618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspInitCallback(huart);
 619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init the low level hardware : GPIO, CLOCK */
 621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_MspInit(huart);
 428              		.loc 1 621 5
 429 002c F868     		ldr	r0, [r7, #12]
 430 002e FFF7FEFF 		bl	HAL_UART_MspInit
 431              	.L16:
 622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 432              		.loc 1 625 17
 433 0032 FB68     		ldr	r3, [r7, #12]
 434 0034 2422     		movs	r2, #36
 435 0036 83F83D20 		strb	r2, [r3, #61]
 626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the peripheral */
 628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 436              		.loc 1 628 3
 437 003a FB68     		ldr	r3, [r7, #12]
 438 003c 1B68     		ldr	r3, [r3]
 439 003e DA68     		ldr	r2, [r3, #12]
 440 0040 FB68     		ldr	r3, [r7, #12]
 441 0042 1B68     		ldr	r3, [r3]
 442 0044 22F40052 		bic	r2, r2, #8192
 443 0048 DA60     		str	r2, [r3, #12]
 629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART Communication parameters */
 631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_SetConfig(huart);
 444              		.loc 1 631 3
 445 004a F868     		ldr	r0, [r7, #12]
 446 004c FFF7FEFF 		bl	UART_SetConfig
 632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In Multi-Processor mode, the following bits must be kept cleared:
 634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - LINEN and CLKEN bits in the USART_CR2 register,
 635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      - SCEN, HDSEL and IREN  bits in the USART_CR3 register */
 636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 447              		.loc 1 636 3
 448 0050 FB68     		ldr	r3, [r7, #12]
 449 0052 1B68     		ldr	r3, [r3]
 450 0054 1A69     		ldr	r2, [r3, #16]
 451 0056 FB68     		ldr	r3, [r7, #12]
 452 0058 1B68     		ldr	r3, [r3]
 453 005a 22F49042 		bic	r2, r2, #18432
 454 005e 1A61     		str	r2, [r3, #16]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 20


 637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 455              		.loc 1 637 3
 456 0060 FB68     		ldr	r3, [r7, #12]
 457 0062 1B68     		ldr	r3, [r3]
 458 0064 5A69     		ldr	r2, [r3, #20]
 459 0066 FB68     		ldr	r3, [r7, #12]
 460 0068 1B68     		ldr	r3, [r3]
 461 006a 22F02A02 		bic	r2, r2, #42
 462 006e 5A61     		str	r2, [r3, #20]
 638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the USART address node */
 640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR2, USART_CR2_ADD);
 463              		.loc 1 640 3
 464 0070 FB68     		ldr	r3, [r7, #12]
 465 0072 1B68     		ldr	r3, [r3]
 466 0074 1A69     		ldr	r2, [r3, #16]
 467 0076 FB68     		ldr	r3, [r7, #12]
 468 0078 1B68     		ldr	r3, [r3]
 469 007a 22F00F02 		bic	r2, r2, #15
 470 007e 1A61     		str	r2, [r3, #16]
 641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR2, Address);
 471              		.loc 1 641 3
 472 0080 FB68     		ldr	r3, [r7, #12]
 473 0082 1B68     		ldr	r3, [r3]
 474 0084 1969     		ldr	r1, [r3, #16]
 475 0086 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 476 0088 FB68     		ldr	r3, [r7, #12]
 477 008a 1B68     		ldr	r3, [r3]
 478 008c 0A43     		orrs	r2, r2, r1
 479 008e 1A61     		str	r2, [r3, #16]
 642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the wake up method by setting the WAKE bit in the CR1 register */
 644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   CLEAR_BIT(huart->Instance->CR1, USART_CR1_WAKE);
 480              		.loc 1 644 3
 481 0090 FB68     		ldr	r3, [r7, #12]
 482 0092 1B68     		ldr	r3, [r3]
 483 0094 DA68     		ldr	r2, [r3, #12]
 484 0096 FB68     		ldr	r3, [r7, #12]
 485 0098 1B68     		ldr	r3, [r3]
 486 009a 22F40062 		bic	r2, r2, #2048
 487 009e DA60     		str	r2, [r3, #12]
 645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   SET_BIT(huart->Instance->CR1, WakeUpMethod);
 488              		.loc 1 645 3
 489 00a0 FB68     		ldr	r3, [r7, #12]
 490 00a2 1B68     		ldr	r3, [r3]
 491 00a4 D968     		ldr	r1, [r3, #12]
 492 00a6 FB68     		ldr	r3, [r7, #12]
 493 00a8 1B68     		ldr	r3, [r3]
 494 00aa 7A68     		ldr	r2, [r7, #4]
 495 00ac 0A43     		orrs	r2, r2, r1
 496 00ae DA60     		str	r2, [r3, #12]
 646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the peripheral */
 648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE(huart);
 497              		.loc 1 648 3
 498 00b0 FB68     		ldr	r3, [r7, #12]
 499 00b2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 21


 500 00b4 DA68     		ldr	r2, [r3, #12]
 501 00b6 FB68     		ldr	r3, [r7, #12]
 502 00b8 1B68     		ldr	r3, [r3]
 503 00ba 42F40052 		orr	r2, r2, #8192
 504 00be DA60     		str	r2, [r3, #12]
 649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Initialize the UART state */
 651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 505              		.loc 1 651 20
 506 00c0 FB68     		ldr	r3, [r7, #12]
 507 00c2 0022     		movs	r2, #0
 508 00c4 1A64     		str	r2, [r3, #64]
 652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 509              		.loc 1 652 17
 510 00c6 FB68     		ldr	r3, [r7, #12]
 511 00c8 2022     		movs	r2, #32
 512 00ca 83F83D20 		strb	r2, [r3, #61]
 653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 513              		.loc 1 653 18
 514 00ce FB68     		ldr	r3, [r7, #12]
 515 00d0 2022     		movs	r2, #32
 516 00d2 83F83E20 		strb	r2, [r3, #62]
 654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 517              		.loc 1 655 10
 518 00d6 0023     		movs	r3, #0
 519              	.L15:
 656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 520              		.loc 1 656 1
 521 00d8 1846     		mov	r0, r3
 522 00da 1037     		adds	r7, r7, #16
 523              		.cfi_def_cfa_offset 8
 524 00dc BD46     		mov	sp, r7
 525              		.cfi_def_cfa_register 13
 526              		@ sp needed
 527 00de 80BD     		pop	{r7, pc}
 528              		.cfi_endproc
 529              	.LFE133:
 531              		.section	.text.HAL_UART_DeInit,"ax",%progbits
 532              		.align	1
 533              		.global	HAL_UART_DeInit
 534              		.syntax unified
 535              		.thumb
 536              		.thumb_func
 538              	HAL_UART_DeInit:
 539              	.LFB134:
 657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DeInitializes the UART peripheral.
 660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DeInit(UART_HandleTypeDef *huart)
 665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 540              		.loc 1 665 1
 541              		.cfi_startproc
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 22


 542              		@ args = 0, pretend = 0, frame = 8
 543              		@ frame_needed = 1, uses_anonymous_args = 0
 544 0000 80B5     		push	{r7, lr}
 545              		.cfi_def_cfa_offset 8
 546              		.cfi_offset 7, -8
 547              		.cfi_offset 14, -4
 548 0002 82B0     		sub	sp, sp, #8
 549              		.cfi_def_cfa_offset 16
 550 0004 00AF     		add	r7, sp, #0
 551              		.cfi_def_cfa_register 7
 552 0006 7860     		str	r0, [r7, #4]
 666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the UART handle allocation */
 667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart == NULL)
 553              		.loc 1 667 6
 554 0008 7B68     		ldr	r3, [r7, #4]
 555 000a 002B     		cmp	r3, #0
 556 000c 01D1     		bne	.L18
 668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 557              		.loc 1 669 12
 558 000e 0123     		movs	r3, #1
 559 0010 21E0     		b	.L19
 560              	.L18:
 670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
 673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
 674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 561              		.loc 1 675 17
 562 0012 7B68     		ldr	r3, [r7, #4]
 563 0014 2422     		movs	r2, #36
 564 0016 83F83D20 		strb	r2, [r3, #61]
 676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the Peripheral */
 678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE(huart);
 565              		.loc 1 678 3
 566 001a 7B68     		ldr	r3, [r7, #4]
 567 001c 1B68     		ldr	r3, [r3]
 568 001e DA68     		ldr	r2, [r3, #12]
 569 0020 7B68     		ldr	r3, [r7, #4]
 570 0022 1B68     		ldr	r3, [r3]
 571 0024 22F40052 		bic	r2, r2, #8192
 572 0028 DA60     		str	r2, [r3, #12]
 679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->MspDeInitCallback == NULL)
 682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->MspDeInitCallback = HAL_UART_MspDeInit;
 684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->MspDeInitCallback(huart);
 687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
 688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DeInit the low level hardware */
 689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_MspDeInit(huart);
 573              		.loc 1 689 3
 574 002a 7868     		ldr	r0, [r7, #4]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 23


 575 002c FFF7FEFF 		bl	HAL_UART_MspDeInit
 690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
 691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 576              		.loc 1 692 20
 577 0030 7B68     		ldr	r3, [r7, #4]
 578 0032 0022     		movs	r2, #0
 579 0034 1A64     		str	r2, [r3, #64]
 693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_RESET;
 580              		.loc 1 693 17
 581 0036 7B68     		ldr	r3, [r7, #4]
 582 0038 0022     		movs	r2, #0
 583 003a 83F83D20 		strb	r2, [r3, #61]
 694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_RESET;
 584              		.loc 1 694 18
 585 003e 7B68     		ldr	r3, [r7, #4]
 586 0040 0022     		movs	r2, #0
 587 0042 83F83E20 		strb	r2, [r3, #62]
 695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 588              		.loc 1 695 24
 589 0046 7B68     		ldr	r3, [r7, #4]
 590 0048 0022     		movs	r2, #0
 591 004a 1A63     		str	r2, [r3, #48]
 696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlock */
 698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 592              		.loc 1 698 3
 593 004c 7B68     		ldr	r3, [r7, #4]
 594 004e 0022     		movs	r2, #0
 595 0050 83F83C20 		strb	r2, [r3, #60]
 699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 596              		.loc 1 700 10
 597 0054 0023     		movs	r3, #0
 598              	.L19:
 701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 599              		.loc 1 701 1
 600 0056 1846     		mov	r0, r3
 601 0058 0837     		adds	r7, r7, #8
 602              		.cfi_def_cfa_offset 8
 603 005a BD46     		mov	sp, r7
 604              		.cfi_def_cfa_register 13
 605              		@ sp needed
 606 005c 80BD     		pop	{r7, pc}
 607              		.cfi_endproc
 608              	.LFE134:
 610              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 611              		.align	1
 612              		.weak	HAL_UART_MspInit
 613              		.syntax unified
 614              		.thumb
 615              		.thumb_func
 617              	HAL_UART_MspInit:
 618              	.LFB135:
 702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP Init.
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 24


 705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspInit(UART_HandleTypeDef *huart)
 710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 619              		.loc 1 710 1
 620              		.cfi_startproc
 621              		@ args = 0, pretend = 0, frame = 8
 622              		@ frame_needed = 1, uses_anonymous_args = 0
 623              		@ link register save eliminated.
 624 0000 80B4     		push	{r7}
 625              		.cfi_def_cfa_offset 4
 626              		.cfi_offset 7, -4
 627 0002 83B0     		sub	sp, sp, #12
 628              		.cfi_def_cfa_offset 16
 629 0004 00AF     		add	r7, sp, #0
 630              		.cfi_def_cfa_register 7
 631 0006 7860     		str	r0, [r7, #4]
 711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspInit could be implemented in the user file
 715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 632              		.loc 1 716 1
 633 0008 00BF     		nop
 634 000a 0C37     		adds	r7, r7, #12
 635              		.cfi_def_cfa_offset 4
 636 000c BD46     		mov	sp, r7
 637              		.cfi_def_cfa_register 13
 638              		@ sp needed
 639 000e 5DF8047B 		ldr	r7, [sp], #4
 640              		.cfi_restore 7
 641              		.cfi_def_cfa_offset 0
 642 0012 7047     		bx	lr
 643              		.cfi_endproc
 644              	.LFE135:
 646              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 647              		.align	1
 648              		.weak	HAL_UART_MspDeInit
 649              		.syntax unified
 650              		.thumb
 651              		.thumb_func
 653              	HAL_UART_MspDeInit:
 654              	.LFB136:
 717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART MSP DeInit.
 720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
 721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
 722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
 723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_MspDeInit(UART_HandleTypeDef *huart)
 725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 655              		.loc 1 725 1
 656              		.cfi_startproc
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 25


 657              		@ args = 0, pretend = 0, frame = 8
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660 0000 80B4     		push	{r7}
 661              		.cfi_def_cfa_offset 4
 662              		.cfi_offset 7, -4
 663 0002 83B0     		sub	sp, sp, #12
 664              		.cfi_def_cfa_offset 16
 665 0004 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
 667 0006 7860     		str	r0, [r7, #4]
 726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
 727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
 728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_MspDeInit could be implemented in the user file
 730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
 731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 668              		.loc 1 731 1
 669 0008 00BF     		nop
 670 000a 0C37     		adds	r7, r7, #12
 671              		.cfi_def_cfa_offset 4
 672 000c BD46     		mov	sp, r7
 673              		.cfi_def_cfa_register 13
 674              		@ sp needed
 675 000e 5DF8047B 		ldr	r7, [sp], #4
 676              		.cfi_restore 7
 677              		.cfi_def_cfa_offset 0
 678 0012 7047     		bx	lr
 679              		.cfi_endproc
 680              	.LFE136:
 682              		.section	.text.HAL_UART_Transmit,"ax",%progbits
 683              		.align	1
 684              		.global	HAL_UART_Transmit
 685              		.syntax unified
 686              		.thumb
 687              		.thumb_func
 689              	HAL_UART_Transmit:
 690              	.LFB137:
 732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
 734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Callback
 736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be registered
 739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
 742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback pointer to the Callback function
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 26


 751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef C
 754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                             pUART_CallbackTypeDef pCallback)
 755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = pCallback;
 774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = pCallback;
 778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = pCallback;
 782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = pCallback;
 786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = pCallback;
 790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = pCallback;
 794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = pCallback;
 798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = pCallback;
 802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 27


 808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (huart->gState == HAL_UART_STATE_RESET)
 822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = pCallback;
 827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = pCallback;
 831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Unregister an UART Callback
 859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART callaback is redirected to the weak predefined callback
 860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart uart handle
 861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  CallbackID ID of the callback to be unregistered
 862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This parameter can be one of the following values:
 863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_HALFCOMPLETE_CB_ID Tx Half Complete Callback ID
 864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_TX_COMPLETE_CB_ID Tx Complete Callback ID
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 28


 865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_HALFCOMPLETE_CB_ID Rx Half Complete Callback ID
 866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_RX_COMPLETE_CB_ID Rx Complete Callback ID
 867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ERROR_CB_ID Error Callback ID
 868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_COMPLETE_CB_ID Abort Complete Callback ID
 869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID Abort Transmit Complete Callback ID
 870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID Abort Receive Complete Callback ID
 871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPINIT_CB_ID MspInit Callback ID
 872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           @arg @ref HAL_UART_MSPDEINIT_CB_ID MspDeInit Callback ID
 873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterCallback(UART_HandleTypeDef *huart, HAL_UART_CallbackIDTypeDef
 876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_UART_STATE_READY == huart->gState)
 883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_HALFCOMPLETE_CB_ID :
 887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxHalfCpltCallback = HAL_UART_TxHalfCpltCallback;               /* Legacy weak  TxHa
 888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_TX_COMPLETE_CB_ID :
 891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->TxCpltCallback = HAL_UART_TxCpltCallback;                       /* Legacy weak TxCpl
 892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_HALFCOMPLETE_CB_ID :
 895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxHalfCpltCallback = HAL_UART_RxHalfCpltCallback;               /* Legacy weak RxHal
 896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_RX_COMPLETE_CB_ID :
 899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback = HAL_UART_RxCpltCallback;                       /* Legacy weak RxCpl
 900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ERROR_CB_ID :
 903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback = HAL_UART_ErrorCallback;                         /* Legacy weak Error
 904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_COMPLETE_CB_ID :
 907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortCpltCallback = HAL_UART_AbortCpltCallback;                 /* Legacy weak Abort
 908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_TRANSMIT_COMPLETE_CB_ID :
 911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak Abort
 912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_ABORT_RECEIVE_COMPLETE_CB_ID :
 915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->AbortReceiveCpltCallback = HAL_UART_AbortReceiveCpltCallback;   /* Legacy weak Abort
 916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;                             /* Legacy weak MspIn
 920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 29


 922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;                         /* Legacy weak MspDe
 924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else if (HAL_UART_STATE_RESET == huart->gState)
 936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     switch (CallbackID)
 938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPINIT_CB_ID :
 940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspInitCallback = HAL_UART_MspInit;
 941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       case HAL_UART_MSPDEINIT_CB_ID :
 944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->MspDeInitCallback = HAL_UART_MspDeInit;
 945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       default :
 948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Update the error code */
 949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Return error status */
 952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status =  HAL_ERROR;
 953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         break;
 954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Update the error code */
 959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Return error status */
 962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
 963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
 966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
 969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
 972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Register a User UART Rx Event Callback
 973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         To be used instead of the weak predefined callback
 974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
 975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pCallback Pointer to the Rx Event Callback function
 976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
 977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
 978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_RegisterRxEventCallback(UART_HandleTypeDef *huart, pUART_RxEventCallback
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 30


 979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
 981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (pCallback == NULL)
 983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_ERROR;
 987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
 990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
 992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = pCallback;
 995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
 997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
 999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
1007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UnRegister the UART Rx Event Callback
1011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Rx Event Callback is redirected to the weak HAL_UARTEx_RxEventCallback() predefine
1012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart     Uart handle
1013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_UnRegisterRxEventCallback(UART_HandleTypeDef *huart)
1016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
1017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status = HAL_OK;
1018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process locked */
1020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
1021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
1023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback = HAL_UARTEx_RxEventCallback; /* Legacy weak UART Rx Event Callback  */
1025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode |= HAL_UART_ERROR_INVALID_CALLBACK;
1029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  HAL_ERROR;
1031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Release Lock */
1034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
1035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return status;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 31


1036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
1037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
1038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
1041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group2 IO operation functions
1044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief UART Transmit and Receive functions
1045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
1046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
1047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### IO operation functions #####
1049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  ===============================================================================
1050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to manage the UART asynchronous
1051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     and Half duplex data transfers.
1052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) There are two modes of transfer:
1054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Blocking mode: The communication is performed in polling mode.
1055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL status of all data processing is returned by the same function
1056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            after finishing transfer.
1057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Non-Blocking mode: The communication is performed using Interrupts
1058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            or DMA, these API's return the HAL status.
1059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The end of the data processing will be indicated through the
1060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            dedicated UART IRQ when using Interrupt mode or the DMA IRQ when
1061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            using DMA mode.
1062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_TxCpltCallback(), HAL_UART_RxCpltCallback() user callbacks
1063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            will be executed respectively at the end of the transmit or receive process
1064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            The HAL_UART_ErrorCallback()user callback will be executed when a communication error is
1065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Blocking mode API's are :
1067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit()
1068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive()
1069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with Interrupt are :
1071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_IT()
1072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_IT()
1073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_IRQHandler()
1074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode API's with DMA are :
1076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Transmit_DMA()
1077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Receive_DMA()
1078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAPause()
1079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAResume()
1080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_DMAStop()
1081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A set of Transfer Complete Callbacks are provided in Non_Blocking mode:
1083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxHalfCpltCallback()
1084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_TxCpltCallback()
1085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxHalfCpltCallback()
1086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_RxCpltCallback()
1087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_ErrorCallback()
1088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) Non-Blocking mode transfers could be aborted using Abort API's :
1090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort()
1091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit()
1092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive()
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 32


1093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_Abort_IT()
1094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmit_IT()
1095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceive_IT()
1096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) For Abort services based on interrupts (HAL_UART_Abortxxx_IT), a set of Abort Complete Call
1098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortCpltCallback()
1099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortTransmitCpltCallback()
1100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UART_AbortReceiveCpltCallback()
1101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) A Rx Event Reception Callback (Rx event notification) is available for Non_Blocking modes o
1103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         (+) HAL_UARTEx_RxEventCallback()
1104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (#) In Non-Blocking mode transfers, possible errors are split into 2 categories.
1106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         Errors are handled as follows :
1107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Recoverable and non blocking : Transfer could go till end, but er
1108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            to be evaluated by user : this concerns Frame Error, Parity Error or Noise Error in Inte
1109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Received character is then retrieved and stored in Rx buffer, Error code is set to allow
1110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            and HAL_UART_ErrorCallback() user callback is executed. Transfer is kept ongoing on UART
1111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            If user wants to abort it, Abort services should be called by user.
1112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        (+) Error is considered as Blocking : Transfer could not be completed properly and is aborte
1113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            This concerns Overrun Error In Interrupt mode reception and all errors in DMA mode.
1114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error code is set to allow user to identify error type, and HAL_UART_ErrorCallback() use
1115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     -@- In the Half duplex communication, it is forbidden to run the transmit
1117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         and receive process in parallel, the UART state HAL_UART_STATE_BUSY_TX_RX can't be useful.
1118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
1120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
1121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in blocking mode.
1125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint3
1136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 691              		.loc 1 1136 1
 692              		.cfi_startproc
 693              		@ args = 0, pretend = 0, frame = 32
 694              		@ frame_needed = 1, uses_anonymous_args = 0
 695 0000 80B5     		push	{r7, lr}
 696              		.cfi_def_cfa_offset 8
 697              		.cfi_offset 7, -8
 698              		.cfi_offset 14, -4
 699 0002 8AB0     		sub	sp, sp, #40
 700              		.cfi_def_cfa_offset 48
 701 0004 02AF     		add	r7, sp, #8
 702              		.cfi_def_cfa 7, 40
 703 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 33


 704 0008 B960     		str	r1, [r7, #8]
 705 000a 3B60     		str	r3, [r7]
 706 000c 1346     		mov	r3, r2	@ movhi
 707 000e FB80     		strh	r3, [r7, #6]	@ movhi
1137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 708              		.loc 1 1139 12
 709 0010 0023     		movs	r3, #0
 710 0012 7B61     		str	r3, [r7, #20]
1140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 711              		.loc 1 1142 12
 712 0014 FB68     		ldr	r3, [r7, #12]
 713 0016 93F83D30 		ldrb	r3, [r3, #61]
 714 001a DBB2     		uxtb	r3, r3
 715              		.loc 1 1142 6
 716 001c 202B     		cmp	r3, #32
 717 001e 7CD1     		bne	.L23
1143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 718              		.loc 1 1144 8
 719 0020 BB68     		ldr	r3, [r7, #8]
 720 0022 002B     		cmp	r3, #0
 721 0024 02D0     		beq	.L24
 722              		.loc 1 1144 25 discriminator 1
 723 0026 FB88     		ldrh	r3, [r7, #6]
 724 0028 002B     		cmp	r3, #0
 725 002a 01D1     		bne	.L25
 726              	.L24:
1145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 727              		.loc 1 1146 15
 728 002c 0123     		movs	r3, #1
 729 002e 75E0     		b	.L26
 730              	.L25:
1147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 731              		.loc 1 1150 5
 732 0030 FB68     		ldr	r3, [r7, #12]
 733 0032 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 734 0036 012B     		cmp	r3, #1
 735 0038 01D1     		bne	.L27
 736              		.loc 1 1150 5 is_stmt 0 discriminator 1
 737 003a 0223     		movs	r3, #2
 738 003c 6EE0     		b	.L26
 739              	.L27:
 740              		.loc 1 1150 5 discriminator 2
 741 003e FB68     		ldr	r3, [r7, #12]
 742 0040 0122     		movs	r2, #1
 743 0042 83F83C20 		strb	r2, [r3, #60]
1151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 744              		.loc 1 1152 22 is_stmt 1 discriminator 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 34


 745 0046 FB68     		ldr	r3, [r7, #12]
 746 0048 0022     		movs	r2, #0
 747 004a 1A64     		str	r2, [r3, #64]
1153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 748              		.loc 1 1153 19 discriminator 2
 749 004c FB68     		ldr	r3, [r7, #12]
 750 004e 2122     		movs	r2, #33
 751 0050 83F83D20 		strb	r2, [r3, #61]
1154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 752              		.loc 1 1156 17 discriminator 2
 753 0054 FFF7FEFF 		bl	HAL_GetTick
 754 0058 7861     		str	r0, [r7, #20]
1157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 755              		.loc 1 1158 23 discriminator 2
 756 005a FB68     		ldr	r3, [r7, #12]
 757 005c FA88     		ldrh	r2, [r7, #6]	@ movhi
 758 005e 9A84     		strh	r2, [r3, #36]	@ movhi
1159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 759              		.loc 1 1159 24 discriminator 2
 760 0060 FB68     		ldr	r3, [r7, #12]
 761 0062 FA88     		ldrh	r2, [r7, #6]	@ movhi
 762 0064 DA84     		strh	r2, [r3, #38]	@ movhi
1160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
1162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 763              		.loc 1 1162 21 discriminator 2
 764 0066 FB68     		ldr	r3, [r7, #12]
 765 0068 9B68     		ldr	r3, [r3, #8]
 766              		.loc 1 1162 8 discriminator 2
 767 006a B3F5805F 		cmp	r3, #4096
 768 006e 08D1     		bne	.L28
 769              		.loc 1 1162 71 discriminator 1
 770 0070 FB68     		ldr	r3, [r7, #12]
 771 0072 1B69     		ldr	r3, [r3, #16]
 772              		.loc 1 1162 56 discriminator 1
 773 0074 002B     		cmp	r3, #0
 774 0076 04D1     		bne	.L28
1163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 775              		.loc 1 1164 19
 776 0078 0023     		movs	r3, #0
 777 007a FB61     		str	r3, [r7, #28]
1165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 778              		.loc 1 1165 19
 779 007c BB68     		ldr	r3, [r7, #8]
 780 007e BB61     		str	r3, [r7, #24]
 781 0080 03E0     		b	.L29
 782              	.L28:
1166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 783              		.loc 1 1169 19
 784 0082 BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 35


 785 0084 FB61     		str	r3, [r7, #28]
1170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 786              		.loc 1 1170 19
 787 0086 0023     		movs	r3, #0
 788 0088 BB61     		str	r3, [r7, #24]
 789              	.L29:
1171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 790              		.loc 1 1174 5
 791 008a FB68     		ldr	r3, [r7, #12]
 792 008c 0022     		movs	r2, #0
 793 008e 83F83C20 		strb	r2, [r3, #60]
1175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->TxXferCount > 0U)
 794              		.loc 1 1176 11
 795 0092 2AE0     		b	.L30
 796              	.L34:
1177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 797              		.loc 1 1178 11
 798 0094 3B68     		ldr	r3, [r7]
 799 0096 0093     		str	r3, [sp]
 800 0098 7B69     		ldr	r3, [r7, #20]
 801 009a 0022     		movs	r2, #0
 802 009c 8021     		movs	r1, #128
 803 009e F868     		ldr	r0, [r7, #12]
 804 00a0 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 805 00a4 0346     		mov	r3, r0
 806              		.loc 1 1178 10
 807 00a6 002B     		cmp	r3, #0
 808 00a8 01D0     		beq	.L31
1179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 809              		.loc 1 1180 16
 810 00aa 0323     		movs	r3, #3
 811 00ac 36E0     		b	.L26
 812              	.L31:
1181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 813              		.loc 1 1182 10
 814 00ae FB69     		ldr	r3, [r7, #28]
 815 00b0 002B     		cmp	r3, #0
 816 00b2 0BD1     		bne	.L32
1183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 817              		.loc 1 1184 42
 818 00b4 BB69     		ldr	r3, [r7, #24]
 819 00b6 1B88     		ldrh	r3, [r3]
 820              		.loc 1 1184 31
 821 00b8 1A46     		mov	r2, r3
 822              		.loc 1 1184 14
 823 00ba FB68     		ldr	r3, [r7, #12]
 824 00bc 1B68     		ldr	r3, [r3]
 825              		.loc 1 1184 31
 826 00be C2F30802 		ubfx	r2, r2, #0, #9
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 36


 827              		.loc 1 1184 29
 828 00c2 5A60     		str	r2, [r3, #4]
1185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 829              		.loc 1 1185 20
 830 00c4 BB69     		ldr	r3, [r7, #24]
 831 00c6 0233     		adds	r3, r3, #2
 832 00c8 BB61     		str	r3, [r7, #24]
 833 00ca 07E0     		b	.L33
 834              	.L32:
1186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 835              		.loc 1 1189 41
 836 00cc FB69     		ldr	r3, [r7, #28]
 837 00ce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 838              		.loc 1 1189 14
 839 00d0 FB68     		ldr	r3, [r7, #12]
 840 00d2 1B68     		ldr	r3, [r3]
 841              		.loc 1 1189 29
 842 00d4 5A60     		str	r2, [r3, #4]
1190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 843              		.loc 1 1190 19
 844 00d6 FB69     		ldr	r3, [r7, #28]
 845 00d8 0133     		adds	r3, r3, #1
 846 00da FB61     		str	r3, [r7, #28]
 847              	.L33:
1191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount--;
 848              		.loc 1 1192 12
 849 00dc FB68     		ldr	r3, [r7, #12]
 850 00de DB8C     		ldrh	r3, [r3, #38]	@ movhi
 851 00e0 9BB2     		uxth	r3, r3
 852              		.loc 1 1192 25
 853 00e2 013B     		subs	r3, r3, #1
 854 00e4 9AB2     		uxth	r2, r3
 855 00e6 FB68     		ldr	r3, [r7, #12]
 856 00e8 DA84     		strh	r2, [r3, #38]	@ movhi
 857              	.L30:
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 858              		.loc 1 1176 17
 859 00ea FB68     		ldr	r3, [r7, #12]
 860 00ec DB8C     		ldrh	r3, [r3, #38]	@ movhi
 861 00ee 9BB2     		uxth	r3, r3
1176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 862              		.loc 1 1176 11
 863 00f0 002B     		cmp	r3, #0
 864 00f2 CFD1     		bne	.L34
1193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 865              		.loc 1 1195 9
 866 00f4 3B68     		ldr	r3, [r7]
 867 00f6 0093     		str	r3, [sp]
 868 00f8 7B69     		ldr	r3, [r7, #20]
 869 00fa 0022     		movs	r2, #0
 870 00fc 4021     		movs	r1, #64
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 37


 871 00fe F868     		ldr	r0, [r7, #12]
 872 0100 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 873 0104 0346     		mov	r3, r0
 874              		.loc 1 1195 8
 875 0106 002B     		cmp	r3, #0
 876 0108 01D0     		beq	.L35
1196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_TIMEOUT;
 877              		.loc 1 1197 14
 878 010a 0323     		movs	r3, #3
 879 010c 06E0     		b	.L26
 880              	.L35:
1198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Tx process, restore huart->gState to Ready */
1201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 881              		.loc 1 1201 19
 882 010e FB68     		ldr	r3, [r7, #12]
 883 0110 2022     		movs	r2, #32
 884 0112 83F83D20 		strb	r2, [r3, #61]
1202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 885              		.loc 1 1203 12
 886 0116 0023     		movs	r3, #0
 887 0118 00E0     		b	.L26
 888              	.L23:
1204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 889              		.loc 1 1207 12
 890 011a 0223     		movs	r3, #2
 891              	.L26:
1208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 892              		.loc 1 1209 1
 893 011c 1846     		mov	r0, r3
 894 011e 2037     		adds	r7, r7, #32
 895              		.cfi_def_cfa_offset 8
 896 0120 BD46     		mov	sp, r7
 897              		.cfi_def_cfa_register 13
 898              		@ sp needed
 899 0122 80BD     		pop	{r7, pc}
 900              		.cfi_endproc
 901              	.LFE137:
 903              		.section	.text.HAL_UART_Receive,"ax",%progbits
 904              		.align	1
 905              		.global	HAL_UART_Receive
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 910              	HAL_UART_Receive:
 911              	.LFB138:
1210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in blocking mode.
1213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 38


1214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
1221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32
1224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 912              		.loc 1 1224 1
 913              		.cfi_startproc
 914              		@ args = 0, pretend = 0, frame = 32
 915              		@ frame_needed = 1, uses_anonymous_args = 0
 916 0000 80B5     		push	{r7, lr}
 917              		.cfi_def_cfa_offset 8
 918              		.cfi_offset 7, -8
 919              		.cfi_offset 14, -4
 920 0002 8AB0     		sub	sp, sp, #40
 921              		.cfi_def_cfa_offset 48
 922 0004 02AF     		add	r7, sp, #8
 923              		.cfi_def_cfa 7, 40
 924 0006 F860     		str	r0, [r7, #12]
 925 0008 B960     		str	r1, [r7, #8]
 926 000a 3B60     		str	r3, [r7]
 927 000c 1346     		mov	r3, r2	@ movhi
 928 000e FB80     		strh	r3, [r7, #6]	@ movhi
1225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart = 0U;
 929              		.loc 1 1227 12
 930 0010 0023     		movs	r3, #0
 931 0012 7B61     		str	r3, [r7, #20]
1228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 932              		.loc 1 1230 12
 933 0014 FB68     		ldr	r3, [r7, #12]
 934 0016 93F83E30 		ldrb	r3, [r3, #62]
 935 001a DBB2     		uxtb	r3, r3
 936              		.loc 1 1230 6
 937 001c 202B     		cmp	r3, #32
 938 001e 40F08C80 		bne	.L37
1231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 939              		.loc 1 1232 8
 940 0022 BB68     		ldr	r3, [r7, #8]
 941 0024 002B     		cmp	r3, #0
 942 0026 02D0     		beq	.L38
 943              		.loc 1 1232 25 discriminator 1
 944 0028 FB88     		ldrh	r3, [r7, #6]
 945 002a 002B     		cmp	r3, #0
 946 002c 01D1     		bne	.L39
 947              	.L38:
1233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 39


 948              		.loc 1 1234 15
 949 002e 0123     		movs	r3, #1
 950 0030 84E0     		b	.L40
 951              	.L39:
1235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 952              		.loc 1 1238 5
 953 0032 FB68     		ldr	r3, [r7, #12]
 954 0034 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 955 0038 012B     		cmp	r3, #1
 956 003a 01D1     		bne	.L41
 957              		.loc 1 1238 5 is_stmt 0 discriminator 1
 958 003c 0223     		movs	r3, #2
 959 003e 7DE0     		b	.L40
 960              	.L41:
 961              		.loc 1 1238 5 discriminator 2
 962 0040 FB68     		ldr	r3, [r7, #12]
 963 0042 0122     		movs	r2, #1
 964 0044 83F83C20 		strb	r2, [r3, #60]
1239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 965              		.loc 1 1240 22 is_stmt 1 discriminator 2
 966 0048 FB68     		ldr	r3, [r7, #12]
 967 004a 0022     		movs	r2, #0
 968 004c 1A64     		str	r2, [r3, #64]
1241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 969              		.loc 1 1241 20 discriminator 2
 970 004e FB68     		ldr	r3, [r7, #12]
 971 0050 2222     		movs	r2, #34
 972 0052 83F83E20 		strb	r2, [r3, #62]
1242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 973              		.loc 1 1242 26 discriminator 2
 974 0056 FB68     		ldr	r3, [r7, #12]
 975 0058 0022     		movs	r2, #0
 976 005a 1A63     		str	r2, [r3, #48]
1243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 977              		.loc 1 1245 17 discriminator 2
 978 005c FFF7FEFF 		bl	HAL_GetTick
 979 0060 7861     		str	r0, [r7, #20]
1246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize = Size;
 980              		.loc 1 1247 23 discriminator 2
 981 0062 FB68     		ldr	r3, [r7, #12]
 982 0064 FA88     		ldrh	r2, [r7, #6]	@ movhi
 983 0066 9A85     		strh	r2, [r3, #44]	@ movhi
1248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 984              		.loc 1 1248 24 discriminator 2
 985 0068 FB68     		ldr	r3, [r7, #12]
 986 006a FA88     		ldrh	r2, [r7, #6]	@ movhi
 987 006c DA85     		strh	r2, [r3, #46]	@ movhi
1249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 40


 988              		.loc 1 1251 21 discriminator 2
 989 006e FB68     		ldr	r3, [r7, #12]
 990 0070 9B68     		ldr	r3, [r3, #8]
 991              		.loc 1 1251 8 discriminator 2
 992 0072 B3F5805F 		cmp	r3, #4096
 993 0076 08D1     		bne	.L42
 994              		.loc 1 1251 71 discriminator 1
 995 0078 FB68     		ldr	r3, [r7, #12]
 996 007a 1B69     		ldr	r3, [r3, #16]
 997              		.loc 1 1251 56 discriminator 1
 998 007c 002B     		cmp	r3, #0
 999 007e 04D1     		bne	.L42
1252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 1000              		.loc 1 1253 19
 1001 0080 0023     		movs	r3, #0
 1002 0082 FB61     		str	r3, [r7, #28]
1254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 1003              		.loc 1 1254 19
 1004 0084 BB68     		ldr	r3, [r7, #8]
 1005 0086 BB61     		str	r3, [r7, #24]
 1006 0088 03E0     		b	.L43
 1007              	.L42:
1255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 1008              		.loc 1 1258 19
 1009 008a BB68     		ldr	r3, [r7, #8]
 1010 008c FB61     		str	r3, [r7, #28]
1259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 1011              		.loc 1 1259 19
 1012 008e 0023     		movs	r3, #0
 1013 0090 BB61     		str	r3, [r7, #24]
 1014              	.L43:
1260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1015              		.loc 1 1263 5
 1016 0092 FB68     		ldr	r3, [r7, #12]
 1017 0094 0022     		movs	r2, #0
 1018 0096 83F83C20 		strb	r2, [r3, #60]
1264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check the remain data to be received */
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 1019              		.loc 1 1266 11
 1020 009a 43E0     		b	.L44
 1021              	.L51:
1267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 1022              		.loc 1 1268 11
 1023 009c 3B68     		ldr	r3, [r7]
 1024 009e 0093     		str	r3, [sp]
 1025 00a0 7B69     		ldr	r3, [r7, #20]
 1026 00a2 0022     		movs	r2, #0
 1027 00a4 2021     		movs	r1, #32
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 41


 1028 00a6 F868     		ldr	r0, [r7, #12]
 1029 00a8 FFF7FEFF 		bl	UART_WaitOnFlagUntilTimeout
 1030 00ac 0346     		mov	r3, r0
 1031              		.loc 1 1268 10
 1032 00ae 002B     		cmp	r3, #0
 1033 00b0 01D0     		beq	.L45
1269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 1034              		.loc 1 1270 16
 1035 00b2 0323     		movs	r3, #3
 1036 00b4 42E0     		b	.L40
 1037              	.L45:
1271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (pdata8bits == NULL)
 1038              		.loc 1 1272 10
 1039 00b6 FB69     		ldr	r3, [r7, #28]
 1040 00b8 002B     		cmp	r3, #0
 1041 00ba 0CD1     		bne	.L46
1273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 1042              		.loc 1 1274 40
 1043 00bc FB68     		ldr	r3, [r7, #12]
 1044 00be 1B68     		ldr	r3, [r3]
 1045              		.loc 1 1274 50
 1046 00c0 5B68     		ldr	r3, [r3, #4]
 1047              		.loc 1 1274 24
 1048 00c2 9BB2     		uxth	r3, r3
 1049 00c4 C3F30803 		ubfx	r3, r3, #0, #9
 1050 00c8 9AB2     		uxth	r2, r3
 1051              		.loc 1 1274 22
 1052 00ca BB69     		ldr	r3, [r7, #24]
 1053 00cc 1A80     		strh	r2, [r3]	@ movhi
1275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata16bits++;
 1054              		.loc 1 1275 20
 1055 00ce BB69     		ldr	r3, [r7, #24]
 1056 00d0 0233     		adds	r3, r3, #2
 1057 00d2 BB61     		str	r3, [r7, #24]
 1058 00d4 1FE0     		b	.L47
 1059              	.L46:
1276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORD
 1060              		.loc 1 1279 25
 1061 00d6 FB68     		ldr	r3, [r7, #12]
 1062 00d8 9B68     		ldr	r3, [r3, #8]
 1063              		.loc 1 1279 12
 1064 00da B3F5805F 		cmp	r3, #4096
 1065 00de 07D0     		beq	.L48
 1066              		.loc 1 1279 76 discriminator 1
 1067 00e0 FB68     		ldr	r3, [r7, #12]
 1068 00e2 9B68     		ldr	r3, [r3, #8]
 1069              		.loc 1 1279 60 discriminator 1
 1070 00e4 002B     		cmp	r3, #0
 1071 00e6 0AD1     		bne	.L49
 1072              		.loc 1 1279 126 discriminator 2
 1073 00e8 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 42


 1074 00ea 1B69     		ldr	r3, [r3, #16]
 1075              		.loc 1 1279 111 discriminator 2
 1076 00ec 002B     		cmp	r3, #0
 1077 00ee 06D1     		bne	.L49
 1078              	.L48:
1280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 1079              		.loc 1 1281 40
 1080 00f0 FB68     		ldr	r3, [r7, #12]
 1081 00f2 1B68     		ldr	r3, [r3]
 1082              		.loc 1 1281 50
 1083 00f4 5B68     		ldr	r3, [r3, #4]
 1084              		.loc 1 1281 25
 1085 00f6 DAB2     		uxtb	r2, r3
 1086              		.loc 1 1281 23
 1087 00f8 FB69     		ldr	r3, [r7, #28]
 1088 00fa 1A70     		strb	r2, [r3]
 1089 00fc 08E0     		b	.L50
 1090              	.L49:
1282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 1091              		.loc 1 1285 40
 1092 00fe FB68     		ldr	r3, [r7, #12]
 1093 0100 1B68     		ldr	r3, [r3]
 1094              		.loc 1 1285 50
 1095 0102 5B68     		ldr	r3, [r3, #4]
 1096              		.loc 1 1285 25
 1097 0104 DBB2     		uxtb	r3, r3
 1098 0106 03F07F03 		and	r3, r3, #127
 1099 010a DAB2     		uxtb	r2, r3
 1100              		.loc 1 1285 23
 1101 010c FB69     		ldr	r3, [r7, #28]
 1102 010e 1A70     		strb	r2, [r3]
 1103              	.L50:
1286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         pdata8bits++;
 1104              		.loc 1 1287 19
 1105 0110 FB69     		ldr	r3, [r7, #28]
 1106 0112 0133     		adds	r3, r3, #1
 1107 0114 FB61     		str	r3, [r7, #28]
 1108              	.L47:
1288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount--;
 1109              		.loc 1 1289 12
 1110 0116 FB68     		ldr	r3, [r7, #12]
 1111 0118 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1112 011a 9BB2     		uxth	r3, r3
 1113              		.loc 1 1289 25
 1114 011c 013B     		subs	r3, r3, #1
 1115 011e 9AB2     		uxth	r2, r3
 1116 0120 FB68     		ldr	r3, [r7, #12]
 1117 0122 DA85     		strh	r2, [r3, #46]	@ movhi
 1118              	.L44:
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1119              		.loc 1 1266 17
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 43


 1120 0124 FB68     		ldr	r3, [r7, #12]
 1121 0126 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 1122 0128 9BB2     		uxth	r3, r3
1266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 1123              		.loc 1 1266 11
 1124 012a 002B     		cmp	r3, #0
 1125 012c B6D1     		bne	.L51
1290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 1126              		.loc 1 1293 20
 1127 012e FB68     		ldr	r3, [r7, #12]
 1128 0130 2022     		movs	r2, #32
 1129 0132 83F83E20 		strb	r2, [r3, #62]
1294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1130              		.loc 1 1295 12
 1131 0136 0023     		movs	r3, #0
 1132 0138 00E0     		b	.L40
 1133              	.L37:
1296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1134              		.loc 1 1299 12
 1135 013a 0223     		movs	r3, #2
 1136              	.L40:
1300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1137              		.loc 1 1301 1
 1138 013c 1846     		mov	r0, r3
 1139 013e 2037     		adds	r7, r7, #32
 1140              		.cfi_def_cfa_offset 8
 1141 0140 BD46     		mov	sp, r7
 1142              		.cfi_def_cfa_register 13
 1143              		@ sp needed
 1144 0142 80BD     		pop	{r7, pc}
 1145              		.cfi_endproc
 1146              	.LFE138:
 1148              		.section	.text.HAL_UART_Transmit_IT,"ax",%progbits
 1149              		.align	1
 1150              		.global	HAL_UART_Transmit_IT
 1151              		.syntax unified
 1152              		.thumb
 1153              		.thumb_func
 1155              	HAL_UART_Transmit_IT:
 1156              	.LFB139:
1302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
1305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 44


1311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1157              		.loc 1 1315 1
 1158              		.cfi_startproc
 1159              		@ args = 0, pretend = 0, frame = 16
 1160              		@ frame_needed = 1, uses_anonymous_args = 0
 1161              		@ link register save eliminated.
 1162 0000 80B4     		push	{r7}
 1163              		.cfi_def_cfa_offset 4
 1164              		.cfi_offset 7, -4
 1165 0002 85B0     		sub	sp, sp, #20
 1166              		.cfi_def_cfa_offset 24
 1167 0004 00AF     		add	r7, sp, #0
 1168              		.cfi_def_cfa_register 7
 1169 0006 F860     		str	r0, [r7, #12]
 1170 0008 B960     		str	r1, [r7, #8]
 1171 000a 1346     		mov	r3, r2
 1172 000c FB80     		strh	r3, [r7, #6]	@ movhi
1316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1173              		.loc 1 1317 12
 1174 000e FB68     		ldr	r3, [r7, #12]
 1175 0010 93F83D30 		ldrb	r3, [r3, #61]
 1176 0014 DBB2     		uxtb	r3, r3
 1177              		.loc 1 1317 6
 1178 0016 202B     		cmp	r3, #32
 1179 0018 30D1     		bne	.L53
1318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1180              		.loc 1 1319 8
 1181 001a BB68     		ldr	r3, [r7, #8]
 1182 001c 002B     		cmp	r3, #0
 1183 001e 02D0     		beq	.L54
 1184              		.loc 1 1319 25 discriminator 1
 1185 0020 FB88     		ldrh	r3, [r7, #6]
 1186 0022 002B     		cmp	r3, #0
 1187 0024 01D1     		bne	.L55
 1188              	.L54:
1320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1189              		.loc 1 1321 14
 1190 0026 0123     		movs	r3, #1
 1191 0028 29E0     		b	.L56
 1192              	.L55:
1322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1193              		.loc 1 1325 5
 1194 002a FB68     		ldr	r3, [r7, #12]
 1195 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1196 0030 012B     		cmp	r3, #1
 1197 0032 01D1     		bne	.L57
 1198              		.loc 1 1325 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 45


 1199 0034 0223     		movs	r3, #2
 1200 0036 22E0     		b	.L56
 1201              	.L57:
 1202              		.loc 1 1325 5 discriminator 2
 1203 0038 FB68     		ldr	r3, [r7, #12]
 1204 003a 0122     		movs	r2, #1
 1205 003c 83F83C20 		strb	r2, [r3, #60]
1326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1206              		.loc 1 1327 23 is_stmt 1 discriminator 2
 1207 0040 FB68     		ldr	r3, [r7, #12]
 1208 0042 BA68     		ldr	r2, [r7, #8]
 1209 0044 1A62     		str	r2, [r3, #32]
1328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1210              		.loc 1 1328 23 discriminator 2
 1211 0046 FB68     		ldr	r3, [r7, #12]
 1212 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1213 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1214              		.loc 1 1329 24 discriminator 2
 1215 004c FB68     		ldr	r3, [r7, #12]
 1216 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1217 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1218              		.loc 1 1331 22 discriminator 2
 1219 0052 FB68     		ldr	r3, [r7, #12]
 1220 0054 0022     		movs	r2, #0
 1221 0056 1A64     		str	r2, [r3, #64]
1332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1222              		.loc 1 1332 19 discriminator 2
 1223 0058 FB68     		ldr	r3, [r7, #12]
 1224 005a 2122     		movs	r2, #33
 1225 005c 83F83D20 		strb	r2, [r3, #61]
1333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1226              		.loc 1 1335 5 discriminator 2
 1227 0060 FB68     		ldr	r3, [r7, #12]
 1228 0062 0022     		movs	r2, #0
 1229 0064 83F83C20 		strb	r2, [r3, #60]
1336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit data register empty Interrupt */
1338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_ENABLE_IT(huart, UART_IT_TXE);
 1230              		.loc 1 1338 5 discriminator 2
 1231 0068 FB68     		ldr	r3, [r7, #12]
 1232 006a 1B68     		ldr	r3, [r3]
 1233 006c DA68     		ldr	r2, [r3, #12]
 1234 006e FB68     		ldr	r3, [r7, #12]
 1235 0070 1B68     		ldr	r3, [r3]
 1236 0072 42F08002 		orr	r2, r2, #128
 1237 0076 DA60     		str	r2, [r3, #12]
1339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1238              		.loc 1 1340 12 discriminator 2
 1239 0078 0023     		movs	r3, #0
 1240 007a 00E0     		b	.L56
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 46


 1241              	.L53:
1341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1242              		.loc 1 1344 12
 1243 007c 0223     		movs	r3, #2
 1244              	.L56:
1345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1245              		.loc 1 1346 1
 1246 007e 1846     		mov	r0, r3
 1247 0080 1437     		adds	r7, r7, #20
 1248              		.cfi_def_cfa_offset 4
 1249 0082 BD46     		mov	sp, r7
 1250              		.cfi_def_cfa_register 13
 1251              		@ sp needed
 1252 0084 5DF8047B 		ldr	r7, [sp], #4
 1253              		.cfi_restore 7
 1254              		.cfi_def_cfa_offset 0
 1255 0088 7047     		bx	lr
 1256              		.cfi_endproc
 1257              	.LFE139:
 1259              		.section	.text.HAL_UART_Receive_IT,"ax",%progbits
 1260              		.align	1
 1261              		.global	HAL_UART_Receive_IT
 1262              		.syntax unified
 1263              		.thumb
 1264              		.thumb_func
 1266              	HAL_UART_Receive_IT:
 1267              	.LFB140:
1347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode.
1350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1268              		.loc 1 1360 1
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 16
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272 0000 80B5     		push	{r7, lr}
 1273              		.cfi_def_cfa_offset 8
 1274              		.cfi_offset 7, -8
 1275              		.cfi_offset 14, -4
 1276 0002 84B0     		sub	sp, sp, #16
 1277              		.cfi_def_cfa_offset 24
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 47


 1280 0006 F860     		str	r0, [r7, #12]
 1281 0008 B960     		str	r1, [r7, #8]
 1282 000a 1346     		mov	r3, r2
 1283 000c FB80     		strh	r3, [r7, #6]	@ movhi
1361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1284              		.loc 1 1362 12
 1285 000e FB68     		ldr	r3, [r7, #12]
 1286 0010 93F83E30 		ldrb	r3, [r3, #62]
 1287 0014 DBB2     		uxtb	r3, r3
 1288              		.loc 1 1362 6
 1289 0016 202B     		cmp	r3, #32
 1290 0018 1DD1     		bne	.L59
1363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1291              		.loc 1 1364 8
 1292 001a BB68     		ldr	r3, [r7, #8]
 1293 001c 002B     		cmp	r3, #0
 1294 001e 02D0     		beq	.L60
 1295              		.loc 1 1364 25 discriminator 1
 1296 0020 FB88     		ldrh	r3, [r7, #6]
 1297 0022 002B     		cmp	r3, #0
 1298 0024 01D1     		bne	.L61
 1299              	.L60:
1365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1300              		.loc 1 1366 14
 1301 0026 0123     		movs	r3, #1
 1302 0028 16E0     		b	.L62
 1303              	.L61:
1367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1304              		.loc 1 1370 5
 1305 002a FB68     		ldr	r3, [r7, #12]
 1306 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1307 0030 012B     		cmp	r3, #1
 1308 0032 01D1     		bne	.L63
 1309              		.loc 1 1370 5 is_stmt 0 discriminator 1
 1310 0034 0223     		movs	r3, #2
 1311 0036 0FE0     		b	.L62
 1312              	.L63:
 1313              		.loc 1 1370 5 discriminator 2
 1314 0038 FB68     		ldr	r3, [r7, #12]
 1315 003a 0122     		movs	r2, #1
 1316 003c 83F83C20 		strb	r2, [r3, #60]
1371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1317              		.loc 1 1373 26 is_stmt 1 discriminator 2
 1318 0040 FB68     		ldr	r3, [r7, #12]
 1319 0042 0022     		movs	r2, #0
 1320 0044 1A63     		str	r2, [r3, #48]
1374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_IT(huart, pData, Size));
 1321              		.loc 1 1375 13 discriminator 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 48


 1322 0046 FB88     		ldrh	r3, [r7, #6]
 1323 0048 1A46     		mov	r2, r3
 1324 004a B968     		ldr	r1, [r7, #8]
 1325 004c F868     		ldr	r0, [r7, #12]
 1326 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 1327 0052 0346     		mov	r3, r0
 1328 0054 00E0     		b	.L62
 1329              	.L59:
1376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1330              		.loc 1 1379 12
 1331 0056 0223     		movs	r3, #2
 1332              	.L62:
1380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1333              		.loc 1 1381 1
 1334 0058 1846     		mov	r0, r3
 1335 005a 1037     		adds	r7, r7, #16
 1336              		.cfi_def_cfa_offset 8
 1337 005c BD46     		mov	sp, r7
 1338              		.cfi_def_cfa_register 13
 1339              		@ sp needed
 1340 005e 80BD     		pop	{r7, pc}
 1341              		.cfi_endproc
 1342              	.LFE140:
 1344              		.section	.text.HAL_UART_Transmit_DMA,"ax",%progbits
 1345              		.align	1
 1346              		.global	HAL_UART_Transmit_DMA
 1347              		.syntax unified
 1348              		.thumb
 1349              		.thumb_func
 1351              	HAL_UART_Transmit_DMA:
 1352              	.LFB141:
1382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in DMA mode.
1385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the sent data is handled as a set of u16. In this case, Size must indicate the number
1387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 provided through pData.
1388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be sent
1392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Transmit_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1353              		.loc 1 1395 1
 1354              		.cfi_startproc
 1355              		@ args = 0, pretend = 0, frame = 48
 1356              		@ frame_needed = 1, uses_anonymous_args = 0
 1357 0000 80B5     		push	{r7, lr}
 1358              		.cfi_def_cfa_offset 8
 1359              		.cfi_offset 7, -8
 1360              		.cfi_offset 14, -4
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 49


 1361 0002 8CB0     		sub	sp, sp, #48
 1362              		.cfi_def_cfa_offset 56
 1363 0004 00AF     		add	r7, sp, #0
 1364              		.cfi_def_cfa_register 7
 1365 0006 F860     		str	r0, [r7, #12]
 1366 0008 B960     		str	r1, [r7, #8]
 1367 000a 1346     		mov	r3, r2
 1368 000c FB80     		strh	r3, [r7, #6]	@ movhi
1396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
1397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is not already ongoing */
1399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_READY)
 1369              		.loc 1 1399 12
 1370 000e FB68     		ldr	r3, [r7, #12]
 1371 0010 93F83D30 		ldrb	r3, [r3, #61]
 1372 0014 DBB2     		uxtb	r3, r3
 1373              		.loc 1 1399 6
 1374 0016 202B     		cmp	r3, #32
 1375 0018 65D1     		bne	.L65
1400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1376              		.loc 1 1401 16
 1377 001a BB68     		ldr	r3, [r7, #8]
 1378              		.loc 1 1401 8
 1379 001c 002B     		cmp	r3, #0
 1380 001e 02D0     		beq	.L66
 1381              		.loc 1 1401 25 discriminator 1
 1382 0020 FB88     		ldrh	r3, [r7, #6]
 1383 0022 002B     		cmp	r3, #0
 1384 0024 01D1     		bne	.L67
 1385              	.L66:
1402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 1386              		.loc 1 1403 14
 1387 0026 0123     		movs	r3, #1
 1388 0028 5EE0     		b	.L68
 1389              	.L67:
1404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1390              		.loc 1 1407 5
 1391 002a FB68     		ldr	r3, [r7, #12]
 1392 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1393 0030 012B     		cmp	r3, #1
 1394 0032 01D1     		bne	.L69
 1395              		.loc 1 1407 5 is_stmt 0 discriminator 1
 1396 0034 0223     		movs	r3, #2
 1397 0036 57E0     		b	.L68
 1398              	.L69:
 1399              		.loc 1 1407 5 discriminator 2
 1400 0038 FB68     		ldr	r3, [r7, #12]
 1401 003a 0122     		movs	r2, #1
 1402 003c 83F83C20 		strb	r2, [r3, #60]
1408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->pTxBuffPtr = pData;
 1403              		.loc 1 1409 23 is_stmt 1 discriminator 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 50


 1404 0040 BA68     		ldr	r2, [r7, #8]
 1405 0042 FB68     		ldr	r3, [r7, #12]
 1406 0044 1A62     		str	r2, [r3, #32]
1410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferSize = Size;
 1407              		.loc 1 1410 23 discriminator 2
 1408 0046 FB68     		ldr	r3, [r7, #12]
 1409 0048 FA88     		ldrh	r2, [r7, #6]	@ movhi
 1410 004a 9A84     		strh	r2, [r3, #36]	@ movhi
1411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = Size;
 1411              		.loc 1 1411 24 discriminator 2
 1412 004c FB68     		ldr	r3, [r7, #12]
 1413 004e FA88     		ldrh	r2, [r7, #6]	@ movhi
 1414 0050 DA84     		strh	r2, [r3, #38]	@ movhi
1412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 1415              		.loc 1 1413 22 discriminator 2
 1416 0052 FB68     		ldr	r3, [r7, #12]
 1417 0054 0022     		movs	r2, #0
 1418 0056 1A64     		str	r2, [r3, #64]
1414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_BUSY_TX;
 1419              		.loc 1 1414 19 discriminator 2
 1420 0058 FB68     		ldr	r3, [r7, #12]
 1421 005a 2122     		movs	r2, #33
 1422 005c 83F83D20 		strb	r2, [r3, #61]
1415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA transfer complete callback */
1417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferCpltCallback = UART_DMATransmitCplt;
 1423              		.loc 1 1417 10 discriminator 2
 1424 0060 FB68     		ldr	r3, [r7, #12]
 1425 0062 5B6B     		ldr	r3, [r3, #52]
 1426              		.loc 1 1417 37 discriminator 2
 1427 0064 224A     		ldr	r2, .L73
 1428 0066 DA63     		str	r2, [r3, #60]
1418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the UART DMA Half transfer complete callback */
1420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferHalfCpltCallback = UART_DMATxHalfCplt;
 1429              		.loc 1 1420 10 discriminator 2
 1430 0068 FB68     		ldr	r3, [r7, #12]
 1431 006a 5B6B     		ldr	r3, [r3, #52]
 1432              		.loc 1 1420 41 discriminator 2
 1433 006c 214A     		ldr	r2, .L73+4
 1434 006e 1A64     		str	r2, [r3, #64]
1421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA error callback */
1423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferErrorCallback = UART_DMAError;
 1435              		.loc 1 1423 10 discriminator 2
 1436 0070 FB68     		ldr	r3, [r7, #12]
 1437 0072 5B6B     		ldr	r3, [r3, #52]
 1438              		.loc 1 1423 38 discriminator 2
 1439 0074 204A     		ldr	r2, .L73+8
 1440 0076 DA64     		str	r2, [r3, #76]
1424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set the DMA abort callback */
1426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->hdmatx->XferAbortCallback = NULL;
 1441              		.loc 1 1426 10 discriminator 2
 1442 0078 FB68     		ldr	r3, [r7, #12]
 1443 007a 5B6B     		ldr	r3, [r3, #52]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 51


 1444              		.loc 1 1426 38 discriminator 2
 1445 007c 0022     		movs	r2, #0
 1446 007e 1A65     		str	r2, [r3, #80]
1427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART transmit DMA stream */
1429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tmp = (uint32_t *)&pData;
 1447              		.loc 1 1429 9 discriminator 2
 1448 0080 07F10803 		add	r3, r7, #8
 1449 0084 FB62     		str	r3, [r7, #44]
1430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_DMA_Start_IT(huart->hdmatx, *(uint32_t *)tmp, (uint32_t)&huart->Instance->DR, Size);
 1450              		.loc 1 1430 5 discriminator 2
 1451 0086 FB68     		ldr	r3, [r7, #12]
 1452 0088 586B     		ldr	r0, [r3, #52]
 1453 008a FB6A     		ldr	r3, [r7, #44]
 1454 008c 1968     		ldr	r1, [r3]
 1455              		.loc 1 1430 71 discriminator 2
 1456 008e FB68     		ldr	r3, [r7, #12]
 1457 0090 1B68     		ldr	r3, [r3]
 1458              		.loc 1 1430 65 discriminator 2
 1459 0092 0433     		adds	r3, r3, #4
 1460              		.loc 1 1430 5 discriminator 2
 1461 0094 1A46     		mov	r2, r3
 1462 0096 FB88     		ldrh	r3, [r7, #6]
 1463 0098 FFF7FEFF 		bl	HAL_DMA_Start_IT
1431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the TC flag in the SR register by writing 0 to it */
1433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_FLAG(huart, UART_FLAG_TC);
 1464              		.loc 1 1433 5 discriminator 2
 1465 009c FB68     		ldr	r3, [r7, #12]
 1466 009e 1B68     		ldr	r3, [r3]
 1467 00a0 6FF04002 		mvn	r2, #64
 1468 00a4 1A60     		str	r2, [r3]
1434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Unlocked */
1436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 1469              		.loc 1 1436 5 discriminator 2
 1470 00a6 FB68     		ldr	r3, [r7, #12]
 1471 00a8 0022     		movs	r2, #0
 1472 00aa 83F83C20 		strb	r2, [r3, #60]
 1473              	.L72:
 1474              	.LBB320:
1437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the DMA transfer for transmit request by setting the DMAT bit
1439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
1440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1475              		.loc 1 1440 5 discriminator 1
 1476 00ae FB68     		ldr	r3, [r7, #12]
 1477 00b0 1B68     		ldr	r3, [r3]
 1478 00b2 1433     		adds	r3, r3, #20
 1479 00b4 BB61     		str	r3, [r7, #24]
 1480              	.LBB321:
 1481              	.LBB322:
 1482              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 52


   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 53


  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 54


 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 55


 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 56


 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 57


 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 58


 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 59


 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 60


 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 61


 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 62


 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 63


 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 64


 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 65


 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 66


 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 67


 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 68


 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 69


 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
1002:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1003:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1004:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1005:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1006:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
1007:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
1008:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
1009:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
1010:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1011:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CLZ             (uint8_t)__builtin_clz
1012:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1013:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1014:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
1015:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
1016:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
1017:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
1018:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1019:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
1020:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
1021:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1022:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
1023:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1024:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
1025:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1026:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1027:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1028:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1029:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
1030:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 70


1031:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1032:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1033:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1034:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1035:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1036:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
1037:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1038:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1039:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1040:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1041:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
1042:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
1043:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1044:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
1045:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1046:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
1047:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1048:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1049:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1050:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
1051:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
1052:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
1053:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
1054:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
1055:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
1056:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
1057:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1058:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
1059:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1060:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1061:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1062:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1063:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
1064:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
1065:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
1066:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
1067:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1068:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
1069:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1070:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
1071:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 1483              		.loc 2 1072 4 discriminator 1
 1484 00b6 BB69     		ldr	r3, [r7, #24]
 1485              		.syntax unified
 1486              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1487 00b8 53E8003F 		ldrex r3, [r3]
 1488              	@ 0 "" 2
 1489              		.thumb
 1490              		.syntax unified
 1491 00bc 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1492              		.loc 2 1073 10 discriminator 1
 1493 00be 7B69     		ldr	r3, [r7, #20]
 1494              	.LBE322:
 1495              	.LBE321:
 1496              		.loc 1 1440 5 discriminator 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 71


 1497 00c0 43F08003 		orr	r3, r3, #128
 1498 00c4 BB62     		str	r3, [r7, #40]
 1499 00c6 FB68     		ldr	r3, [r7, #12]
 1500 00c8 1B68     		ldr	r3, [r3]
 1501 00ca 1433     		adds	r3, r3, #20
 1502 00cc BA6A     		ldr	r2, [r7, #40]
 1503 00ce 7A62     		str	r2, [r7, #36]
 1504 00d0 3B62     		str	r3, [r7, #32]
 1505              	.LBB323:
 1506              	.LBB324:
1074:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1075:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1076:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1077:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1078:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
1079:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
1080:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1081:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1082:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1083:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1084:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1085:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
1086:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1087:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1088:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1089:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1090:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1091:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1092:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1093:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1094:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1095:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
1096:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
1097:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1098:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1099:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1100:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1101:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1102:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
1103:Drivers/CMSIS/Include/cmsis_gcc.h **** {
1104:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1105:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1106:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
1107:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
1108:Drivers/CMSIS/Include/cmsis_gcc.h **** }
1109:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1110:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1111:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
1112:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
1113:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
1114:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
1115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
1116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
1117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
1118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
1119:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
1120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 72


1121:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
1122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 1507              		.loc 2 1123 4 discriminator 1
 1508 00d2 396A     		ldr	r1, [r7, #32]
 1509 00d4 7A6A     		ldr	r2, [r7, #36]
 1510              		.syntax unified
 1511              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1512 00d6 41E80023 		strex r3, r2, [r1]
 1513              	@ 0 "" 2
 1514              		.thumb
 1515              		.syntax unified
 1516 00da FB61     		str	r3, [r7, #28]
1124:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1517              		.loc 2 1124 10 discriminator 1
 1518 00dc FB69     		ldr	r3, [r7, #28]
 1519              	.LBE324:
 1520              	.LBE323:
 1521              		.loc 1 1440 5 discriminator 1
 1522 00de 002B     		cmp	r3, #0
 1523 00e0 E5D1     		bne	.L72
 1524              	.LBE320:
1441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 1525              		.loc 1 1442 12
 1526 00e2 0023     		movs	r3, #0
 1527 00e4 00E0     		b	.L68
 1528              	.L65:
1443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1529              		.loc 1 1446 12
 1530 00e6 0223     		movs	r3, #2
 1531              	.L68:
1447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1532              		.loc 1 1448 1
 1533 00e8 1846     		mov	r0, r3
 1534 00ea 3037     		adds	r7, r7, #48
 1535              		.cfi_def_cfa_offset 8
 1536 00ec BD46     		mov	sp, r7
 1537              		.cfi_def_cfa_register 13
 1538              		@ sp needed
 1539 00ee 80BD     		pop	{r7, pc}
 1540              	.L74:
 1541              		.align	2
 1542              	.L73:
 1543 00f0 00000000 		.word	UART_DMATransmitCplt
 1544 00f4 00000000 		.word	UART_DMATxHalfCplt
 1545 00f8 00000000 		.word	UART_DMAError
 1546              		.cfi_endproc
 1547              	.LFE141:
 1549              		.section	.text.HAL_UART_Receive_DMA,"ax",%progbits
 1550              		.align	1
 1551              		.global	HAL_UART_Receive_DMA
 1552              		.syntax unified
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 73


 1553              		.thumb
 1554              		.thumb_func
 1556              	HAL_UART_Receive_DMA:
 1557              	.LFB142:
1449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in DMA mode.
1452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M1-
1453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of u16. In this case, Size must indicate the numb
1454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of u16 available through pData.
1455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
1456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART module.
1457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
1458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
1459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1) the received data contains the parity bit.
1460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
1463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1558              		.loc 1 1463 1
 1559              		.cfi_startproc
 1560              		@ args = 0, pretend = 0, frame = 16
 1561              		@ frame_needed = 1, uses_anonymous_args = 0
 1562 0000 80B5     		push	{r7, lr}
 1563              		.cfi_def_cfa_offset 8
 1564              		.cfi_offset 7, -8
 1565              		.cfi_offset 14, -4
 1566 0002 84B0     		sub	sp, sp, #16
 1567              		.cfi_def_cfa_offset 24
 1568 0004 00AF     		add	r7, sp, #0
 1569              		.cfi_def_cfa_register 7
 1570 0006 F860     		str	r0, [r7, #12]
 1571 0008 B960     		str	r1, [r7, #8]
 1572 000a 1346     		mov	r3, r2
 1573 000c FB80     		strh	r3, [r7, #6]	@ movhi
1464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 1574              		.loc 1 1465 12
 1575 000e FB68     		ldr	r3, [r7, #12]
 1576 0010 93F83E30 		ldrb	r3, [r3, #62]
 1577 0014 DBB2     		uxtb	r3, r3
 1578              		.loc 1 1465 6
 1579 0016 202B     		cmp	r3, #32
 1580 0018 1DD1     		bne	.L76
1466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 1581              		.loc 1 1467 8
 1582 001a BB68     		ldr	r3, [r7, #8]
 1583 001c 002B     		cmp	r3, #0
 1584 001e 02D0     		beq	.L77
 1585              		.loc 1 1467 25 discriminator 1
 1586 0020 FB88     		ldrh	r3, [r7, #6]
 1587 0022 002B     		cmp	r3, #0
 1588 0024 01D1     		bne	.L78
 1589              	.L77:
1468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 74


 1590              		.loc 1 1469 14
 1591 0026 0123     		movs	r3, #1
 1592 0028 16E0     		b	.L79
 1593              	.L78:
1470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Process Locked */
1473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 1594              		.loc 1 1473 5
 1595 002a FB68     		ldr	r3, [r7, #12]
 1596 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1597 0030 012B     		cmp	r3, #1
 1598 0032 01D1     		bne	.L80
 1599              		.loc 1 1473 5 is_stmt 0 discriminator 1
 1600 0034 0223     		movs	r3, #2
 1601 0036 0FE0     		b	.L79
 1602              	.L80:
 1603              		.loc 1 1473 5 discriminator 2
 1604 0038 FB68     		ldr	r3, [r7, #12]
 1605 003a 0122     		movs	r2, #1
 1606 003c 83F83C20 		strb	r2, [r3, #60]
1474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to Standard reception */
1476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 1607              		.loc 1 1476 26 is_stmt 1 discriminator 2
 1608 0040 FB68     		ldr	r3, [r7, #12]
 1609 0042 0022     		movs	r2, #0
 1610 0044 1A63     		str	r2, [r3, #48]
1477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return (UART_Start_Receive_DMA(huart, pData, Size));
 1611              		.loc 1 1478 13 discriminator 2
 1612 0046 FB88     		ldrh	r3, [r7, #6]
 1613 0048 1A46     		mov	r2, r3
 1614 004a B968     		ldr	r1, [r7, #8]
 1615 004c F868     		ldr	r0, [r7, #12]
 1616 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 1617 0052 0346     		mov	r3, r0
 1618 0054 00E0     		b	.L79
 1619              	.L76:
1479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 1620              		.loc 1 1482 12
 1621 0056 0223     		movs	r3, #2
 1622              	.L79:
1483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1623              		.loc 1 1484 1
 1624 0058 1846     		mov	r0, r3
 1625 005a 1037     		adds	r7, r7, #16
 1626              		.cfi_def_cfa_offset 8
 1627 005c BD46     		mov	sp, r7
 1628              		.cfi_def_cfa_register 13
 1629              		@ sp needed
 1630 005e 80BD     		pop	{r7, pc}
 1631              		.cfi_endproc
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 75


 1632              	.LFE142:
 1634              		.section	.text.HAL_UART_DMAPause,"ax",%progbits
 1635              		.align	1
 1636              		.global	HAL_UART_DMAPause
 1637              		.syntax unified
 1638              		.thumb
 1639              		.thumb_func
 1641              	HAL_UART_DMAPause:
 1642              	.LFB143:
1485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Pauses the DMA Transfer.
1488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAPause(UART_HandleTypeDef *huart)
1493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1643              		.loc 1 1493 1
 1644              		.cfi_startproc
 1645              		@ args = 0, pretend = 0, frame = 112
 1646              		@ frame_needed = 1, uses_anonymous_args = 0
 1647              		@ link register save eliminated.
 1648 0000 80B4     		push	{r7}
 1649              		.cfi_def_cfa_offset 4
 1650              		.cfi_offset 7, -4
 1651 0002 9DB0     		sub	sp, sp, #116
 1652              		.cfi_def_cfa_offset 120
 1653 0004 00AF     		add	r7, sp, #0
 1654              		.cfi_def_cfa_register 7
 1655 0006 7860     		str	r0, [r7, #4]
1494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 1656              		.loc 1 1494 12
 1657 0008 0023     		movs	r3, #0
 1658 000a FB66     		str	r3, [r7, #108]
1495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1659              		.loc 1 1497 3
 1660 000c 7B68     		ldr	r3, [r7, #4]
 1661 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1662 0012 012B     		cmp	r3, #1
 1663 0014 01D1     		bne	.L82
 1664              		.loc 1 1497 3 is_stmt 0 discriminator 1
 1665 0016 0223     		movs	r3, #2
 1666 0018 98E0     		b	.L83
 1667              	.L82:
 1668              		.loc 1 1497 3 discriminator 2
 1669 001a 7B68     		ldr	r3, [r7, #4]
 1670 001c 0122     		movs	r2, #1
 1671 001e 83F83C20 		strb	r2, [r3, #60]
1498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 1672              		.loc 1 1499 16 is_stmt 1 discriminator 2
 1673 0022 7B68     		ldr	r3, [r7, #4]
 1674 0024 1B68     		ldr	r3, [r3]
 1675 0026 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 76


 1676 0028 03F08003 		and	r3, r3, #128
 1677 002c 802B     		cmp	r3, #128
 1678 002e 0CBF     		ite	eq
 1679 0030 0123     		moveq	r3, #1
 1680 0032 0023     		movne	r3, #0
 1681 0034 DBB2     		uxtb	r3, r3
 1682              		.loc 1 1499 14 discriminator 2
 1683 0036 FB66     		str	r3, [r7, #108]
1500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 1684              		.loc 1 1500 13 discriminator 2
 1685 0038 7B68     		ldr	r3, [r7, #4]
 1686 003a 93F83D30 		ldrb	r3, [r3, #61]
 1687 003e DBB2     		uxtb	r3, r3
 1688              		.loc 1 1500 6 discriminator 2
 1689 0040 212B     		cmp	r3, #33
 1690 0042 1CD1     		bne	.L84
 1691              		.loc 1 1500 49 discriminator 1
 1692 0044 FB6E     		ldr	r3, [r7, #108]
 1693 0046 002B     		cmp	r3, #0
 1694 0048 19D0     		beq	.L84
 1695              	.L87:
 1696              	.LBB325:
1501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Tx request */
1503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1697              		.loc 1 1503 5 discriminator 1
 1698 004a 7B68     		ldr	r3, [r7, #4]
 1699 004c 1B68     		ldr	r3, [r3]
 1700 004e 1433     		adds	r3, r3, #20
 1701 0050 FB64     		str	r3, [r7, #76]
 1702              	.LBB326:
 1703              	.LBB327:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1704              		.loc 2 1072 4 discriminator 1
 1705 0052 FB6C     		ldr	r3, [r7, #76]
 1706              		.syntax unified
 1707              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1708 0054 53E8003F 		ldrex r3, [r3]
 1709              	@ 0 "" 2
 1710              		.thumb
 1711              		.syntax unified
 1712 0058 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1713              		.loc 2 1073 10 discriminator 1
 1714 005a BB6C     		ldr	r3, [r7, #72]
 1715              	.LBE327:
 1716              	.LBE326:
 1717              		.loc 1 1503 5 discriminator 1
 1718 005c 23F08003 		bic	r3, r3, #128
 1719 0060 BB66     		str	r3, [r7, #104]
 1720 0062 7B68     		ldr	r3, [r7, #4]
 1721 0064 1B68     		ldr	r3, [r3]
 1722 0066 1433     		adds	r3, r3, #20
 1723 0068 BA6E     		ldr	r2, [r7, #104]
 1724 006a BA65     		str	r2, [r7, #88]
 1725 006c 7B65     		str	r3, [r7, #84]
 1726              	.LBB328:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 77


 1727              	.LBB329:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1728              		.loc 2 1123 4 discriminator 1
 1729 006e 796D     		ldr	r1, [r7, #84]
 1730 0070 BA6D     		ldr	r2, [r7, #88]
 1731              		.syntax unified
 1732              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1733 0072 41E80023 		strex r3, r2, [r1]
 1734              	@ 0 "" 2
 1735              		.thumb
 1736              		.syntax unified
 1737 0076 3B65     		str	r3, [r7, #80]
 1738              		.loc 2 1124 10 discriminator 1
 1739 0078 3B6D     		ldr	r3, [r7, #80]
 1740              	.LBE329:
 1741              	.LBE328:
 1742              		.loc 1 1503 5 discriminator 1
 1743 007a 002B     		cmp	r3, #0
 1744 007c E5D1     		bne	.L87
 1745              	.L84:
 1746              	.LBE325:
1504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 1747              		.loc 1 1506 16
 1748 007e 7B68     		ldr	r3, [r7, #4]
 1749 0080 1B68     		ldr	r3, [r3]
 1750 0082 5B69     		ldr	r3, [r3, #20]
 1751 0084 03F04003 		and	r3, r3, #64
 1752 0088 402B     		cmp	r3, #64
 1753 008a 0CBF     		ite	eq
 1754 008c 0123     		moveq	r3, #1
 1755 008e 0023     		movne	r3, #0
 1756 0090 DBB2     		uxtb	r3, r3
 1757              		.loc 1 1506 14
 1758 0092 FB66     		str	r3, [r7, #108]
1507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 1759              		.loc 1 1507 13
 1760 0094 7B68     		ldr	r3, [r7, #4]
 1761 0096 93F83E30 		ldrb	r3, [r3, #62]
 1762 009a DBB2     		uxtb	r3, r3
 1763              		.loc 1 1507 6
 1764 009c 222B     		cmp	r3, #34
 1765 009e 50D1     		bne	.L88
 1766              		.loc 1 1507 50 discriminator 1
 1767 00a0 FB6E     		ldr	r3, [r7, #108]
 1768 00a2 002B     		cmp	r3, #0
 1769 00a4 4DD0     		beq	.L88
 1770              	.L91:
 1771              	.LBB330:
1508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 1772              		.loc 1 1510 5 discriminator 1
 1773 00a6 7B68     		ldr	r3, [r7, #4]
 1774 00a8 1B68     		ldr	r3, [r3]
 1775 00aa 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 78


 1776 00ac BB63     		str	r3, [r7, #56]
 1777              	.LBB331:
 1778              	.LBB332:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1779              		.loc 2 1072 4 discriminator 1
 1780 00ae BB6B     		ldr	r3, [r7, #56]
 1781              		.syntax unified
 1782              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1783 00b0 53E8003F 		ldrex r3, [r3]
 1784              	@ 0 "" 2
 1785              		.thumb
 1786              		.syntax unified
 1787 00b4 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1788              		.loc 2 1073 10 discriminator 1
 1789 00b6 7B6B     		ldr	r3, [r7, #52]
 1790              	.LBE332:
 1791              	.LBE331:
 1792              		.loc 1 1510 5 discriminator 1
 1793 00b8 23F48073 		bic	r3, r3, #256
 1794 00bc 7B66     		str	r3, [r7, #100]
 1795 00be 7B68     		ldr	r3, [r7, #4]
 1796 00c0 1B68     		ldr	r3, [r3]
 1797 00c2 0C33     		adds	r3, r3, #12
 1798 00c4 7A6E     		ldr	r2, [r7, #100]
 1799 00c6 7A64     		str	r2, [r7, #68]
 1800 00c8 3B64     		str	r3, [r7, #64]
 1801              	.LBB333:
 1802              	.LBB334:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1803              		.loc 2 1123 4 discriminator 1
 1804 00ca 396C     		ldr	r1, [r7, #64]
 1805 00cc 7A6C     		ldr	r2, [r7, #68]
 1806              		.syntax unified
 1807              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1808 00ce 41E80023 		strex r3, r2, [r1]
 1809              	@ 0 "" 2
 1810              		.thumb
 1811              		.syntax unified
 1812 00d2 FB63     		str	r3, [r7, #60]
 1813              		.loc 2 1124 10 discriminator 1
 1814 00d4 FB6B     		ldr	r3, [r7, #60]
 1815              	.LBE334:
 1816              	.LBE333:
 1817              		.loc 1 1510 5 discriminator 1
 1818 00d6 002B     		cmp	r3, #0
 1819 00d8 E5D1     		bne	.L91
 1820              	.L94:
 1821              	.LBE330:
 1822              	.LBB335:
1511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 1823              		.loc 1 1511 5 discriminator 1
 1824 00da 7B68     		ldr	r3, [r7, #4]
 1825 00dc 1B68     		ldr	r3, [r3]
 1826 00de 1433     		adds	r3, r3, #20
 1827 00e0 7B62     		str	r3, [r7, #36]
 1828              	.LBB336:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 79


 1829              	.LBB337:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1830              		.loc 2 1072 4 discriminator 1
 1831 00e2 7B6A     		ldr	r3, [r7, #36]
 1832              		.syntax unified
 1833              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1834 00e4 53E8003F 		ldrex r3, [r3]
 1835              	@ 0 "" 2
 1836              		.thumb
 1837              		.syntax unified
 1838 00e8 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1839              		.loc 2 1073 10 discriminator 1
 1840 00ea 3B6A     		ldr	r3, [r7, #32]
 1841              	.LBE337:
 1842              	.LBE336:
 1843              		.loc 1 1511 5 discriminator 1
 1844 00ec 23F00103 		bic	r3, r3, #1
 1845 00f0 3B66     		str	r3, [r7, #96]
 1846 00f2 7B68     		ldr	r3, [r7, #4]
 1847 00f4 1B68     		ldr	r3, [r3]
 1848 00f6 1433     		adds	r3, r3, #20
 1849 00f8 3A6E     		ldr	r2, [r7, #96]
 1850 00fa 3A63     		str	r2, [r7, #48]
 1851 00fc FB62     		str	r3, [r7, #44]
 1852              	.LBB338:
 1853              	.LBB339:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1854              		.loc 2 1123 4 discriminator 1
 1855 00fe F96A     		ldr	r1, [r7, #44]
 1856 0100 3A6B     		ldr	r2, [r7, #48]
 1857              		.syntax unified
 1858              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1859 0102 41E80023 		strex r3, r2, [r1]
 1860              	@ 0 "" 2
 1861              		.thumb
 1862              		.syntax unified
 1863 0106 BB62     		str	r3, [r7, #40]
 1864              		.loc 2 1124 10 discriminator 1
 1865 0108 BB6A     		ldr	r3, [r7, #40]
 1866              	.LBE339:
 1867              	.LBE338:
 1868              		.loc 1 1511 5 discriminator 1
 1869 010a 002B     		cmp	r3, #0
 1870 010c E5D1     		bne	.L94
 1871              	.L97:
 1872              	.LBE335:
 1873              	.LBB340:
1512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the UART DMA Rx request */
1514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 1874              		.loc 1 1514 5 discriminator 1
 1875 010e 7B68     		ldr	r3, [r7, #4]
 1876 0110 1B68     		ldr	r3, [r3]
 1877 0112 1433     		adds	r3, r3, #20
 1878 0114 3B61     		str	r3, [r7, #16]
 1879              	.LBB341:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 80


 1880              	.LBB342:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1881              		.loc 2 1072 4 discriminator 1
 1882 0116 3B69     		ldr	r3, [r7, #16]
 1883              		.syntax unified
 1884              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1885 0118 53E8003F 		ldrex r3, [r3]
 1886              	@ 0 "" 2
 1887              		.thumb
 1888              		.syntax unified
 1889 011c FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1890              		.loc 2 1073 10 discriminator 1
 1891 011e FB68     		ldr	r3, [r7, #12]
 1892              	.LBE342:
 1893              	.LBE341:
 1894              		.loc 1 1514 5 discriminator 1
 1895 0120 23F04003 		bic	r3, r3, #64
 1896 0124 FB65     		str	r3, [r7, #92]
 1897 0126 7B68     		ldr	r3, [r7, #4]
 1898 0128 1B68     		ldr	r3, [r3]
 1899 012a 1433     		adds	r3, r3, #20
 1900 012c FA6D     		ldr	r2, [r7, #92]
 1901 012e FA61     		str	r2, [r7, #28]
 1902 0130 BB61     		str	r3, [r7, #24]
 1903              	.LBB343:
 1904              	.LBB344:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1905              		.loc 2 1123 4 discriminator 1
 1906 0132 B969     		ldr	r1, [r7, #24]
 1907 0134 FA69     		ldr	r2, [r7, #28]
 1908              		.syntax unified
 1909              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1910 0136 41E80023 		strex r3, r2, [r1]
 1911              	@ 0 "" 2
 1912              		.thumb
 1913              		.syntax unified
 1914 013a 7B61     		str	r3, [r7, #20]
 1915              		.loc 2 1124 10 discriminator 1
 1916 013c 7B69     		ldr	r3, [r7, #20]
 1917              	.LBE344:
 1918              	.LBE343:
 1919              		.loc 1 1514 5 discriminator 1
 1920 013e 002B     		cmp	r3, #0
 1921 0140 E5D1     		bne	.L97
 1922              	.L88:
 1923              	.LBE340:
1515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 1924              		.loc 1 1518 3
 1925 0142 7B68     		ldr	r3, [r7, #4]
 1926 0144 0022     		movs	r2, #0
 1927 0146 83F83C20 		strb	r2, [r3, #60]
1519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 81


 1928              		.loc 1 1520 10
 1929 014a 0023     		movs	r3, #0
 1930              	.L83:
1521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 1931              		.loc 1 1521 1
 1932 014c 1846     		mov	r0, r3
 1933 014e 7437     		adds	r7, r7, #116
 1934              		.cfi_def_cfa_offset 4
 1935 0150 BD46     		mov	sp, r7
 1936              		.cfi_def_cfa_register 13
 1937              		@ sp needed
 1938 0152 5DF8047B 		ldr	r7, [sp], #4
 1939              		.cfi_restore 7
 1940              		.cfi_def_cfa_offset 0
 1941 0156 7047     		bx	lr
 1942              		.cfi_endproc
 1943              	.LFE143:
 1945              		.section	.text.HAL_UART_DMAResume,"ax",%progbits
 1946              		.align	1
 1947              		.global	HAL_UART_DMAResume
 1948              		.syntax unified
 1949              		.thumb
 1950              		.thumb_func
 1952              	HAL_UART_DMAResume:
 1953              	.LFB144:
1522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Resumes the DMA Transfer.
1525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAResume(UART_HandleTypeDef *huart)
1530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 1954              		.loc 1 1530 1
 1955              		.cfi_startproc
 1956              		@ args = 0, pretend = 0, frame = 112
 1957              		@ frame_needed = 1, uses_anonymous_args = 0
 1958              		@ link register save eliminated.
 1959 0000 80B4     		push	{r7}
 1960              		.cfi_def_cfa_offset 4
 1961              		.cfi_offset 7, -4
 1962 0002 9DB0     		sub	sp, sp, #116
 1963              		.cfi_def_cfa_offset 120
 1964 0004 00AF     		add	r7, sp, #0
 1965              		.cfi_def_cfa_register 7
 1966 0006 7860     		str	r0, [r7, #4]
1531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
1532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 1967              		.loc 1 1532 3
 1968 0008 7B68     		ldr	r3, [r7, #4]
 1969 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 1970 000e 012B     		cmp	r3, #1
 1971 0010 01D1     		bne	.L99
 1972              		.loc 1 1532 3 is_stmt 0 discriminator 1
 1973 0012 0223     		movs	r3, #2
 1974 0014 87E0     		b	.L100
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 82


 1975              	.L99:
 1976              		.loc 1 1532 3 discriminator 2
 1977 0016 7B68     		ldr	r3, [r7, #4]
 1978 0018 0122     		movs	r2, #1
 1979 001a 83F83C20 		strb	r2, [r3, #60]
1533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 1980              		.loc 1 1534 12 is_stmt 1 discriminator 2
 1981 001e 7B68     		ldr	r3, [r7, #4]
 1982 0020 93F83D30 		ldrb	r3, [r3, #61]
 1983 0024 DBB2     		uxtb	r3, r3
 1984              		.loc 1 1534 6 discriminator 2
 1985 0026 212B     		cmp	r3, #33
 1986 0028 19D1     		bne	.L101
 1987              	.L104:
 1988              	.LBB345:
1535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Tx request */
1537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 1989              		.loc 1 1537 5 discriminator 1
 1990 002a 7B68     		ldr	r3, [r7, #4]
 1991 002c 1B68     		ldr	r3, [r3]
 1992 002e 1433     		adds	r3, r3, #20
 1993 0030 3B65     		str	r3, [r7, #80]
 1994              	.LBB346:
 1995              	.LBB347:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 1996              		.loc 2 1072 4 discriminator 1
 1997 0032 3B6D     		ldr	r3, [r7, #80]
 1998              		.syntax unified
 1999              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2000 0034 53E8003F 		ldrex r3, [r3]
 2001              	@ 0 "" 2
 2002              		.thumb
 2003              		.syntax unified
 2004 0038 FB64     		str	r3, [r7, #76]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2005              		.loc 2 1073 10 discriminator 1
 2006 003a FB6C     		ldr	r3, [r7, #76]
 2007              	.LBE347:
 2008              	.LBE346:
 2009              		.loc 1 1537 5 discriminator 1
 2010 003c 43F08003 		orr	r3, r3, #128
 2011 0040 FB66     		str	r3, [r7, #108]
 2012 0042 7B68     		ldr	r3, [r7, #4]
 2013 0044 1B68     		ldr	r3, [r3]
 2014 0046 1433     		adds	r3, r3, #20
 2015 0048 FA6E     		ldr	r2, [r7, #108]
 2016 004a FA65     		str	r2, [r7, #92]
 2017 004c BB65     		str	r3, [r7, #88]
 2018              	.LBB348:
 2019              	.LBB349:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2020              		.loc 2 1123 4 discriminator 1
 2021 004e B96D     		ldr	r1, [r7, #88]
 2022 0050 FA6D     		ldr	r2, [r7, #92]
 2023              		.syntax unified
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 83


 2024              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2025 0052 41E80023 		strex r3, r2, [r1]
 2026              	@ 0 "" 2
 2027              		.thumb
 2028              		.syntax unified
 2029 0056 7B65     		str	r3, [r7, #84]
 2030              		.loc 2 1124 10 discriminator 1
 2031 0058 7B6D     		ldr	r3, [r7, #84]
 2032              	.LBE349:
 2033              	.LBE348:
 2034              		.loc 1 1537 5 discriminator 1
 2035 005a 002B     		cmp	r3, #0
 2036 005c E5D1     		bne	.L104
 2037              	.L101:
 2038              	.LBE345:
1538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 2039              		.loc 1 1540 12
 2040 005e 7B68     		ldr	r3, [r7, #4]
 2041 0060 93F83E30 		ldrb	r3, [r3, #62]
 2042 0064 DBB2     		uxtb	r3, r3
 2043              		.loc 1 1540 6
 2044 0066 222B     		cmp	r3, #34
 2045 0068 58D1     		bne	.L105
 2046              	.LBB350:
1541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Clear the Overrun flag before resuming the Rx transfer*/
1543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_OREFLAG(huart);
 2047              		.loc 1 1543 5
 2048 006a 0023     		movs	r3, #0
 2049 006c FB60     		str	r3, [r7, #12]
 2050 006e 7B68     		ldr	r3, [r7, #4]
 2051 0070 1B68     		ldr	r3, [r3]
 2052 0072 1B68     		ldr	r3, [r3]
 2053 0074 FB60     		str	r3, [r7, #12]
 2054 0076 7B68     		ldr	r3, [r7, #4]
 2055 0078 1B68     		ldr	r3, [r3]
 2056 007a 5B68     		ldr	r3, [r3, #4]
 2057 007c FB60     		str	r3, [r7, #12]
 2058 007e FB68     		ldr	r3, [r7, #12]
 2059              	.L108:
 2060              	.LBE350:
 2061              	.LBB351:
1544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Re-enable PE and ERR (Frame error, noise error, overrun error) interrupts */
1546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 2062              		.loc 1 1546 5 discriminator 1
 2063 0080 7B68     		ldr	r3, [r7, #4]
 2064 0082 1B68     		ldr	r3, [r3]
 2065 0084 0C33     		adds	r3, r3, #12
 2066 0086 FB63     		str	r3, [r7, #60]
 2067              	.LBB352:
 2068              	.LBB353:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2069              		.loc 2 1072 4 discriminator 1
 2070 0088 FB6B     		ldr	r3, [r7, #60]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 84


 2071              		.syntax unified
 2072              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2073 008a 53E8003F 		ldrex r3, [r3]
 2074              	@ 0 "" 2
 2075              		.thumb
 2076              		.syntax unified
 2077 008e BB63     		str	r3, [r7, #56]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2078              		.loc 2 1073 10 discriminator 1
 2079 0090 BB6B     		ldr	r3, [r7, #56]
 2080              	.LBE353:
 2081              	.LBE352:
 2082              		.loc 1 1546 5 discriminator 1
 2083 0092 43F48073 		orr	r3, r3, #256
 2084 0096 BB66     		str	r3, [r7, #104]
 2085 0098 7B68     		ldr	r3, [r7, #4]
 2086 009a 1B68     		ldr	r3, [r3]
 2087 009c 0C33     		adds	r3, r3, #12
 2088 009e BA6E     		ldr	r2, [r7, #104]
 2089 00a0 BA64     		str	r2, [r7, #72]
 2090 00a2 7B64     		str	r3, [r7, #68]
 2091              	.LBB354:
 2092              	.LBB355:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2093              		.loc 2 1123 4 discriminator 1
 2094 00a4 796C     		ldr	r1, [r7, #68]
 2095 00a6 BA6C     		ldr	r2, [r7, #72]
 2096              		.syntax unified
 2097              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2098 00a8 41E80023 		strex r3, r2, [r1]
 2099              	@ 0 "" 2
 2100              		.thumb
 2101              		.syntax unified
 2102 00ac 3B64     		str	r3, [r7, #64]
 2103              		.loc 2 1124 10 discriminator 1
 2104 00ae 3B6C     		ldr	r3, [r7, #64]
 2105              	.LBE355:
 2106              	.LBE354:
 2107              		.loc 1 1546 5 discriminator 1
 2108 00b0 002B     		cmp	r3, #0
 2109 00b2 E5D1     		bne	.L108
 2110              	.L111:
 2111              	.LBE351:
 2112              	.LBB356:
1547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 2113              		.loc 1 1547 5 discriminator 1
 2114 00b4 7B68     		ldr	r3, [r7, #4]
 2115 00b6 1B68     		ldr	r3, [r3]
 2116 00b8 1433     		adds	r3, r3, #20
 2117 00ba BB62     		str	r3, [r7, #40]
 2118              	.LBB357:
 2119              	.LBB358:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2120              		.loc 2 1072 4 discriminator 1
 2121 00bc BB6A     		ldr	r3, [r7, #40]
 2122              		.syntax unified
 2123              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 85


 2124 00be 53E8003F 		ldrex r3, [r3]
 2125              	@ 0 "" 2
 2126              		.thumb
 2127              		.syntax unified
 2128 00c2 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2129              		.loc 2 1073 10 discriminator 1
 2130 00c4 7B6A     		ldr	r3, [r7, #36]
 2131              	.LBE358:
 2132              	.LBE357:
 2133              		.loc 1 1547 5 discriminator 1
 2134 00c6 43F00103 		orr	r3, r3, #1
 2135 00ca 7B66     		str	r3, [r7, #100]
 2136 00cc 7B68     		ldr	r3, [r7, #4]
 2137 00ce 1B68     		ldr	r3, [r3]
 2138 00d0 1433     		adds	r3, r3, #20
 2139 00d2 7A6E     		ldr	r2, [r7, #100]
 2140 00d4 7A63     		str	r2, [r7, #52]
 2141 00d6 3B63     		str	r3, [r7, #48]
 2142              	.LBB359:
 2143              	.LBB360:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2144              		.loc 2 1123 4 discriminator 1
 2145 00d8 396B     		ldr	r1, [r7, #48]
 2146 00da 7A6B     		ldr	r2, [r7, #52]
 2147              		.syntax unified
 2148              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2149 00dc 41E80023 		strex r3, r2, [r1]
 2150              	@ 0 "" 2
 2151              		.thumb
 2152              		.syntax unified
 2153 00e0 FB62     		str	r3, [r7, #44]
 2154              		.loc 2 1124 10 discriminator 1
 2155 00e2 FB6A     		ldr	r3, [r7, #44]
 2156              	.LBE360:
 2157              	.LBE359:
 2158              		.loc 1 1547 5 discriminator 1
 2159 00e4 002B     		cmp	r3, #0
 2160 00e6 E5D1     		bne	.L111
 2161              	.L114:
 2162              	.LBE356:
 2163              	.LBB361:
1548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART DMA Rx request */
1550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2164              		.loc 1 1550 5 discriminator 1
 2165 00e8 7B68     		ldr	r3, [r7, #4]
 2166 00ea 1B68     		ldr	r3, [r3]
 2167 00ec 1433     		adds	r3, r3, #20
 2168 00ee 7B61     		str	r3, [r7, #20]
 2169              	.LBB362:
 2170              	.LBB363:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2171              		.loc 2 1072 4 discriminator 1
 2172 00f0 7B69     		ldr	r3, [r7, #20]
 2173              		.syntax unified
 2174              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 86


 2175 00f2 53E8003F 		ldrex r3, [r3]
 2176              	@ 0 "" 2
 2177              		.thumb
 2178              		.syntax unified
 2179 00f6 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2180              		.loc 2 1073 10 discriminator 1
 2181 00f8 3B69     		ldr	r3, [r7, #16]
 2182              	.LBE363:
 2183              	.LBE362:
 2184              		.loc 1 1550 5 discriminator 1
 2185 00fa 43F04003 		orr	r3, r3, #64
 2186 00fe 3B66     		str	r3, [r7, #96]
 2187 0100 7B68     		ldr	r3, [r7, #4]
 2188 0102 1B68     		ldr	r3, [r3]
 2189 0104 1433     		adds	r3, r3, #20
 2190 0106 3A6E     		ldr	r2, [r7, #96]
 2191 0108 3A62     		str	r2, [r7, #32]
 2192 010a FB61     		str	r3, [r7, #28]
 2193              	.LBB364:
 2194              	.LBB365:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2195              		.loc 2 1123 4 discriminator 1
 2196 010c F969     		ldr	r1, [r7, #28]
 2197 010e 3A6A     		ldr	r2, [r7, #32]
 2198              		.syntax unified
 2199              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2200 0110 41E80023 		strex r3, r2, [r1]
 2201              	@ 0 "" 2
 2202              		.thumb
 2203              		.syntax unified
 2204 0114 BB61     		str	r3, [r7, #24]
 2205              		.loc 2 1124 10 discriminator 1
 2206 0116 BB69     		ldr	r3, [r7, #24]
 2207              	.LBE365:
 2208              	.LBE364:
 2209              		.loc 1 1550 5 discriminator 1
 2210 0118 002B     		cmp	r3, #0
 2211 011a E5D1     		bne	.L114
 2212              	.L105:
 2213              	.LBE361:
1551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
1554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 2214              		.loc 1 1554 3
 2215 011c 7B68     		ldr	r3, [r7, #4]
 2216 011e 0022     		movs	r2, #0
 2217 0120 83F83C20 		strb	r2, [r3, #60]
1555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2218              		.loc 1 1556 10
 2219 0124 0023     		movs	r3, #0
 2220              	.L100:
1557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2221              		.loc 1 1557 1
 2222 0126 1846     		mov	r0, r3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 87


 2223 0128 7437     		adds	r7, r7, #116
 2224              		.cfi_def_cfa_offset 4
 2225 012a BD46     		mov	sp, r7
 2226              		.cfi_def_cfa_register 13
 2227              		@ sp needed
 2228 012c 5DF8047B 		ldr	r7, [sp], #4
 2229              		.cfi_restore 7
 2230              		.cfi_def_cfa_offset 0
 2231 0130 7047     		bx	lr
 2232              		.cfi_endproc
 2233              	.LFE144:
 2235              		.section	.text.HAL_UART_DMAStop,"ax",%progbits
 2236              		.align	1
 2237              		.global	HAL_UART_DMAStop
 2238              		.syntax unified
 2239              		.thumb
 2240              		.thumb_func
 2242              	HAL_UART_DMAStop:
 2243              	.LFB145:
1558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Stops the DMA Transfer.
1561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
1562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
1563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_DMAStop(UART_HandleTypeDef *huart)
1566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2244              		.loc 1 1566 1
 2245              		.cfi_startproc
 2246              		@ args = 0, pretend = 0, frame = 64
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248 0000 80B5     		push	{r7, lr}
 2249              		.cfi_def_cfa_offset 8
 2250              		.cfi_offset 7, -8
 2251              		.cfi_offset 14, -4
 2252 0002 90B0     		sub	sp, sp, #64
 2253              		.cfi_def_cfa_offset 72
 2254 0004 00AF     		add	r7, sp, #0
 2255              		.cfi_def_cfa_register 7
 2256 0006 7860     		str	r0, [r7, #4]
1567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 2257              		.loc 1 1567 12
 2258 0008 0023     		movs	r3, #0
 2259 000a FB63     		str	r3, [r7, #60]
1568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* The Lock is not implemented on this API to allow the user application
1569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      to call the HAL UART API under callbacks HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      when calling HAL_DMA_Abort() API the DMA TX/RX Transfer complete interrupt is generated
1571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      and the correspond call back is executed HAL_UART_TxCpltCallback() / HAL_UART_RxCpltCallback()
1572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      */
1573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
1575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 2260              		.loc 1 1575 16
 2261 000c 7B68     		ldr	r3, [r7, #4]
 2262 000e 1B68     		ldr	r3, [r3]
 2263 0010 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 88


 2264 0012 03F08003 		and	r3, r3, #128
 2265 0016 802B     		cmp	r3, #128
 2266 0018 0CBF     		ite	eq
 2267 001a 0123     		moveq	r3, #1
 2268 001c 0023     		movne	r3, #0
 2269 001e DBB2     		uxtb	r3, r3
 2270              		.loc 1 1575 14
 2271 0020 FB63     		str	r3, [r7, #60]
1576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 2272              		.loc 1 1576 13
 2273 0022 7B68     		ldr	r3, [r7, #4]
 2274 0024 93F83D30 		ldrb	r3, [r3, #61]
 2275 0028 DBB2     		uxtb	r3, r3
 2276              		.loc 1 1576 6
 2277 002a 212B     		cmp	r3, #33
 2278 002c 28D1     		bne	.L116
 2279              		.loc 1 1576 49 discriminator 1
 2280 002e FB6B     		ldr	r3, [r7, #60]
 2281 0030 002B     		cmp	r3, #0
 2282 0032 25D0     		beq	.L116
 2283              	.L119:
 2284              	.LBB366:
1577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 2285              		.loc 1 1578 5 discriminator 1
 2286 0034 7B68     		ldr	r3, [r7, #4]
 2287 0036 1B68     		ldr	r3, [r3]
 2288 0038 1433     		adds	r3, r3, #20
 2289 003a 7B62     		str	r3, [r7, #36]
 2290              	.LBB367:
 2291              	.LBB368:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2292              		.loc 2 1072 4 discriminator 1
 2293 003c 7B6A     		ldr	r3, [r7, #36]
 2294              		.syntax unified
 2295              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2296 003e 53E8003F 		ldrex r3, [r3]
 2297              	@ 0 "" 2
 2298              		.thumb
 2299              		.syntax unified
 2300 0042 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2301              		.loc 2 1073 10 discriminator 1
 2302 0044 3B6A     		ldr	r3, [r7, #32]
 2303              	.LBE368:
 2304              	.LBE367:
 2305              		.loc 1 1578 5 discriminator 1
 2306 0046 23F08003 		bic	r3, r3, #128
 2307 004a BB63     		str	r3, [r7, #56]
 2308 004c 7B68     		ldr	r3, [r7, #4]
 2309 004e 1B68     		ldr	r3, [r3]
 2310 0050 1433     		adds	r3, r3, #20
 2311 0052 BA6B     		ldr	r2, [r7, #56]
 2312 0054 3A63     		str	r2, [r7, #48]
 2313 0056 FB62     		str	r3, [r7, #44]
 2314              	.LBB369:
 2315              	.LBB370:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 89


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2316              		.loc 2 1123 4 discriminator 1
 2317 0058 F96A     		ldr	r1, [r7, #44]
 2318 005a 3A6B     		ldr	r2, [r7, #48]
 2319              		.syntax unified
 2320              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2321 005c 41E80023 		strex r3, r2, [r1]
 2322              	@ 0 "" 2
 2323              		.thumb
 2324              		.syntax unified
 2325 0060 BB62     		str	r3, [r7, #40]
 2326              		.loc 2 1124 10 discriminator 1
 2327 0062 BB6A     		ldr	r3, [r7, #40]
 2328              	.LBE370:
 2329              	.LBE369:
 2330              		.loc 1 1578 5 discriminator 1
 2331 0064 002B     		cmp	r3, #0
 2332 0066 E5D1     		bne	.L119
 2333              	.LBE366:
1579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream */
1581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 2334              		.loc 1 1581 14
 2335 0068 7B68     		ldr	r3, [r7, #4]
 2336 006a 5B6B     		ldr	r3, [r3, #52]
 2337              		.loc 1 1581 8
 2338 006c 002B     		cmp	r3, #0
 2339 006e 04D0     		beq	.L120
1582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmatx);
 2340              		.loc 1 1583 7
 2341 0070 7B68     		ldr	r3, [r7, #4]
 2342 0072 5B6B     		ldr	r3, [r3, #52]
 2343 0074 1846     		mov	r0, r3
 2344 0076 FFF7FEFF 		bl	HAL_DMA_Abort
 2345              	.L120:
1584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 2346              		.loc 1 1585 5
 2347 007a 7868     		ldr	r0, [r7, #4]
 2348 007c FFF7FEFF 		bl	UART_EndTxTransfer
 2349              	.L116:
1586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
1589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 2350              		.loc 1 1589 16
 2351 0080 7B68     		ldr	r3, [r7, #4]
 2352 0082 1B68     		ldr	r3, [r3]
 2353 0084 5B69     		ldr	r3, [r3, #20]
 2354 0086 03F04003 		and	r3, r3, #64
 2355 008a 402B     		cmp	r3, #64
 2356 008c 0CBF     		ite	eq
 2357 008e 0123     		moveq	r3, #1
 2358 0090 0023     		movne	r3, #0
 2359 0092 DBB2     		uxtb	r3, r3
 2360              		.loc 1 1589 14
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 90


 2361 0094 FB63     		str	r3, [r7, #60]
1590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 2362              		.loc 1 1590 13
 2363 0096 7B68     		ldr	r3, [r7, #4]
 2364 0098 93F83E30 		ldrb	r3, [r3, #62]
 2365 009c DBB2     		uxtb	r3, r3
 2366              		.loc 1 1590 6
 2367 009e 222B     		cmp	r3, #34
 2368 00a0 28D1     		bne	.L121
 2369              		.loc 1 1590 50 discriminator 1
 2370 00a2 FB6B     		ldr	r3, [r7, #60]
 2371 00a4 002B     		cmp	r3, #0
 2372 00a6 25D0     		beq	.L121
 2373              	.L124:
 2374              	.LBB371:
1591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 2375              		.loc 1 1592 5 discriminator 1
 2376 00a8 7B68     		ldr	r3, [r7, #4]
 2377 00aa 1B68     		ldr	r3, [r3]
 2378 00ac 1433     		adds	r3, r3, #20
 2379 00ae 3B61     		str	r3, [r7, #16]
 2380              	.LBB372:
 2381              	.LBB373:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2382              		.loc 2 1072 4 discriminator 1
 2383 00b0 3B69     		ldr	r3, [r7, #16]
 2384              		.syntax unified
 2385              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2386 00b2 53E8003F 		ldrex r3, [r3]
 2387              	@ 0 "" 2
 2388              		.thumb
 2389              		.syntax unified
 2390 00b6 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2391              		.loc 2 1073 10 discriminator 1
 2392 00b8 FB68     		ldr	r3, [r7, #12]
 2393              	.LBE373:
 2394              	.LBE372:
 2395              		.loc 1 1592 5 discriminator 1
 2396 00ba 23F04003 		bic	r3, r3, #64
 2397 00be 7B63     		str	r3, [r7, #52]
 2398 00c0 7B68     		ldr	r3, [r7, #4]
 2399 00c2 1B68     		ldr	r3, [r3]
 2400 00c4 1433     		adds	r3, r3, #20
 2401 00c6 7A6B     		ldr	r2, [r7, #52]
 2402 00c8 FA61     		str	r2, [r7, #28]
 2403 00ca BB61     		str	r3, [r7, #24]
 2404              	.LBB374:
 2405              	.LBB375:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2406              		.loc 2 1123 4 discriminator 1
 2407 00cc B969     		ldr	r1, [r7, #24]
 2408 00ce FA69     		ldr	r2, [r7, #28]
 2409              		.syntax unified
 2410              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2411 00d0 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 91


 2412              	@ 0 "" 2
 2413              		.thumb
 2414              		.syntax unified
 2415 00d4 7B61     		str	r3, [r7, #20]
 2416              		.loc 2 1124 10 discriminator 1
 2417 00d6 7B69     		ldr	r3, [r7, #20]
 2418              	.LBE375:
 2419              	.LBE374:
 2420              		.loc 1 1592 5 discriminator 1
 2421 00d8 002B     		cmp	r3, #0
 2422 00da E5D1     		bne	.L124
 2423              	.LBE371:
1593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream */
1595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 2424              		.loc 1 1595 14
 2425 00dc 7B68     		ldr	r3, [r7, #4]
 2426 00de 9B6B     		ldr	r3, [r3, #56]
 2427              		.loc 1 1595 8
 2428 00e0 002B     		cmp	r3, #0
 2429 00e2 04D0     		beq	.L125
1596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_DMA_Abort(huart->hdmarx);
 2430              		.loc 1 1597 7
 2431 00e4 7B68     		ldr	r3, [r7, #4]
 2432 00e6 9B6B     		ldr	r3, [r3, #56]
 2433 00e8 1846     		mov	r0, r3
 2434 00ea FFF7FEFF 		bl	HAL_DMA_Abort
 2435              	.L125:
1598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 2436              		.loc 1 1599 5
 2437 00ee 7868     		ldr	r0, [r7, #4]
 2438 00f0 FFF7FEFF 		bl	UART_EndRxTransfer
 2439              	.L121:
1600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 2440              		.loc 1 1602 10
 2441 00f4 0023     		movs	r3, #0
1603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2442              		.loc 1 1603 1
 2443 00f6 1846     		mov	r0, r3
 2444 00f8 4037     		adds	r7, r7, #64
 2445              		.cfi_def_cfa_offset 8
 2446 00fa BD46     		mov	sp, r7
 2447              		.cfi_def_cfa_register 13
 2448              		@ sp needed
 2449 00fc 80BD     		pop	{r7, pc}
 2450              		.cfi_endproc
 2451              	.LFE145:
 2453              		.section	.text.HAL_UARTEx_ReceiveToIdle,"ax",%progbits
 2454              		.align	1
 2455              		.global	HAL_UARTEx_ReceiveToIdle
 2456              		.syntax unified
 2457              		.thumb
 2458              		.thumb_func
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 92


 2460              	HAL_UARTEx_ReceiveToIdle:
 2461              	.LFB146:
1604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in blocking mode till either the expected number of data is re
1607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   HAL_OK is returned if reception is completed (expected number of data has been received
1608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         or if reception is stopped after IDLE event (less than the expected number of data has 
1609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         In this case, RxLen output parameter indicates number of data available in reception bu
1610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart   UART handle.
1614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData   Pointer to data buffer (uint8_t or uint16_t data elements).
1615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size    Amount of data elements (uint8_t or uint16_t) to be received.
1616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param RxLen   Number of data elements finally received (could be lower than Size, in case rece
1617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Timeout Timeout duration expressed in ms (covers the whole reception sequence).
1618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size
1621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                            uint32_t Timeout)
1622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2462              		.loc 1 1622 1
 2463              		.cfi_startproc
 2464              		@ args = 4, pretend = 0, frame = 32
 2465              		@ frame_needed = 1, uses_anonymous_args = 0
 2466 0000 80B5     		push	{r7, lr}
 2467              		.cfi_def_cfa_offset 8
 2468              		.cfi_offset 7, -8
 2469              		.cfi_offset 14, -4
 2470 0002 88B0     		sub	sp, sp, #32
 2471              		.cfi_def_cfa_offset 40
 2472 0004 00AF     		add	r7, sp, #0
 2473              		.cfi_def_cfa_register 7
 2474 0006 F860     		str	r0, [r7, #12]
 2475 0008 B960     		str	r1, [r7, #8]
 2476 000a 3B60     		str	r3, [r7]
 2477 000c 1346     		mov	r3, r2	@ movhi
 2478 000e FB80     		strh	r3, [r7, #6]	@ movhi
1623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
1624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
1625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tickstart;
1626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2479              		.loc 1 1628 12
 2480 0010 FB68     		ldr	r3, [r7, #12]
 2481 0012 93F83E30 		ldrb	r3, [r3, #62]
 2482 0016 DBB2     		uxtb	r3, r3
 2483              		.loc 1 1628 6
 2484 0018 202B     		cmp	r3, #32
 2485 001a 40F0C980 		bne	.L128
1629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2486              		.loc 1 1630 8
 2487 001e BB68     		ldr	r3, [r7, #8]
 2488 0020 002B     		cmp	r3, #0
 2489 0022 02D0     		beq	.L129
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 93


 2490              		.loc 1 1630 25 discriminator 1
 2491 0024 FB88     		ldrh	r3, [r7, #6]
 2492 0026 002B     		cmp	r3, #0
 2493 0028 01D1     		bne	.L130
 2494              	.L129:
1631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return  HAL_ERROR;
 2495              		.loc 1 1632 15
 2496 002a 0123     		movs	r3, #1
 2497 002c C1E0     		b	.L131
 2498              	.L130:
1633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2499              		.loc 1 1635 5
 2500 002e FB68     		ldr	r3, [r7, #12]
 2501 0030 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2502 0034 012B     		cmp	r3, #1
 2503 0036 01D1     		bne	.L132
 2504              		.loc 1 1635 5 is_stmt 0 discriminator 1
 2505 0038 0223     		movs	r3, #2
 2506 003a BAE0     		b	.L131
 2507              	.L132:
 2508              		.loc 1 1635 5 discriminator 2
 2509 003c FB68     		ldr	r3, [r7, #12]
 2510 003e 0122     		movs	r2, #1
 2511 0040 83F83C20 		strb	r2, [r3, #60]
1636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 2512              		.loc 1 1637 22 is_stmt 1 discriminator 2
 2513 0044 FB68     		ldr	r3, [r7, #12]
 2514 0046 0022     		movs	r2, #0
 2515 0048 1A64     		str	r2, [r3, #64]
1638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_BUSY_RX;
 2516              		.loc 1 1638 20 discriminator 2
 2517 004a FB68     		ldr	r3, [r7, #12]
 2518 004c 2222     		movs	r2, #34
 2519 004e 83F83E20 		strb	r2, [r3, #62]
1639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2520              		.loc 1 1639 26 discriminator 2
 2521 0052 FB68     		ldr	r3, [r7, #12]
 2522 0054 0122     		movs	r2, #1
 2523 0056 1A63     		str	r2, [r3, #48]
1640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Init tickstart for timeout management */
1642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     tickstart = HAL_GetTick();
 2524              		.loc 1 1642 17 discriminator 2
 2525 0058 FFF7FEFF 		bl	HAL_GetTick
 2526 005c 7861     		str	r0, [r7, #20]
1643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferSize  = Size;
 2527              		.loc 1 1644 24 discriminator 2
 2528 005e FB68     		ldr	r3, [r7, #12]
 2529 0060 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2530 0062 9A85     		strh	r2, [r3, #44]	@ movhi
1645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = Size;
 2531              		.loc 1 1645 24 discriminator 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 94


 2532 0064 FB68     		ldr	r3, [r7, #12]
 2533 0066 FA88     		ldrh	r2, [r7, #6]	@ movhi
 2534 0068 DA85     		strh	r2, [r3, #46]	@ movhi
1646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In case of 9bits/No Parity transfer, pRxData needs to be handled as a uint16_t pointer */
1648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 2535              		.loc 1 1648 21 discriminator 2
 2536 006a FB68     		ldr	r3, [r7, #12]
 2537 006c 9B68     		ldr	r3, [r3, #8]
 2538              		.loc 1 1648 8 discriminator 2
 2539 006e B3F5805F 		cmp	r3, #4096
 2540 0072 08D1     		bne	.L133
 2541              		.loc 1 1648 71 discriminator 1
 2542 0074 FB68     		ldr	r3, [r7, #12]
 2543 0076 1B69     		ldr	r3, [r3, #16]
 2544              		.loc 1 1648 56 discriminator 1
 2545 0078 002B     		cmp	r3, #0
 2546 007a 04D1     		bne	.L133
1649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 2547              		.loc 1 1650 19
 2548 007c 0023     		movs	r3, #0
 2549 007e FB61     		str	r3, [r7, #28]
1651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) pData;
 2550              		.loc 1 1651 19
 2551 0080 BB68     		ldr	r3, [r7, #8]
 2552 0082 BB61     		str	r3, [r7, #24]
 2553 0084 03E0     		b	.L134
 2554              	.L133:
1652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
1654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = pData;
 2555              		.loc 1 1655 19
 2556 0086 BB68     		ldr	r3, [r7, #8]
 2557 0088 FB61     		str	r3, [r7, #28]
1656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = NULL;
 2558              		.loc 1 1656 19
 2559 008a 0023     		movs	r3, #0
 2560 008c BB61     		str	r3, [r7, #24]
 2561              	.L134:
1657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UNLOCK(huart);
 2562              		.loc 1 1659 5
 2563 008e FB68     		ldr	r3, [r7, #12]
 2564 0090 0022     		movs	r2, #0
 2565 0092 83F83C20 		strb	r2, [r3, #60]
1660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Initialize output number of received elements */
1662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = 0U;
 2566              		.loc 1 1662 12
 2567 0096 3B68     		ldr	r3, [r7]
 2568 0098 0022     		movs	r2, #0
 2569 009a 1A80     		strh	r2, [r3]	@ movhi
1663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* as long as data have to be received */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 95


1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     while (huart->RxXferCount > 0U)
 2570              		.loc 1 1665 11
 2571 009c 74E0     		b	.L135
 2572              	.L144:
1666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if IDLE flag is set */
1668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 2573              		.loc 1 1668 11
 2574 009e FB68     		ldr	r3, [r7, #12]
 2575 00a0 1B68     		ldr	r3, [r3]
 2576 00a2 1B68     		ldr	r3, [r3]
 2577 00a4 03F01003 		and	r3, r3, #16
 2578              		.loc 1 1668 10
 2579 00a8 102B     		cmp	r3, #16
 2580 00aa 14D1     		bne	.L136
 2581              	.LBB376:
1669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Clear IDLE flag in ISR */
1671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2582              		.loc 1 1671 9
 2583 00ac 0023     		movs	r3, #0
 2584 00ae 3B61     		str	r3, [r7, #16]
 2585 00b0 FB68     		ldr	r3, [r7, #12]
 2586 00b2 1B68     		ldr	r3, [r3]
 2587 00b4 1B68     		ldr	r3, [r3]
 2588 00b6 3B61     		str	r3, [r7, #16]
 2589 00b8 FB68     		ldr	r3, [r7, #12]
 2590 00ba 1B68     		ldr	r3, [r3]
 2591 00bc 5B68     		ldr	r3, [r3, #4]
 2592 00be 3B61     		str	r3, [r7, #16]
 2593 00c0 3B69     		ldr	r3, [r7, #16]
 2594              	.LBE376:
1672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, but no data ever received, clear flag without exiting loop */
1674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* If Set, and data has already been received, this means Idle Event is valid : End recepti
1675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (*RxLen > 0U)
 2595              		.loc 1 1675 13
 2596 00c2 3B68     		ldr	r3, [r7]
 2597 00c4 1B88     		ldrh	r3, [r3]
 2598              		.loc 1 1675 12
 2599 00c6 002B     		cmp	r3, #0
 2600 00c8 05D0     		beq	.L136
1676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2601              		.loc 1 1677 26
 2602 00ca FB68     		ldr	r3, [r7, #12]
 2603 00cc 2022     		movs	r2, #32
 2604 00ce 83F83E20 		strb	r2, [r3, #62]
1678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_OK;
 2605              		.loc 1 1679 18
 2606 00d2 0023     		movs	r3, #0
 2607 00d4 6DE0     		b	.L131
 2608              	.L136:
1680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 96


1683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check if RXNE flag is set */
1684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (__HAL_UART_GET_FLAG(huart, UART_FLAG_RXNE))
 2609              		.loc 1 1684 11
 2610 00d6 FB68     		ldr	r3, [r7, #12]
 2611 00d8 1B68     		ldr	r3, [r3]
 2612 00da 1B68     		ldr	r3, [r3]
 2613 00dc 03F02003 		and	r3, r3, #32
 2614              		.loc 1 1684 10
 2615 00e0 202B     		cmp	r3, #32
 2616 00e2 3CD1     		bne	.L137
1685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (pdata8bits == NULL)
 2617              		.loc 1 1686 12
 2618 00e4 FB69     		ldr	r3, [r7, #28]
 2619 00e6 002B     		cmp	r3, #0
 2620 00e8 0CD1     		bne	.L138
1687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 2621              		.loc 1 1688 42
 2622 00ea FB68     		ldr	r3, [r7, #12]
 2623 00ec 1B68     		ldr	r3, [r3]
 2624              		.loc 1 1688 52
 2625 00ee 5B68     		ldr	r3, [r3, #4]
 2626              		.loc 1 1688 26
 2627 00f0 9BB2     		uxth	r3, r3
 2628 00f2 C3F30803 		ubfx	r3, r3, #0, #9
 2629 00f6 9AB2     		uxth	r2, r3
 2630              		.loc 1 1688 24
 2631 00f8 BB69     		ldr	r3, [r7, #24]
 2632 00fa 1A80     		strh	r2, [r3]	@ movhi
1689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata16bits++;
 2633              		.loc 1 1689 22
 2634 00fc BB69     		ldr	r3, [r7, #24]
 2635 00fe 0233     		adds	r3, r3, #2
 2636 0100 BB61     		str	r3, [r7, #24]
 2637 0102 1FE0     		b	.L139
 2638              	.L138:
1690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
1692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WO
 2639              		.loc 1 1693 27
 2640 0104 FB68     		ldr	r3, [r7, #12]
 2641 0106 9B68     		ldr	r3, [r3, #8]
 2642              		.loc 1 1693 14
 2643 0108 B3F5805F 		cmp	r3, #4096
 2644 010c 07D0     		beq	.L140
 2645              		.loc 1 1693 78 discriminator 1
 2646 010e FB68     		ldr	r3, [r7, #12]
 2647 0110 9B68     		ldr	r3, [r3, #8]
 2648              		.loc 1 1693 62 discriminator 1
 2649 0112 002B     		cmp	r3, #0
 2650 0114 0AD1     		bne	.L141
 2651              		.loc 1 1693 128 discriminator 2
 2652 0116 FB68     		ldr	r3, [r7, #12]
 2653 0118 1B69     		ldr	r3, [r3, #16]
 2654              		.loc 1 1693 113 discriminator 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 97


 2655 011a 002B     		cmp	r3, #0
 2656 011c 06D1     		bne	.L141
 2657              	.L140:
1694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 2658              		.loc 1 1695 42
 2659 011e FB68     		ldr	r3, [r7, #12]
 2660 0120 1B68     		ldr	r3, [r3]
 2661              		.loc 1 1695 52
 2662 0122 5B68     		ldr	r3, [r3, #4]
 2663              		.loc 1 1695 27
 2664 0124 DAB2     		uxtb	r2, r3
 2665              		.loc 1 1695 25
 2666 0126 FB69     		ldr	r3, [r7, #28]
 2667 0128 1A70     		strb	r2, [r3]
 2668 012a 08E0     		b	.L142
 2669              	.L141:
1696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
1698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
1699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 2670              		.loc 1 1699 42
 2671 012c FB68     		ldr	r3, [r7, #12]
 2672 012e 1B68     		ldr	r3, [r3]
 2673              		.loc 1 1699 52
 2674 0130 5B68     		ldr	r3, [r3, #4]
 2675              		.loc 1 1699 27
 2676 0132 DBB2     		uxtb	r3, r3
 2677 0134 03F07F03 		and	r3, r3, #127
 2678 0138 DAB2     		uxtb	r2, r3
 2679              		.loc 1 1699 25
 2680 013a FB69     		ldr	r3, [r7, #28]
 2681 013c 1A70     		strb	r2, [r3]
 2682              	.L142:
1700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
1701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           pdata8bits++;
 2683              		.loc 1 1702 21
 2684 013e FB69     		ldr	r3, [r7, #28]
 2685 0140 0133     		adds	r3, r3, #1
 2686 0142 FB61     		str	r3, [r7, #28]
 2687              	.L139:
1703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Increment number of received elements */
1705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *RxLen += 1U;
 2688              		.loc 1 1705 16
 2689 0144 3B68     		ldr	r3, [r7]
 2690 0146 1B88     		ldrh	r3, [r3]
 2691 0148 0133     		adds	r3, r3, #1
 2692 014a 9AB2     		uxth	r2, r3
 2693 014c 3B68     		ldr	r3, [r7]
 2694 014e 1A80     		strh	r2, [r3]	@ movhi
1706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount--;
 2695              		.loc 1 1706 14
 2696 0150 FB68     		ldr	r3, [r7, #12]
 2697 0152 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2698 0154 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 98


 2699              		.loc 1 1706 27
 2700 0156 013B     		subs	r3, r3, #1
 2701 0158 9AB2     		uxth	r2, r3
 2702 015a FB68     		ldr	r3, [r7, #12]
 2703 015c DA85     		strh	r2, [r3, #46]	@ movhi
 2704              	.L137:
1707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check for the Timeout */
1710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (Timeout != HAL_MAX_DELAY)
 2705              		.loc 1 1710 10
 2706 015e BB6A     		ldr	r3, [r7, #40]
 2707 0160 B3F1FF3F 		cmp	r3, #-1
 2708 0164 10D0     		beq	.L135
1711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 2709              		.loc 1 1712 15
 2710 0166 FFF7FEFF 		bl	HAL_GetTick
 2711 016a 0246     		mov	r2, r0
 2712              		.loc 1 1712 29
 2713 016c 7B69     		ldr	r3, [r7, #20]
 2714 016e D31A     		subs	r3, r2, r3
 2715              		.loc 1 1712 12
 2716 0170 BA6A     		ldr	r2, [r7, #40]
 2717 0172 9A42     		cmp	r2, r3
 2718 0174 02D3     		bcc	.L143
 2719              		.loc 1 1712 53 discriminator 1
 2720 0176 BB6A     		ldr	r3, [r7, #40]
 2721 0178 002B     		cmp	r3, #0
 2722 017a 05D1     		bne	.L135
 2723              	.L143:
1713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 2724              		.loc 1 1714 26
 2725 017c FB68     		ldr	r3, [r7, #12]
 2726 017e 2022     		movs	r2, #32
 2727 0180 83F83E20 		strb	r2, [r3, #62]
1715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 2728              		.loc 1 1716 18
 2729 0184 0323     		movs	r3, #3
 2730 0186 14E0     		b	.L131
 2731              	.L135:
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2732              		.loc 1 1665 17
 2733 0188 FB68     		ldr	r3, [r7, #12]
 2734 018a DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2735 018c 9BB2     		uxth	r3, r3
1665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
 2736              		.loc 1 1665 11
 2737 018e 002B     		cmp	r3, #0
 2738 0190 85D1     		bne	.L144
1717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set number of received elements in output parameter : RxLen */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 99


1722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     *RxLen = huart->RxXferSize - huart->RxXferCount;
 2739              		.loc 1 1722 19
 2740 0192 FB68     		ldr	r3, [r7, #12]
 2741 0194 9A8D     		ldrh	r2, [r3, #44]
 2742              		.loc 1 1722 39
 2743 0196 FB68     		ldr	r3, [r7, #12]
 2744 0198 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 2745 019a 9BB2     		uxth	r3, r3
 2746              		.loc 1 1722 32
 2747 019c D31A     		subs	r3, r2, r3
 2748 019e 9AB2     		uxth	r2, r3
 2749              		.loc 1 1722 12
 2750 01a0 3B68     		ldr	r3, [r7]
 2751 01a2 1A80     		strh	r2, [r3]	@ movhi
1723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
1724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 2752              		.loc 1 1724 20
 2753 01a4 FB68     		ldr	r3, [r7, #12]
 2754 01a6 2022     		movs	r2, #32
 2755 01a8 83F83E20 		strb	r2, [r3, #62]
1725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 2756              		.loc 1 1726 12
 2757 01ac 0023     		movs	r3, #0
 2758 01ae 00E0     		b	.L131
 2759              	.L128:
1727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2760              		.loc 1 1730 12
 2761 01b0 0223     		movs	r3, #2
 2762              	.L131:
1731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2763              		.loc 1 1732 1
 2764 01b2 1846     		mov	r0, r3
 2765 01b4 2037     		adds	r7, r7, #32
 2766              		.cfi_def_cfa_offset 8
 2767 01b6 BD46     		mov	sp, r7
 2768              		.cfi_def_cfa_register 13
 2769              		@ sp needed
 2770 01b8 80BD     		pop	{r7, pc}
 2771              		.cfi_endproc
 2772              	.LFE146:
 2774              		.section	.text.HAL_UARTEx_ReceiveToIdle_IT,"ax",%progbits
 2775              		.align	1
 2776              		.global	HAL_UARTEx_ReceiveToIdle_IT
 2777              		.syntax unified
 2778              		.thumb
 2779              		.thumb_func
 2781              	HAL_UARTEx_ReceiveToIdle_IT:
 2782              	.LFB147:
1733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in interrupt mode till either the expected number of data is r
1736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 100


1737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to UART interrupts raised by RXNE and IDLE events. Callback is called at end of recepti
1738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         number of received data elements.
1739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t S
1748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2783              		.loc 1 1748 1
 2784              		.cfi_startproc
 2785              		@ args = 0, pretend = 0, frame = 48
 2786              		@ frame_needed = 1, uses_anonymous_args = 0
 2787 0000 80B5     		push	{r7, lr}
 2788              		.cfi_def_cfa_offset 8
 2789              		.cfi_offset 7, -8
 2790              		.cfi_offset 14, -4
 2791 0002 8CB0     		sub	sp, sp, #48
 2792              		.cfi_def_cfa_offset 56
 2793 0004 00AF     		add	r7, sp, #0
 2794              		.cfi_def_cfa_register 7
 2795 0006 F860     		str	r0, [r7, #12]
 2796 0008 B960     		str	r1, [r7, #8]
 2797 000a 1346     		mov	r3, r2
 2798 000c FB80     		strh	r3, [r7, #6]	@ movhi
1749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2799              		.loc 1 1752 12
 2800 000e FB68     		ldr	r3, [r7, #12]
 2801 0010 93F83E30 		ldrb	r3, [r3, #62]
 2802 0014 DBB2     		uxtb	r3, r3
 2803              		.loc 1 1752 6
 2804 0016 202B     		cmp	r3, #32
 2805 0018 52D1     		bne	.L146
1753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2806              		.loc 1 1754 8
 2807 001a BB68     		ldr	r3, [r7, #8]
 2808 001c 002B     		cmp	r3, #0
 2809 001e 02D0     		beq	.L147
 2810              		.loc 1 1754 25 discriminator 1
 2811 0020 FB88     		ldrh	r3, [r7, #6]
 2812 0022 002B     		cmp	r3, #0
 2813 0024 01D1     		bne	.L148
 2814              	.L147:
1755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2815              		.loc 1 1756 14
 2816 0026 0123     		movs	r3, #1
 2817 0028 4BE0     		b	.L149
 2818              	.L148:
1757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 101


1758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2819              		.loc 1 1759 5
 2820 002a FB68     		ldr	r3, [r7, #12]
 2821 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2822 0030 012B     		cmp	r3, #1
 2823 0032 01D1     		bne	.L150
 2824              		.loc 1 1759 5 is_stmt 0 discriminator 1
 2825 0034 0223     		movs	r3, #2
 2826 0036 44E0     		b	.L149
 2827              	.L150:
 2828              		.loc 1 1759 5 discriminator 2
 2829 0038 FB68     		ldr	r3, [r7, #12]
 2830 003a 0122     		movs	r2, #1
 2831 003c 83F83C20 		strb	r2, [r3, #60]
1760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 2832              		.loc 1 1762 26 is_stmt 1 discriminator 2
 2833 0040 FB68     		ldr	r3, [r7, #12]
 2834 0042 0122     		movs	r2, #1
 2835 0044 1A63     		str	r2, [r3, #48]
1763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_IT(huart, pData, Size);
 2836              		.loc 1 1764 15 discriminator 2
 2837 0046 FB88     		ldrh	r3, [r7, #6]
 2838 0048 1A46     		mov	r2, r3
 2839 004a B968     		ldr	r1, [r7, #8]
 2840 004c F868     		ldr	r0, [r7, #12]
 2841 004e FFF7FEFF 		bl	UART_Start_Receive_IT
 2842 0052 0346     		mov	r3, r0
 2843 0054 87F82F30 		strb	r3, [r7, #47]
1765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 2844              		.loc 1 1767 8 discriminator 2
 2845 0058 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2846 005c 002B     		cmp	r3, #0
 2847 005e 2CD1     		bne	.L151
1768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 2848              		.loc 1 1769 16
 2849 0060 FB68     		ldr	r3, [r7, #12]
 2850 0062 1B6B     		ldr	r3, [r3, #48]
 2851              		.loc 1 1769 10
 2852 0064 012B     		cmp	r3, #1
 2853 0066 25D1     		bne	.L152
 2854              	.LBB377:
1770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 2855              		.loc 1 1771 9
 2856 0068 0023     		movs	r3, #0
 2857 006a 3B61     		str	r3, [r7, #16]
 2858 006c FB68     		ldr	r3, [r7, #12]
 2859 006e 1B68     		ldr	r3, [r3]
 2860 0070 1B68     		ldr	r3, [r3]
 2861 0072 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 102


 2862 0074 FB68     		ldr	r3, [r7, #12]
 2863 0076 1B68     		ldr	r3, [r3]
 2864 0078 5B68     		ldr	r3, [r3, #4]
 2865 007a 3B61     		str	r3, [r7, #16]
 2866 007c 3B69     		ldr	r3, [r7, #16]
 2867              	.L155:
 2868              	.LBE377:
 2869              	.LBB378:
1772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 2870              		.loc 1 1772 9 discriminator 1
 2871 007e FB68     		ldr	r3, [r7, #12]
 2872 0080 1B68     		ldr	r3, [r3]
 2873 0082 0C33     		adds	r3, r3, #12
 2874 0084 BB61     		str	r3, [r7, #24]
 2875              	.LBB379:
 2876              	.LBB380:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2877              		.loc 2 1072 4 discriminator 1
 2878 0086 BB69     		ldr	r3, [r7, #24]
 2879              		.syntax unified
 2880              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2881 0088 53E8003F 		ldrex r3, [r3]
 2882              	@ 0 "" 2
 2883              		.thumb
 2884              		.syntax unified
 2885 008c 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 2886              		.loc 2 1073 10 discriminator 1
 2887 008e 7B69     		ldr	r3, [r7, #20]
 2888              	.LBE380:
 2889              	.LBE379:
 2890              		.loc 1 1772 9 discriminator 1
 2891 0090 43F01003 		orr	r3, r3, #16
 2892 0094 BB62     		str	r3, [r7, #40]
 2893 0096 FB68     		ldr	r3, [r7, #12]
 2894 0098 1B68     		ldr	r3, [r3]
 2895 009a 0C33     		adds	r3, r3, #12
 2896 009c BA6A     		ldr	r2, [r7, #40]
 2897 009e 7A62     		str	r2, [r7, #36]
 2898 00a0 3B62     		str	r3, [r7, #32]
 2899              	.LBB381:
 2900              	.LBB382:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 2901              		.loc 2 1123 4 discriminator 1
 2902 00a2 396A     		ldr	r1, [r7, #32]
 2903 00a4 7A6A     		ldr	r2, [r7, #36]
 2904              		.syntax unified
 2905              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2906 00a6 41E80023 		strex r3, r2, [r1]
 2907              	@ 0 "" 2
 2908              		.thumb
 2909              		.syntax unified
 2910 00aa FB61     		str	r3, [r7, #28]
 2911              		.loc 2 1124 10 discriminator 1
 2912 00ac FB69     		ldr	r3, [r7, #28]
 2913              	.LBE382:
 2914              	.LBE381:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 103


 2915              		.loc 1 1772 9 discriminator 1
 2916 00ae 002B     		cmp	r3, #0
 2917 00b0 E5D1     		bne	.L155
 2918 00b2 02E0     		b	.L151
 2919              	.L152:
 2920              	.LBE378:
1773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 2921              		.loc 1 1780 16
 2922 00b4 0123     		movs	r3, #1
 2923 00b6 87F82F30 		strb	r3, [r7, #47]
 2924              	.L151:
1781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 2925              		.loc 1 1784 12
 2926 00ba 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2927 00be 00E0     		b	.L149
 2928              	.L146:
1785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 2929              		.loc 1 1788 12
 2930 00c0 0223     		movs	r3, #2
 2931              	.L149:
1789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 2932              		.loc 1 1790 1
 2933 00c2 1846     		mov	r0, r3
 2934 00c4 3037     		adds	r7, r7, #48
 2935              		.cfi_def_cfa_offset 8
 2936 00c6 BD46     		mov	sp, r7
 2937              		.cfi_def_cfa_register 13
 2938              		@ sp needed
 2939 00c8 80BD     		pop	{r7, pc}
 2940              		.cfi_endproc
 2941              	.LFE147:
 2943              		.section	.text.HAL_UARTEx_ReceiveToIdle_DMA,"ax",%progbits
 2944              		.align	1
 2945              		.global	HAL_UARTEx_ReceiveToIdle_DMA
 2946              		.syntax unified
 2947              		.thumb
 2948              		.thumb_func
 2950              	HAL_UARTEx_ReceiveToIdle_DMA:
 2951              	.LFB148:
1791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief Receive an amount of data in DMA mode till either the expected number of data is receive
1794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   Reception is initiated by this function call. Further progress of reception is achieved
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 104


1795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         to DMA services, transferring automatically received data elements in user reception bu
1796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         calling registered callbacks at half/end of reception. UART IDLE events are also used t
1797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         reception phase as ended. In all cases, callback execution will indicate number of rece
1798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When the UART parity is enabled (PCE = 1), the received data contain
1799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the parity bit (MSB position).
1800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When UART parity is not enabled (PCE = 0), and Word Length is configured to 9 bits (M =
1801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         the received data is handled as a set of uint16_t. In this case, Size must indicate the
1802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         of uint16_t available through pData.
1803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param huart UART handle.
1804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param pData Pointer to data buffer (uint8_t or uint16_t data elements).
1805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param Size  Amount of data elements (uint8_t or uint16_t) to be received.
1806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UARTEx_ReceiveToIdle_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t 
1809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 2952              		.loc 1 1809 1
 2953              		.cfi_startproc
 2954              		@ args = 0, pretend = 0, frame = 48
 2955              		@ frame_needed = 1, uses_anonymous_args = 0
 2956 0000 80B5     		push	{r7, lr}
 2957              		.cfi_def_cfa_offset 8
 2958              		.cfi_offset 7, -8
 2959              		.cfi_offset 14, -4
 2960 0002 8CB0     		sub	sp, sp, #48
 2961              		.cfi_def_cfa_offset 56
 2962 0004 00AF     		add	r7, sp, #0
 2963              		.cfi_def_cfa_register 7
 2964 0006 F860     		str	r0, [r7, #12]
 2965 0008 B960     		str	r1, [r7, #8]
 2966 000a 1346     		mov	r3, r2
 2967 000c FB80     		strh	r3, [r7, #6]	@ movhi
1810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_StatusTypeDef status;
1811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is not already ongoing */
1813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_READY)
 2968              		.loc 1 1813 12
 2969 000e FB68     		ldr	r3, [r7, #12]
 2970 0010 93F83E30 		ldrb	r3, [r3, #62]
 2971 0014 DBB2     		uxtb	r3, r3
 2972              		.loc 1 1813 6
 2973 0016 202B     		cmp	r3, #32
 2974 0018 52D1     		bne	.L157
1814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((pData == NULL) || (Size == 0U))
 2975              		.loc 1 1815 8
 2976 001a BB68     		ldr	r3, [r7, #8]
 2977 001c 002B     		cmp	r3, #0
 2978 001e 02D0     		beq	.L158
 2979              		.loc 1 1815 25 discriminator 1
 2980 0020 FB88     		ldrh	r3, [r7, #6]
 2981 0022 002B     		cmp	r3, #0
 2982 0024 01D1     		bne	.L159
 2983              	.L158:
1816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_ERROR;
 2984              		.loc 1 1817 14
 2985 0026 0123     		movs	r3, #1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 105


 2986 0028 4BE0     		b	.L160
 2987              	.L159:
1818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_LOCK(huart);
 2988              		.loc 1 1820 5
 2989 002a FB68     		ldr	r3, [r7, #12]
 2990 002c 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 2991 0030 012B     		cmp	r3, #1
 2992 0032 01D1     		bne	.L161
 2993              		.loc 1 1820 5 is_stmt 0 discriminator 1
 2994 0034 0223     		movs	r3, #2
 2995 0036 44E0     		b	.L160
 2996              	.L161:
 2997              		.loc 1 1820 5 discriminator 2
 2998 0038 FB68     		ldr	r3, [r7, #12]
 2999 003a 0122     		movs	r2, #1
 3000 003c 83F83C20 		strb	r2, [r3, #60]
1821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set Reception type to reception till IDLE Event*/
1823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_TOIDLE;
 3001              		.loc 1 1823 26 is_stmt 1 discriminator 2
 3002 0040 FB68     		ldr	r3, [r7, #12]
 3003 0042 0122     		movs	r2, #1
 3004 0044 1A63     		str	r2, [r3, #48]
1824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     status =  UART_Start_Receive_DMA(huart, pData, Size);
 3005              		.loc 1 1825 15 discriminator 2
 3006 0046 FB88     		ldrh	r3, [r7, #6]
 3007 0048 1A46     		mov	r2, r3
 3008 004a B968     		ldr	r1, [r7, #8]
 3009 004c F868     		ldr	r0, [r7, #12]
 3010 004e FFF7FEFF 		bl	UART_Start_Receive_DMA
 3011 0052 0346     		mov	r3, r0
 3012 0054 87F82F30 		strb	r3, [r7, #47]
1826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check Rx process has been successfully started */
1828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (status == HAL_OK)
 3013              		.loc 1 1828 8 discriminator 2
 3014 0058 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3015 005c 002B     		cmp	r3, #0
 3016 005e 2CD1     		bne	.L162
1829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3017              		.loc 1 1830 16
 3018 0060 FB68     		ldr	r3, [r7, #12]
 3019 0062 1B6B     		ldr	r3, [r3, #48]
 3020              		.loc 1 1830 10
 3021 0064 012B     		cmp	r3, #1
 3022 0066 25D1     		bne	.L163
 3023              	.LBB383:
1831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UART_CLEAR_IDLEFLAG(huart);
 3024              		.loc 1 1832 9
 3025 0068 0023     		movs	r3, #0
 3026 006a 3B61     		str	r3, [r7, #16]
 3027 006c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 106


 3028 006e 1B68     		ldr	r3, [r3]
 3029 0070 1B68     		ldr	r3, [r3]
 3030 0072 3B61     		str	r3, [r7, #16]
 3031 0074 FB68     		ldr	r3, [r7, #12]
 3032 0076 1B68     		ldr	r3, [r3]
 3033 0078 5B68     		ldr	r3, [r3, #4]
 3034 007a 3B61     		str	r3, [r7, #16]
 3035 007c 3B69     		ldr	r3, [r7, #16]
 3036              	.L166:
 3037              	.LBE383:
 3038              	.LBB384:
1833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 3039              		.loc 1 1833 9 discriminator 1
 3040 007e FB68     		ldr	r3, [r7, #12]
 3041 0080 1B68     		ldr	r3, [r3]
 3042 0082 0C33     		adds	r3, r3, #12
 3043 0084 BB61     		str	r3, [r7, #24]
 3044              	.LBB385:
 3045              	.LBB386:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3046              		.loc 2 1072 4 discriminator 1
 3047 0086 BB69     		ldr	r3, [r7, #24]
 3048              		.syntax unified
 3049              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3050 0088 53E8003F 		ldrex r3, [r3]
 3051              	@ 0 "" 2
 3052              		.thumb
 3053              		.syntax unified
 3054 008c 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3055              		.loc 2 1073 10 discriminator 1
 3056 008e 7B69     		ldr	r3, [r7, #20]
 3057              	.LBE386:
 3058              	.LBE385:
 3059              		.loc 1 1833 9 discriminator 1
 3060 0090 43F01003 		orr	r3, r3, #16
 3061 0094 BB62     		str	r3, [r7, #40]
 3062 0096 FB68     		ldr	r3, [r7, #12]
 3063 0098 1B68     		ldr	r3, [r3]
 3064 009a 0C33     		adds	r3, r3, #12
 3065 009c BA6A     		ldr	r2, [r7, #40]
 3066 009e 7A62     		str	r2, [r7, #36]
 3067 00a0 3B62     		str	r3, [r7, #32]
 3068              	.LBB387:
 3069              	.LBB388:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3070              		.loc 2 1123 4 discriminator 1
 3071 00a2 396A     		ldr	r1, [r7, #32]
 3072 00a4 7A6A     		ldr	r2, [r7, #36]
 3073              		.syntax unified
 3074              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3075 00a6 41E80023 		strex r3, r2, [r1]
 3076              	@ 0 "" 2
 3077              		.thumb
 3078              		.syntax unified
 3079 00aa FB61     		str	r3, [r7, #28]
 3080              		.loc 2 1124 10 discriminator 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 107


 3081 00ac FB69     		ldr	r3, [r7, #28]
 3082              	.LBE388:
 3083              	.LBE387:
 3084              		.loc 1 1833 9 discriminator 1
 3085 00ae 002B     		cmp	r3, #0
 3086 00b0 E5D1     		bne	.L166
 3087 00b2 02E0     		b	.L162
 3088              	.L163:
 3089              	.LBE384:
1834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
1836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In case of errors already pending when reception is started,
1838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Interrupts may have already been raised and lead to reception abortion.
1839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            (Overrun error for instance).
1840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            In such case Reception Type has been reset to HAL_UART_RECEPTION_STANDARD. */
1841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         status = HAL_ERROR;
 3090              		.loc 1 1841 16
 3091 00b4 0123     		movs	r3, #1
 3092 00b6 87F82F30 		strb	r3, [r7, #47]
 3093              	.L162:
1842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return status;
 3094              		.loc 1 1845 12
 3095 00ba 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 3096 00be 00E0     		b	.L160
 3097              	.L157:
1846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
1848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 3098              		.loc 1 1849 12
 3099 00c0 0223     		movs	r3, #2
 3100              	.L160:
1850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3101              		.loc 1 1851 1
 3102 00c2 1846     		mov	r0, r3
 3103 00c4 3037     		adds	r7, r7, #48
 3104              		.cfi_def_cfa_offset 8
 3105 00c6 BD46     		mov	sp, r7
 3106              		.cfi_def_cfa_register 13
 3107              		@ sp needed
 3108 00c8 80BD     		pop	{r7, pc}
 3109              		.cfi_endproc
 3110              	.LFE148:
 3112              		.section	.text.HAL_UART_Abort,"ax",%progbits
 3113              		.align	1
 3114              		.global	HAL_UART_Abort
 3115              		.syntax unified
 3116              		.thumb
 3117              		.thumb_func
 3119              	HAL_UART_Abort:
 3120              	.LFB149:
1852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 108


1853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (blocking mode).
1855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
1857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
1859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort(UART_HandleTypeDef *huart)
1866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3121              		.loc 1 1866 1
 3122              		.cfi_startproc
 3123              		@ args = 0, pretend = 0, frame = 128
 3124              		@ frame_needed = 1, uses_anonymous_args = 0
 3125 0000 80B5     		push	{r7, lr}
 3126              		.cfi_def_cfa_offset 8
 3127              		.cfi_offset 7, -8
 3128              		.cfi_offset 14, -4
 3129 0002 A0B0     		sub	sp, sp, #128
 3130              		.cfi_def_cfa_offset 136
 3131 0004 00AF     		add	r7, sp, #0
 3132              		.cfi_def_cfa_register 7
 3133 0006 7860     		str	r0, [r7, #4]
 3134              	.L170:
 3135              	.LBB389:
1867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
1868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 3136              		.loc 1 1868 3 discriminator 1
 3137 0008 7B68     		ldr	r3, [r7, #4]
 3138 000a 1B68     		ldr	r3, [r3]
 3139 000c 0C33     		adds	r3, r3, #12
 3140 000e FB65     		str	r3, [r7, #92]
 3141              	.LBB390:
 3142              	.LBB391:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3143              		.loc 2 1072 4 discriminator 1
 3144 0010 FB6D     		ldr	r3, [r7, #92]
 3145              		.syntax unified
 3146              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3147 0012 53E8003F 		ldrex r3, [r3]
 3148              	@ 0 "" 2
 3149              		.thumb
 3150              		.syntax unified
 3151 0016 BB65     		str	r3, [r7, #88]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3152              		.loc 2 1073 10 discriminator 1
 3153 0018 BB6D     		ldr	r3, [r7, #88]
 3154              	.LBE391:
 3155              	.LBE390:
 3156              		.loc 1 1868 3 discriminator 1
 3157 001a 23F4F073 		bic	r3, r3, #480
 3158 001e FB67     		str	r3, [r7, #124]
 3159 0020 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 109


 3160 0022 1B68     		ldr	r3, [r3]
 3161 0024 0C33     		adds	r3, r3, #12
 3162 0026 FA6F     		ldr	r2, [r7, #124]
 3163 0028 BA66     		str	r2, [r7, #104]
 3164 002a 7B66     		str	r3, [r7, #100]
 3165              	.LBB392:
 3166              	.LBB393:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3167              		.loc 2 1123 4 discriminator 1
 3168 002c 796E     		ldr	r1, [r7, #100]
 3169 002e BA6E     		ldr	r2, [r7, #104]
 3170              		.syntax unified
 3171              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3172 0030 41E80023 		strex r3, r2, [r1]
 3173              	@ 0 "" 2
 3174              		.thumb
 3175              		.syntax unified
 3176 0034 3B66     		str	r3, [r7, #96]
 3177              		.loc 2 1124 10 discriminator 1
 3178 0036 3B6E     		ldr	r3, [r7, #96]
 3179              	.LBE393:
 3180              	.LBE392:
 3181              		.loc 1 1868 3 discriminator 1
 3182 0038 002B     		cmp	r3, #0
 3183 003a E5D1     		bne	.L170
 3184              	.L173:
 3185              	.LBE389:
 3186              	.LBB394:
1869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3187              		.loc 1 1869 3 discriminator 1
 3188 003c 7B68     		ldr	r3, [r7, #4]
 3189 003e 1B68     		ldr	r3, [r3]
 3190 0040 1433     		adds	r3, r3, #20
 3191 0042 BB64     		str	r3, [r7, #72]
 3192              	.LBB395:
 3193              	.LBB396:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3194              		.loc 2 1072 4 discriminator 1
 3195 0044 BB6C     		ldr	r3, [r7, #72]
 3196              		.syntax unified
 3197              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3198 0046 53E8003F 		ldrex r3, [r3]
 3199              	@ 0 "" 2
 3200              		.thumb
 3201              		.syntax unified
 3202 004a 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3203              		.loc 2 1073 10 discriminator 1
 3204 004c 7B6C     		ldr	r3, [r7, #68]
 3205              	.LBE396:
 3206              	.LBE395:
 3207              		.loc 1 1869 3 discriminator 1
 3208 004e 23F00103 		bic	r3, r3, #1
 3209 0052 BB67     		str	r3, [r7, #120]
 3210 0054 7B68     		ldr	r3, [r7, #4]
 3211 0056 1B68     		ldr	r3, [r3]
 3212 0058 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 110


 3213 005a BA6F     		ldr	r2, [r7, #120]
 3214 005c 7A65     		str	r2, [r7, #84]
 3215 005e 3B65     		str	r3, [r7, #80]
 3216              	.LBB397:
 3217              	.LBB398:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3218              		.loc 2 1123 4 discriminator 1
 3219 0060 396D     		ldr	r1, [r7, #80]
 3220 0062 7A6D     		ldr	r2, [r7, #84]
 3221              		.syntax unified
 3222              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3223 0064 41E80023 		strex r3, r2, [r1]
 3224              	@ 0 "" 2
 3225              		.thumb
 3226              		.syntax unified
 3227 0068 FB64     		str	r3, [r7, #76]
 3228              		.loc 2 1124 10 discriminator 1
 3229 006a FB6C     		ldr	r3, [r7, #76]
 3230              	.LBE398:
 3231              	.LBE397:
 3232              		.loc 1 1869 3 discriminator 1
 3233 006c 002B     		cmp	r3, #0
 3234 006e E5D1     		bne	.L173
 3235              	.LBE394:
1870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
1872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3236              		.loc 1 1872 12
 3237 0070 7B68     		ldr	r3, [r7, #4]
 3238 0072 1B6B     		ldr	r3, [r3, #48]
 3239              		.loc 1 1872 6
 3240 0074 012B     		cmp	r3, #1
 3241 0076 19D1     		bne	.L174
 3242              	.L177:
 3243              	.LBB399:
1873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3244              		.loc 1 1874 5 discriminator 1
 3245 0078 7B68     		ldr	r3, [r7, #4]
 3246 007a 1B68     		ldr	r3, [r3]
 3247 007c 0C33     		adds	r3, r3, #12
 3248 007e 7B63     		str	r3, [r7, #52]
 3249              	.LBB400:
 3250              	.LBB401:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3251              		.loc 2 1072 4 discriminator 1
 3252 0080 7B6B     		ldr	r3, [r7, #52]
 3253              		.syntax unified
 3254              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3255 0082 53E8003F 		ldrex r3, [r3]
 3256              	@ 0 "" 2
 3257              		.thumb
 3258              		.syntax unified
 3259 0086 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3260              		.loc 2 1073 10 discriminator 1
 3261 0088 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 111


 3262              	.LBE401:
 3263              	.LBE400:
 3264              		.loc 1 1874 5 discriminator 1
 3265 008a 23F01003 		bic	r3, r3, #16
 3266 008e 7B67     		str	r3, [r7, #116]
 3267 0090 7B68     		ldr	r3, [r7, #4]
 3268 0092 1B68     		ldr	r3, [r3]
 3269 0094 0C33     		adds	r3, r3, #12
 3270 0096 7A6F     		ldr	r2, [r7, #116]
 3271 0098 3A64     		str	r2, [r7, #64]
 3272 009a FB63     		str	r3, [r7, #60]
 3273              	.LBB402:
 3274              	.LBB403:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3275              		.loc 2 1123 4 discriminator 1
 3276 009c F96B     		ldr	r1, [r7, #60]
 3277 009e 3A6C     		ldr	r2, [r7, #64]
 3278              		.syntax unified
 3279              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3280 00a0 41E80023 		strex r3, r2, [r1]
 3281              	@ 0 "" 2
 3282              		.thumb
 3283              		.syntax unified
 3284 00a4 BB63     		str	r3, [r7, #56]
 3285              		.loc 2 1124 10 discriminator 1
 3286 00a6 BB6B     		ldr	r3, [r7, #56]
 3287              	.LBE403:
 3288              	.LBE402:
 3289              		.loc 1 1874 5 discriminator 1
 3290 00a8 002B     		cmp	r3, #0
 3291 00aa E5D1     		bne	.L177
 3292              	.L174:
 3293              	.LBE399:
1875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3294              		.loc 1 1878 7
 3295 00ac 7B68     		ldr	r3, [r7, #4]
 3296 00ae 1B68     		ldr	r3, [r3]
 3297 00b0 5B69     		ldr	r3, [r3, #20]
 3298 00b2 03F08003 		and	r3, r3, #128
 3299              		.loc 1 1878 6
 3300 00b6 802B     		cmp	r3, #128
 3301 00b8 36D1     		bne	.L178
 3302              	.L181:
 3303              	.LBB404:
1879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3304              		.loc 1 1880 5 discriminator 1
 3305 00ba 7B68     		ldr	r3, [r7, #4]
 3306 00bc 1B68     		ldr	r3, [r3]
 3307 00be 1433     		adds	r3, r3, #20
 3308 00c0 3B62     		str	r3, [r7, #32]
 3309              	.LBB405:
 3310              	.LBB406:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 112


 3311              		.loc 2 1072 4 discriminator 1
 3312 00c2 3B6A     		ldr	r3, [r7, #32]
 3313              		.syntax unified
 3314              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3315 00c4 53E8003F 		ldrex r3, [r3]
 3316              	@ 0 "" 2
 3317              		.thumb
 3318              		.syntax unified
 3319 00c8 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3320              		.loc 2 1073 10 discriminator 1
 3321 00ca FB69     		ldr	r3, [r7, #28]
 3322              	.LBE406:
 3323              	.LBE405:
 3324              		.loc 1 1880 5 discriminator 1
 3325 00cc 23F08003 		bic	r3, r3, #128
 3326 00d0 3B67     		str	r3, [r7, #112]
 3327 00d2 7B68     		ldr	r3, [r7, #4]
 3328 00d4 1B68     		ldr	r3, [r3]
 3329 00d6 1433     		adds	r3, r3, #20
 3330 00d8 3A6F     		ldr	r2, [r7, #112]
 3331 00da FA62     		str	r2, [r7, #44]
 3332 00dc BB62     		str	r3, [r7, #40]
 3333              	.LBB407:
 3334              	.LBB408:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3335              		.loc 2 1123 4 discriminator 1
 3336 00de B96A     		ldr	r1, [r7, #40]
 3337 00e0 FA6A     		ldr	r2, [r7, #44]
 3338              		.syntax unified
 3339              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3340 00e2 41E80023 		strex r3, r2, [r1]
 3341              	@ 0 "" 2
 3342              		.thumb
 3343              		.syntax unified
 3344 00e6 7B62     		str	r3, [r7, #36]
 3345              		.loc 2 1124 10 discriminator 1
 3346 00e8 7B6A     		ldr	r3, [r7, #36]
 3347              	.LBE408:
 3348              	.LBE407:
 3349              		.loc 1 1880 5 discriminator 1
 3350 00ea 002B     		cmp	r3, #0
 3351 00ec E5D1     		bne	.L181
 3352              	.LBE404:
1881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream: use blocking DMA Abort API (no callback) */
1883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3353              		.loc 1 1883 14
 3354 00ee 7B68     		ldr	r3, [r7, #4]
 3355 00f0 5B6B     		ldr	r3, [r3, #52]
 3356              		.loc 1 1883 8
 3357 00f2 002B     		cmp	r3, #0
 3358 00f4 18D0     		beq	.L178
1884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 113


 3359              		.loc 1 1887 12
 3360 00f6 7B68     		ldr	r3, [r7, #4]
 3361 00f8 5B6B     		ldr	r3, [r3, #52]
 3362              		.loc 1 1887 40
 3363 00fa 0022     		movs	r2, #0
 3364 00fc 1A65     		str	r2, [r3, #80]
1888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3365              		.loc 1 1889 11
 3366 00fe 7B68     		ldr	r3, [r7, #4]
 3367 0100 5B6B     		ldr	r3, [r3, #52]
 3368 0102 1846     		mov	r0, r3
 3369 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 3370 0108 0346     		mov	r3, r0
 3371              		.loc 1 1889 10
 3372 010a 002B     		cmp	r3, #0
 3373 010c 0CD0     		beq	.L178
1890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3374              		.loc 1 1891 13
 3375 010e 7B68     		ldr	r3, [r7, #4]
 3376 0110 5B6B     		ldr	r3, [r3, #52]
 3377 0112 1846     		mov	r0, r3
 3378 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 3379 0118 0346     		mov	r3, r0
 3380              		.loc 1 1891 12
 3381 011a 202B     		cmp	r3, #32
 3382 011c 04D1     		bne	.L178
1892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3383              		.loc 1 1894 28
 3384 011e 7B68     		ldr	r3, [r7, #4]
 3385 0120 1022     		movs	r2, #16
 3386 0122 1A64     		str	r2, [r3, #64]
1895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3387              		.loc 1 1896 18
 3388 0124 0323     		movs	r3, #3
 3389 0126 52E0     		b	.L182
 3390              	.L178:
1897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
1903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3391              		.loc 1 1903 7
 3392 0128 7B68     		ldr	r3, [r7, #4]
 3393 012a 1B68     		ldr	r3, [r3]
 3394 012c 5B69     		ldr	r3, [r3, #20]
 3395 012e 03F04003 		and	r3, r3, #64
 3396              		.loc 1 1903 6
 3397 0132 402B     		cmp	r3, #64
 3398 0134 36D1     		bne	.L183
 3399              	.L186:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 114


 3400              	.LBB409:
1904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3401              		.loc 1 1905 5 discriminator 1
 3402 0136 7B68     		ldr	r3, [r7, #4]
 3403 0138 1B68     		ldr	r3, [r3]
 3404 013a 1433     		adds	r3, r3, #20
 3405 013c FB60     		str	r3, [r7, #12]
 3406              	.LBB410:
 3407              	.LBB411:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3408              		.loc 2 1072 4 discriminator 1
 3409 013e FB68     		ldr	r3, [r7, #12]
 3410              		.syntax unified
 3411              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3412 0140 53E8003F 		ldrex r3, [r3]
 3413              	@ 0 "" 2
 3414              		.thumb
 3415              		.syntax unified
 3416 0144 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3417              		.loc 2 1073 10 discriminator 1
 3418 0146 BB68     		ldr	r3, [r7, #8]
 3419              	.LBE411:
 3420              	.LBE410:
 3421              		.loc 1 1905 5 discriminator 1
 3422 0148 23F04003 		bic	r3, r3, #64
 3423 014c FB66     		str	r3, [r7, #108]
 3424 014e 7B68     		ldr	r3, [r7, #4]
 3425 0150 1B68     		ldr	r3, [r3]
 3426 0152 1433     		adds	r3, r3, #20
 3427 0154 FA6E     		ldr	r2, [r7, #108]
 3428 0156 BA61     		str	r2, [r7, #24]
 3429 0158 7B61     		str	r3, [r7, #20]
 3430              	.LBB412:
 3431              	.LBB413:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3432              		.loc 2 1123 4 discriminator 1
 3433 015a 7969     		ldr	r1, [r7, #20]
 3434 015c BA69     		ldr	r2, [r7, #24]
 3435              		.syntax unified
 3436              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3437 015e 41E80023 		strex r3, r2, [r1]
 3438              	@ 0 "" 2
 3439              		.thumb
 3440              		.syntax unified
 3441 0162 3B61     		str	r3, [r7, #16]
 3442              		.loc 2 1124 10 discriminator 1
 3443 0164 3B69     		ldr	r3, [r7, #16]
 3444              	.LBE413:
 3445              	.LBE412:
 3446              		.loc 1 1905 5 discriminator 1
 3447 0166 002B     		cmp	r3, #0
 3448 0168 E5D1     		bne	.L186
 3449              	.LBE409:
1906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream: use blocking DMA Abort API (no callback) */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 115


1908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3450              		.loc 1 1908 14
 3451 016a 7B68     		ldr	r3, [r7, #4]
 3452 016c 9B6B     		ldr	r3, [r3, #56]
 3453              		.loc 1 1908 8
 3454 016e 002B     		cmp	r3, #0
 3455 0170 18D0     		beq	.L183
1909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3456              		.loc 1 1912 12
 3457 0172 7B68     		ldr	r3, [r7, #4]
 3458 0174 9B6B     		ldr	r3, [r3, #56]
 3459              		.loc 1 1912 40
 3460 0176 0022     		movs	r2, #0
 3461 0178 1A65     		str	r2, [r3, #80]
1913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3462              		.loc 1 1914 11
 3463 017a 7B68     		ldr	r3, [r7, #4]
 3464 017c 9B6B     		ldr	r3, [r3, #56]
 3465 017e 1846     		mov	r0, r3
 3466 0180 FFF7FEFF 		bl	HAL_DMA_Abort
 3467 0184 0346     		mov	r3, r0
 3468              		.loc 1 1914 10
 3469 0186 002B     		cmp	r3, #0
 3470 0188 0CD0     		beq	.L183
1915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3471              		.loc 1 1916 13
 3472 018a 7B68     		ldr	r3, [r7, #4]
 3473 018c 9B6B     		ldr	r3, [r3, #56]
 3474 018e 1846     		mov	r0, r3
 3475 0190 FFF7FEFF 		bl	HAL_DMA_GetError
 3476 0194 0346     		mov	r3, r0
 3477              		.loc 1 1916 12
 3478 0196 202B     		cmp	r3, #32
 3479 0198 04D1     		bne	.L183
1917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3480              		.loc 1 1919 28
 3481 019a 7B68     		ldr	r3, [r7, #4]
 3482 019c 1022     		movs	r2, #16
 3483 019e 1A64     		str	r2, [r3, #64]
1920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3484              		.loc 1 1921 18
 3485 01a0 0323     		movs	r3, #3
 3486 01a2 14E0     		b	.L182
 3487              	.L183:
1922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 116


1927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx and Rx transfer counters */
1928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3488              		.loc 1 1928 22
 3489 01a4 7B68     		ldr	r3, [r7, #4]
 3490 01a6 0022     		movs	r2, #0
 3491 01a8 DA84     		strh	r2, [r3, #38]	@ movhi
1929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3492              		.loc 1 1929 22
 3493 01aa 7B68     		ldr	r3, [r7, #4]
 3494 01ac 0022     		movs	r2, #0
 3495 01ae DA85     		strh	r2, [r3, #46]	@ movhi
1930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
1932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 3496              		.loc 1 1932 20
 3497 01b0 7B68     		ldr	r3, [r7, #4]
 3498 01b2 0022     		movs	r2, #0
 3499 01b4 1A64     		str	r2, [r3, #64]
1933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState and huart->gState to Ready */
1935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 3500              		.loc 1 1935 18
 3501 01b6 7B68     		ldr	r3, [r7, #4]
 3502 01b8 2022     		movs	r2, #32
 3503 01ba 83F83E20 		strb	r2, [r3, #62]
1936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3504              		.loc 1 1936 17
 3505 01be 7B68     		ldr	r3, [r7, #4]
 3506 01c0 2022     		movs	r2, #32
 3507 01c2 83F83D20 		strb	r2, [r3, #61]
1937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 3508              		.loc 1 1937 24
 3509 01c6 7B68     		ldr	r3, [r7, #4]
 3510 01c8 0022     		movs	r2, #0
 3511 01ca 1A63     		str	r2, [r3, #48]
1938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3512              		.loc 1 1939 10
 3513 01cc 0023     		movs	r3, #0
 3514              	.L182:
1940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3515              		.loc 1 1940 1
 3516 01ce 1846     		mov	r0, r3
 3517 01d0 8037     		adds	r7, r7, #128
 3518              		.cfi_def_cfa_offset 8
 3519 01d2 BD46     		mov	sp, r7
 3520              		.cfi_def_cfa_register 13
 3521              		@ sp needed
 3522 01d4 80BD     		pop	{r7, pc}
 3523              		.cfi_endproc
 3524              	.LFE149:
 3526              		.section	.text.HAL_UART_AbortTransmit,"ax",%progbits
 3527              		.align	1
 3528              		.global	HAL_UART_AbortTransmit
 3529              		.syntax unified
 3530              		.thumb
 3531              		.thumb_func
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 117


 3533              	HAL_UART_AbortTransmit:
 3534              	.LFB150:
1941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (blocking mode).
1944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
1946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
1948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
1949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
1950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
1951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
1952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
1953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
1954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit(UART_HandleTypeDef *huart)
1955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3535              		.loc 1 1955 1
 3536              		.cfi_startproc
 3537              		@ args = 0, pretend = 0, frame = 56
 3538              		@ frame_needed = 1, uses_anonymous_args = 0
 3539 0000 80B5     		push	{r7, lr}
 3540              		.cfi_def_cfa_offset 8
 3541              		.cfi_offset 7, -8
 3542              		.cfi_offset 14, -4
 3543 0002 8EB0     		sub	sp, sp, #56
 3544              		.cfi_def_cfa_offset 64
 3545 0004 00AF     		add	r7, sp, #0
 3546              		.cfi_def_cfa_register 7
 3547 0006 7860     		str	r0, [r7, #4]
 3548              	.L190:
 3549              	.LBB414:
1956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
1957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 3550              		.loc 1 1957 3 discriminator 1
 3551 0008 7B68     		ldr	r3, [r7, #4]
 3552 000a 1B68     		ldr	r3, [r3]
 3553 000c 0C33     		adds	r3, r3, #12
 3554 000e 3B62     		str	r3, [r7, #32]
 3555              	.LBB415:
 3556              	.LBB416:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3557              		.loc 2 1072 4 discriminator 1
 3558 0010 3B6A     		ldr	r3, [r7, #32]
 3559              		.syntax unified
 3560              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3561 0012 53E8003F 		ldrex r3, [r3]
 3562              	@ 0 "" 2
 3563              		.thumb
 3564              		.syntax unified
 3565 0016 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3566              		.loc 2 1073 10 discriminator 1
 3567 0018 FB69     		ldr	r3, [r7, #28]
 3568              	.LBE416:
 3569              	.LBE415:
 3570              		.loc 1 1957 3 discriminator 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 118


 3571 001a 23F0C003 		bic	r3, r3, #192
 3572 001e 7B63     		str	r3, [r7, #52]
 3573 0020 7B68     		ldr	r3, [r7, #4]
 3574 0022 1B68     		ldr	r3, [r3]
 3575 0024 0C33     		adds	r3, r3, #12
 3576 0026 7A6B     		ldr	r2, [r7, #52]
 3577 0028 FA62     		str	r2, [r7, #44]
 3578 002a BB62     		str	r3, [r7, #40]
 3579              	.LBB417:
 3580              	.LBB418:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3581              		.loc 2 1123 4 discriminator 1
 3582 002c B96A     		ldr	r1, [r7, #40]
 3583 002e FA6A     		ldr	r2, [r7, #44]
 3584              		.syntax unified
 3585              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3586 0030 41E80023 		strex r3, r2, [r1]
 3587              	@ 0 "" 2
 3588              		.thumb
 3589              		.syntax unified
 3590 0034 7B62     		str	r3, [r7, #36]
 3591              		.loc 2 1124 10 discriminator 1
 3592 0036 7B6A     		ldr	r3, [r7, #36]
 3593              	.LBE418:
 3594              	.LBE417:
 3595              		.loc 1 1957 3 discriminator 1
 3596 0038 002B     		cmp	r3, #0
 3597 003a E5D1     		bne	.L190
 3598              	.LBE414:
1958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
1960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 3599              		.loc 1 1960 7
 3600 003c 7B68     		ldr	r3, [r7, #4]
 3601 003e 1B68     		ldr	r3, [r3]
 3602 0040 5B69     		ldr	r3, [r3, #20]
 3603 0042 03F08003 		and	r3, r3, #128
 3604              		.loc 1 1960 6
 3605 0046 802B     		cmp	r3, #128
 3606 0048 36D1     		bne	.L191
 3607              	.L194:
 3608              	.LBB419:
1961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
1962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 3609              		.loc 1 1962 5 discriminator 1
 3610 004a 7B68     		ldr	r3, [r7, #4]
 3611 004c 1B68     		ldr	r3, [r3]
 3612 004e 1433     		adds	r3, r3, #20
 3613 0050 FB60     		str	r3, [r7, #12]
 3614              	.LBB420:
 3615              	.LBB421:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3616              		.loc 2 1072 4 discriminator 1
 3617 0052 FB68     		ldr	r3, [r7, #12]
 3618              		.syntax unified
 3619              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3620 0054 53E8003F 		ldrex r3, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 119


 3621              	@ 0 "" 2
 3622              		.thumb
 3623              		.syntax unified
 3624 0058 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3625              		.loc 2 1073 10 discriminator 1
 3626 005a BB68     		ldr	r3, [r7, #8]
 3627              	.LBE421:
 3628              	.LBE420:
 3629              		.loc 1 1962 5 discriminator 1
 3630 005c 23F08003 		bic	r3, r3, #128
 3631 0060 3B63     		str	r3, [r7, #48]
 3632 0062 7B68     		ldr	r3, [r7, #4]
 3633 0064 1B68     		ldr	r3, [r3]
 3634 0066 1433     		adds	r3, r3, #20
 3635 0068 3A6B     		ldr	r2, [r7, #48]
 3636 006a BA61     		str	r2, [r7, #24]
 3637 006c 7B61     		str	r3, [r7, #20]
 3638              	.LBB422:
 3639              	.LBB423:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3640              		.loc 2 1123 4 discriminator 1
 3641 006e 7969     		ldr	r1, [r7, #20]
 3642 0070 BA69     		ldr	r2, [r7, #24]
 3643              		.syntax unified
 3644              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3645 0072 41E80023 		strex r3, r2, [r1]
 3646              	@ 0 "" 2
 3647              		.thumb
 3648              		.syntax unified
 3649 0076 3B61     		str	r3, [r7, #16]
 3650              		.loc 2 1124 10 discriminator 1
 3651 0078 3B69     		ldr	r3, [r7, #16]
 3652              	.LBE423:
 3653              	.LBE422:
 3654              		.loc 1 1962 5 discriminator 1
 3655 007a 002B     		cmp	r3, #0
 3656 007c E5D1     		bne	.L194
 3657              	.LBE419:
1963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
1965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 3658              		.loc 1 1965 14
 3659 007e 7B68     		ldr	r3, [r7, #4]
 3660 0080 5B6B     		ldr	r3, [r3, #52]
 3661              		.loc 1 1965 8
 3662 0082 002B     		cmp	r3, #0
 3663 0084 18D0     		beq	.L191
1966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
1967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
1968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
1969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 3664              		.loc 1 1969 12
 3665 0086 7B68     		ldr	r3, [r7, #4]
 3666 0088 5B6B     		ldr	r3, [r3, #52]
 3667              		.loc 1 1969 40
 3668 008a 0022     		movs	r2, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 120


 3669 008c 1A65     		str	r2, [r3, #80]
1970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmatx) != HAL_OK)
 3670              		.loc 1 1971 11
 3671 008e 7B68     		ldr	r3, [r7, #4]
 3672 0090 5B6B     		ldr	r3, [r3, #52]
 3673 0092 1846     		mov	r0, r3
 3674 0094 FFF7FEFF 		bl	HAL_DMA_Abort
 3675 0098 0346     		mov	r3, r0
 3676              		.loc 1 1971 10
 3677 009a 002B     		cmp	r3, #0
 3678 009c 0CD0     		beq	.L191
1972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
1973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmatx) == HAL_DMA_ERROR_TIMEOUT)
 3679              		.loc 1 1973 13
 3680 009e 7B68     		ldr	r3, [r7, #4]
 3681 00a0 5B6B     		ldr	r3, [r3, #52]
 3682 00a2 1846     		mov	r0, r3
 3683 00a4 FFF7FEFF 		bl	HAL_DMA_GetError
 3684 00a8 0346     		mov	r3, r0
 3685              		.loc 1 1973 12
 3686 00aa 202B     		cmp	r3, #32
 3687 00ac 04D1     		bne	.L191
1974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
1975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
1976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3688              		.loc 1 1976 28
 3689 00ae 7B68     		ldr	r3, [r7, #4]
 3690 00b0 1022     		movs	r2, #16
 3691 00b2 1A64     		str	r2, [r3, #64]
1977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3692              		.loc 1 1978 18
 3693 00b4 0323     		movs	r3, #3
 3694 00b6 07E0     		b	.L195
 3695              	.L191:
1979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
1980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
1981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
1982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
1983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Tx transfer counter */
1985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 3696              		.loc 1 1985 22
 3697 00b8 7B68     		ldr	r3, [r7, #4]
 3698 00ba 0022     		movs	r2, #0
 3699 00bc DA84     		strh	r2, [r3, #38]	@ movhi
1986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
1988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 3700              		.loc 1 1988 17
 3701 00be 7B68     		ldr	r3, [r7, #4]
 3702 00c0 2022     		movs	r2, #32
 3703 00c2 83F83D20 		strb	r2, [r3, #61]
1989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 3704              		.loc 1 1990 10
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 121


 3705 00c6 0023     		movs	r3, #0
 3706              	.L195:
1991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 3707              		.loc 1 1991 1
 3708 00c8 1846     		mov	r0, r3
 3709 00ca 3837     		adds	r7, r7, #56
 3710              		.cfi_def_cfa_offset 8
 3711 00cc BD46     		mov	sp, r7
 3712              		.cfi_def_cfa_register 13
 3713              		@ sp needed
 3714 00ce 80BD     		pop	{r7, pc}
 3715              		.cfi_endproc
 3716              	.LFE150:
 3718              		.section	.text.HAL_UART_AbortReceive,"ax",%progbits
 3719              		.align	1
 3720              		.global	HAL_UART_AbortReceive
 3721              		.syntax unified
 3722              		.thumb
 3723              		.thumb_func
 3725              	HAL_UART_AbortReceive:
 3726              	.LFB151:
1992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
1993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
1994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (blocking mode).
1995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
1996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
1997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
1998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
1999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort (in case of transfer in DMA mode)
2001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in blocking mode : when exiting function, Abort is considere
2003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive(UART_HandleTypeDef *huart)
2006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 3727              		.loc 1 2006 1
 3728              		.cfi_startproc
 3729              		@ args = 0, pretend = 0, frame = 104
 3730              		@ frame_needed = 1, uses_anonymous_args = 0
 3731 0000 80B5     		push	{r7, lr}
 3732              		.cfi_def_cfa_offset 8
 3733              		.cfi_offset 7, -8
 3734              		.cfi_offset 14, -4
 3735 0002 9AB0     		sub	sp, sp, #104
 3736              		.cfi_def_cfa_offset 112
 3737 0004 00AF     		add	r7, sp, #0
 3738              		.cfi_def_cfa_register 7
 3739 0006 7860     		str	r0, [r7, #4]
 3740              	.L199:
 3741              	.LBB424:
2007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 3742              		.loc 1 2008 3 discriminator 1
 3743 0008 7B68     		ldr	r3, [r7, #4]
 3744 000a 1B68     		ldr	r3, [r3]
 3745 000c 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 122


 3746 000e BB64     		str	r3, [r7, #72]
 3747              	.LBB425:
 3748              	.LBB426:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3749              		.loc 2 1072 4 discriminator 1
 3750 0010 BB6C     		ldr	r3, [r7, #72]
 3751              		.syntax unified
 3752              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3753 0012 53E8003F 		ldrex r3, [r3]
 3754              	@ 0 "" 2
 3755              		.thumb
 3756              		.syntax unified
 3757 0016 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3758              		.loc 2 1073 10 discriminator 1
 3759 0018 7B6C     		ldr	r3, [r7, #68]
 3760              	.LBE426:
 3761              	.LBE425:
 3762              		.loc 1 2008 3 discriminator 1
 3763 001a 23F49073 		bic	r3, r3, #288
 3764 001e 7B66     		str	r3, [r7, #100]
 3765 0020 7B68     		ldr	r3, [r7, #4]
 3766 0022 1B68     		ldr	r3, [r3]
 3767 0024 0C33     		adds	r3, r3, #12
 3768 0026 7A6E     		ldr	r2, [r7, #100]
 3769 0028 7A65     		str	r2, [r7, #84]
 3770 002a 3B65     		str	r3, [r7, #80]
 3771              	.LBB427:
 3772              	.LBB428:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3773              		.loc 2 1123 4 discriminator 1
 3774 002c 396D     		ldr	r1, [r7, #80]
 3775 002e 7A6D     		ldr	r2, [r7, #84]
 3776              		.syntax unified
 3777              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3778 0030 41E80023 		strex r3, r2, [r1]
 3779              	@ 0 "" 2
 3780              		.thumb
 3781              		.syntax unified
 3782 0034 FB64     		str	r3, [r7, #76]
 3783              		.loc 2 1124 10 discriminator 1
 3784 0036 FB6C     		ldr	r3, [r7, #76]
 3785              	.LBE428:
 3786              	.LBE427:
 3787              		.loc 1 2008 3 discriminator 1
 3788 0038 002B     		cmp	r3, #0
 3789 003a E5D1     		bne	.L199
 3790              	.L202:
 3791              	.LBE424:
 3792              	.LBB429:
2009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 3793              		.loc 1 2009 3 discriminator 1
 3794 003c 7B68     		ldr	r3, [r7, #4]
 3795 003e 1B68     		ldr	r3, [r3]
 3796 0040 1433     		adds	r3, r3, #20
 3797 0042 7B63     		str	r3, [r7, #52]
 3798              	.LBB430:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 123


 3799              	.LBB431:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3800              		.loc 2 1072 4 discriminator 1
 3801 0044 7B6B     		ldr	r3, [r7, #52]
 3802              		.syntax unified
 3803              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3804 0046 53E8003F 		ldrex r3, [r3]
 3805              	@ 0 "" 2
 3806              		.thumb
 3807              		.syntax unified
 3808 004a 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3809              		.loc 2 1073 10 discriminator 1
 3810 004c 3B6B     		ldr	r3, [r7, #48]
 3811              	.LBE431:
 3812              	.LBE430:
 3813              		.loc 1 2009 3 discriminator 1
 3814 004e 23F00103 		bic	r3, r3, #1
 3815 0052 3B66     		str	r3, [r7, #96]
 3816 0054 7B68     		ldr	r3, [r7, #4]
 3817 0056 1B68     		ldr	r3, [r3]
 3818 0058 1433     		adds	r3, r3, #20
 3819 005a 3A6E     		ldr	r2, [r7, #96]
 3820 005c 3A64     		str	r2, [r7, #64]
 3821 005e FB63     		str	r3, [r7, #60]
 3822              	.LBB432:
 3823              	.LBB433:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3824              		.loc 2 1123 4 discriminator 1
 3825 0060 F96B     		ldr	r1, [r7, #60]
 3826 0062 3A6C     		ldr	r2, [r7, #64]
 3827              		.syntax unified
 3828              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3829 0064 41E80023 		strex r3, r2, [r1]
 3830              	@ 0 "" 2
 3831              		.thumb
 3832              		.syntax unified
 3833 0068 BB63     		str	r3, [r7, #56]
 3834              		.loc 2 1124 10 discriminator 1
 3835 006a BB6B     		ldr	r3, [r7, #56]
 3836              	.LBE433:
 3837              	.LBE432:
 3838              		.loc 1 2009 3 discriminator 1
 3839 006c 002B     		cmp	r3, #0
 3840 006e E5D1     		bne	.L202
 3841              	.LBE429:
2010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 3842              		.loc 1 2012 12
 3843 0070 7B68     		ldr	r3, [r7, #4]
 3844 0072 1B6B     		ldr	r3, [r3, #48]
 3845              		.loc 1 2012 6
 3846 0074 012B     		cmp	r3, #1
 3847 0076 19D1     		bne	.L203
 3848              	.L206:
 3849              	.LBB434:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 124


2013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 3850              		.loc 1 2014 5 discriminator 1
 3851 0078 7B68     		ldr	r3, [r7, #4]
 3852 007a 1B68     		ldr	r3, [r3]
 3853 007c 0C33     		adds	r3, r3, #12
 3854 007e 3B62     		str	r3, [r7, #32]
 3855              	.LBB435:
 3856              	.LBB436:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3857              		.loc 2 1072 4 discriminator 1
 3858 0080 3B6A     		ldr	r3, [r7, #32]
 3859              		.syntax unified
 3860              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3861 0082 53E8003F 		ldrex r3, [r3]
 3862              	@ 0 "" 2
 3863              		.thumb
 3864              		.syntax unified
 3865 0086 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3866              		.loc 2 1073 10 discriminator 1
 3867 0088 FB69     		ldr	r3, [r7, #28]
 3868              	.LBE436:
 3869              	.LBE435:
 3870              		.loc 1 2014 5 discriminator 1
 3871 008a 23F01003 		bic	r3, r3, #16
 3872 008e FB65     		str	r3, [r7, #92]
 3873 0090 7B68     		ldr	r3, [r7, #4]
 3874 0092 1B68     		ldr	r3, [r3]
 3875 0094 0C33     		adds	r3, r3, #12
 3876 0096 FA6D     		ldr	r2, [r7, #92]
 3877 0098 FA62     		str	r2, [r7, #44]
 3878 009a BB62     		str	r3, [r7, #40]
 3879              	.LBB437:
 3880              	.LBB438:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3881              		.loc 2 1123 4 discriminator 1
 3882 009c B96A     		ldr	r1, [r7, #40]
 3883 009e FA6A     		ldr	r2, [r7, #44]
 3884              		.syntax unified
 3885              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3886 00a0 41E80023 		strex r3, r2, [r1]
 3887              	@ 0 "" 2
 3888              		.thumb
 3889              		.syntax unified
 3890 00a4 7B62     		str	r3, [r7, #36]
 3891              		.loc 2 1124 10 discriminator 1
 3892 00a6 7B6A     		ldr	r3, [r7, #36]
 3893              	.LBE438:
 3894              	.LBE437:
 3895              		.loc 1 2014 5 discriminator 1
 3896 00a8 002B     		cmp	r3, #0
 3897 00aa E5D1     		bne	.L206
 3898              	.L203:
 3899              	.LBE434:
2015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 125


2017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 3900              		.loc 1 2018 7
 3901 00ac 7B68     		ldr	r3, [r7, #4]
 3902 00ae 1B68     		ldr	r3, [r3]
 3903 00b0 5B69     		ldr	r3, [r3, #20]
 3904 00b2 03F04003 		and	r3, r3, #64
 3905              		.loc 1 2018 6
 3906 00b6 402B     		cmp	r3, #64
 3907 00b8 36D1     		bne	.L207
 3908              	.L210:
 3909              	.LBB439:
2019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 3910              		.loc 1 2020 5 discriminator 1
 3911 00ba 7B68     		ldr	r3, [r7, #4]
 3912 00bc 1B68     		ldr	r3, [r3]
 3913 00be 1433     		adds	r3, r3, #20
 3914 00c0 FB60     		str	r3, [r7, #12]
 3915              	.LBB440:
 3916              	.LBB441:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3917              		.loc 2 1072 4 discriminator 1
 3918 00c2 FB68     		ldr	r3, [r7, #12]
 3919              		.syntax unified
 3920              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3921 00c4 53E8003F 		ldrex r3, [r3]
 3922              	@ 0 "" 2
 3923              		.thumb
 3924              		.syntax unified
 3925 00c8 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 3926              		.loc 2 1073 10 discriminator 1
 3927 00ca BB68     		ldr	r3, [r7, #8]
 3928              	.LBE441:
 3929              	.LBE440:
 3930              		.loc 1 2020 5 discriminator 1
 3931 00cc 23F04003 		bic	r3, r3, #64
 3932 00d0 BB65     		str	r3, [r7, #88]
 3933 00d2 7B68     		ldr	r3, [r7, #4]
 3934 00d4 1B68     		ldr	r3, [r3]
 3935 00d6 1433     		adds	r3, r3, #20
 3936 00d8 BA6D     		ldr	r2, [r7, #88]
 3937 00da BA61     		str	r2, [r7, #24]
 3938 00dc 7B61     		str	r3, [r7, #20]
 3939              	.LBB442:
 3940              	.LBB443:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 3941              		.loc 2 1123 4 discriminator 1
 3942 00de 7969     		ldr	r1, [r7, #20]
 3943 00e0 BA69     		ldr	r2, [r7, #24]
 3944              		.syntax unified
 3945              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 3946 00e2 41E80023 		strex r3, r2, [r1]
 3947              	@ 0 "" 2
 3948              		.thumb
 3949              		.syntax unified
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 126


 3950 00e6 3B61     		str	r3, [r7, #16]
 3951              		.loc 2 1124 10 discriminator 1
 3952 00e8 3B69     		ldr	r3, [r7, #16]
 3953              	.LBE443:
 3954              	.LBE442:
 3955              		.loc 1 2020 5 discriminator 1
 3956 00ea 002B     		cmp	r3, #0
 3957 00ec E5D1     		bne	.L210
 3958              	.LBE439:
2021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 3959              		.loc 1 2023 14
 3960 00ee 7B68     		ldr	r3, [r7, #4]
 3961 00f0 9B6B     		ldr	r3, [r3, #56]
 3962              		.loc 1 2023 8
 3963 00f2 002B     		cmp	r3, #0
 3964 00f4 18D0     		beq	.L207
2024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback to Null.
2026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          No call back execution at end of DMA abort procedure */
2027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 3965              		.loc 1 2027 12
 3966 00f6 7B68     		ldr	r3, [r7, #4]
 3967 00f8 9B6B     		ldr	r3, [r3, #56]
 3968              		.loc 1 2027 40
 3969 00fa 0022     		movs	r2, #0
 3970 00fc 1A65     		str	r2, [r3, #80]
2028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort(huart->hdmarx) != HAL_OK)
 3971              		.loc 1 2029 11
 3972 00fe 7B68     		ldr	r3, [r7, #4]
 3973 0100 9B6B     		ldr	r3, [r3, #56]
 3974 0102 1846     		mov	r0, r3
 3975 0104 FFF7FEFF 		bl	HAL_DMA_Abort
 3976 0108 0346     		mov	r3, r0
 3977              		.loc 1 2029 10
 3978 010a 002B     		cmp	r3, #0
 3979 010c 0CD0     		beq	.L207
2030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_DMA_GetError(huart->hdmarx) == HAL_DMA_ERROR_TIMEOUT)
 3980              		.loc 1 2031 13
 3981 010e 7B68     		ldr	r3, [r7, #4]
 3982 0110 9B6B     		ldr	r3, [r3, #56]
 3983 0112 1846     		mov	r0, r3
 3984 0114 FFF7FEFF 		bl	HAL_DMA_GetError
 3985 0118 0346     		mov	r3, r0
 3986              		.loc 1 2031 12
 3987 011a 202B     		cmp	r3, #32
 3988 011c 04D1     		bne	.L207
2032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Set error code to DMA */
2034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCode = HAL_UART_ERROR_DMA;
 3989              		.loc 1 2034 28
 3990 011e 7B68     		ldr	r3, [r7, #4]
 3991 0120 1022     		movs	r2, #16
 3992 0122 1A64     		str	r2, [r3, #64]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 127


2035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           return HAL_TIMEOUT;
 3993              		.loc 1 2036 18
 3994 0124 0323     		movs	r3, #3
 3995 0126 0AE0     		b	.L211
 3996              	.L207:
2037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset Rx transfer counter */
2043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 3997              		.loc 1 2043 22
 3998 0128 7B68     		ldr	r3, [r7, #4]
 3999 012a 0022     		movs	r2, #0
 4000 012c DA85     		strh	r2, [r3, #46]	@ movhi
2044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
2046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 4001              		.loc 1 2046 18
 4002 012e 7B68     		ldr	r3, [r7, #4]
 4003 0130 2022     		movs	r2, #32
 4004 0132 83F83E20 		strb	r2, [r3, #62]
2047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4005              		.loc 1 2047 24
 4006 0136 7B68     		ldr	r3, [r7, #4]
 4007 0138 0022     		movs	r2, #0
 4008 013a 1A63     		str	r2, [r3, #48]
2048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4009              		.loc 1 2049 10
 4010 013c 0023     		movs	r3, #0
 4011              	.L211:
2050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4012              		.loc 1 2050 1
 4013 013e 1846     		mov	r0, r3
 4014 0140 6837     		adds	r7, r7, #104
 4015              		.cfi_def_cfa_offset 8
 4016 0142 BD46     		mov	sp, r7
 4017              		.cfi_def_cfa_register 13
 4018              		@ sp needed
 4019 0144 80BD     		pop	{r7, pc}
 4020              		.cfi_endproc
 4021              	.LFE151:
 4023              		.section	.text.HAL_UART_Abort_IT,"ax",%progbits
 4024              		.align	1
 4025              		.global	HAL_UART_Abort_IT
 4026              		.syntax unified
 4027              		.thumb
 4028              		.thumb_func
 4030              	HAL_UART_Abort_IT:
 4031              	.LFB152:
2051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing transfers (Interrupt mode).
2054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 128


2055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing transfer started in Interrupt or 
2056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx and Rx)
2058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_Abort_IT(UART_HandleTypeDef *huart)
2067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4032              		.loc 1 2067 1
 4033              		.cfi_startproc
 4034              		@ args = 0, pretend = 0, frame = 136
 4035              		@ frame_needed = 1, uses_anonymous_args = 0
 4036 0000 80B5     		push	{r7, lr}
 4037              		.cfi_def_cfa_offset 8
 4038              		.cfi_offset 7, -8
 4039              		.cfi_offset 14, -4
 4040 0002 A2B0     		sub	sp, sp, #136
 4041              		.cfi_def_cfa_offset 144
 4042 0004 00AF     		add	r7, sp, #0
 4043              		.cfi_def_cfa_register 7
 4044 0006 7860     		str	r0, [r7, #4]
2068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t AbortCplt = 0x01U;
 4045              		.loc 1 2068 12
 4046 0008 0123     		movs	r3, #1
 4047 000a C7F88430 		str	r3, [r7, #132]
 4048              	.L215:
 4049              	.LBB444:
2069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE, TCIE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE | USA
 4050              		.loc 1 2071 3 discriminator 1
 4051 000e 7B68     		ldr	r3, [r7, #4]
 4052 0010 1B68     		ldr	r3, [r3]
 4053 0012 0C33     		adds	r3, r3, #12
 4054 0014 3B66     		str	r3, [r7, #96]
 4055              	.LBB445:
 4056              	.LBB446:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4057              		.loc 2 1072 4 discriminator 1
 4058 0016 3B6E     		ldr	r3, [r7, #96]
 4059              		.syntax unified
 4060              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4061 0018 53E8003F 		ldrex r3, [r3]
 4062              	@ 0 "" 2
 4063              		.thumb
 4064              		.syntax unified
 4065 001c FB65     		str	r3, [r7, #92]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4066              		.loc 2 1073 10 discriminator 1
 4067 001e FB6D     		ldr	r3, [r7, #92]
 4068              	.LBE446:
 4069              	.LBE445:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 129


 4070              		.loc 1 2071 3 discriminator 1
 4071 0020 23F4F073 		bic	r3, r3, #480
 4072 0024 C7F88030 		str	r3, [r7, #128]
 4073 0028 7B68     		ldr	r3, [r7, #4]
 4074 002a 1B68     		ldr	r3, [r3]
 4075 002c 0C33     		adds	r3, r3, #12
 4076 002e D7F88020 		ldr	r2, [r7, #128]
 4077 0032 FA66     		str	r2, [r7, #108]
 4078 0034 BB66     		str	r3, [r7, #104]
 4079              	.LBB447:
 4080              	.LBB448:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4081              		.loc 2 1123 4 discriminator 1
 4082 0036 B96E     		ldr	r1, [r7, #104]
 4083 0038 FA6E     		ldr	r2, [r7, #108]
 4084              		.syntax unified
 4085              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4086 003a 41E80023 		strex r3, r2, [r1]
 4087              	@ 0 "" 2
 4088              		.thumb
 4089              		.syntax unified
 4090 003e 7B66     		str	r3, [r7, #100]
 4091              		.loc 2 1124 10 discriminator 1
 4092 0040 7B6E     		ldr	r3, [r7, #100]
 4093              	.LBE448:
 4094              	.LBE447:
 4095              		.loc 1 2071 3 discriminator 1
 4096 0042 002B     		cmp	r3, #0
 4097 0044 E3D1     		bne	.L215
 4098              	.L218:
 4099              	.LBE444:
 4100              	.LBB449:
2072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4101              		.loc 1 2072 3 discriminator 1
 4102 0046 7B68     		ldr	r3, [r7, #4]
 4103 0048 1B68     		ldr	r3, [r3]
 4104 004a 1433     		adds	r3, r3, #20
 4105 004c FB64     		str	r3, [r7, #76]
 4106              	.LBB450:
 4107              	.LBB451:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4108              		.loc 2 1072 4 discriminator 1
 4109 004e FB6C     		ldr	r3, [r7, #76]
 4110              		.syntax unified
 4111              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4112 0050 53E8003F 		ldrex r3, [r3]
 4113              	@ 0 "" 2
 4114              		.thumb
 4115              		.syntax unified
 4116 0054 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4117              		.loc 2 1073 10 discriminator 1
 4118 0056 BB6C     		ldr	r3, [r7, #72]
 4119              	.LBE451:
 4120              	.LBE450:
 4121              		.loc 1 2072 3 discriminator 1
 4122 0058 23F00103 		bic	r3, r3, #1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 130


 4123 005c FB67     		str	r3, [r7, #124]
 4124 005e 7B68     		ldr	r3, [r7, #4]
 4125 0060 1B68     		ldr	r3, [r3]
 4126 0062 1433     		adds	r3, r3, #20
 4127 0064 FA6F     		ldr	r2, [r7, #124]
 4128 0066 BA65     		str	r2, [r7, #88]
 4129 0068 7B65     		str	r3, [r7, #84]
 4130              	.LBB452:
 4131              	.LBB453:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4132              		.loc 2 1123 4 discriminator 1
 4133 006a 796D     		ldr	r1, [r7, #84]
 4134 006c BA6D     		ldr	r2, [r7, #88]
 4135              		.syntax unified
 4136              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4137 006e 41E80023 		strex r3, r2, [r1]
 4138              	@ 0 "" 2
 4139              		.thumb
 4140              		.syntax unified
 4141 0072 3B65     		str	r3, [r7, #80]
 4142              		.loc 2 1124 10 discriminator 1
 4143 0074 3B6D     		ldr	r3, [r7, #80]
 4144              	.LBE453:
 4145              	.LBE452:
 4146              		.loc 1 2072 3 discriminator 1
 4147 0076 002B     		cmp	r3, #0
 4148 0078 E5D1     		bne	.L218
 4149              	.LBE449:
2073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4150              		.loc 1 2075 12
 4151 007a 7B68     		ldr	r3, [r7, #4]
 4152 007c 1B6B     		ldr	r3, [r3, #48]
 4153              		.loc 1 2075 6
 4154 007e 012B     		cmp	r3, #1
 4155 0080 19D1     		bne	.L219
 4156              	.L222:
 4157              	.LBB454:
2076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4158              		.loc 1 2077 5 discriminator 1
 4159 0082 7B68     		ldr	r3, [r7, #4]
 4160 0084 1B68     		ldr	r3, [r3]
 4161 0086 0C33     		adds	r3, r3, #12
 4162 0088 BB63     		str	r3, [r7, #56]
 4163              	.LBB455:
 4164              	.LBB456:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4165              		.loc 2 1072 4 discriminator 1
 4166 008a BB6B     		ldr	r3, [r7, #56]
 4167              		.syntax unified
 4168              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4169 008c 53E8003F 		ldrex r3, [r3]
 4170              	@ 0 "" 2
 4171              		.thumb
 4172              		.syntax unified
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 131


 4173 0090 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4174              		.loc 2 1073 10 discriminator 1
 4175 0092 7B6B     		ldr	r3, [r7, #52]
 4176              	.LBE456:
 4177              	.LBE455:
 4178              		.loc 1 2077 5 discriminator 1
 4179 0094 23F01003 		bic	r3, r3, #16
 4180 0098 BB67     		str	r3, [r7, #120]
 4181 009a 7B68     		ldr	r3, [r7, #4]
 4182 009c 1B68     		ldr	r3, [r3]
 4183 009e 0C33     		adds	r3, r3, #12
 4184 00a0 BA6F     		ldr	r2, [r7, #120]
 4185 00a2 7A64     		str	r2, [r7, #68]
 4186 00a4 3B64     		str	r3, [r7, #64]
 4187              	.LBB457:
 4188              	.LBB458:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4189              		.loc 2 1123 4 discriminator 1
 4190 00a6 396C     		ldr	r1, [r7, #64]
 4191 00a8 7A6C     		ldr	r2, [r7, #68]
 4192              		.syntax unified
 4193              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4194 00aa 41E80023 		strex r3, r2, [r1]
 4195              	@ 0 "" 2
 4196              		.thumb
 4197              		.syntax unified
 4198 00ae FB63     		str	r3, [r7, #60]
 4199              		.loc 2 1124 10 discriminator 1
 4200 00b0 FB6B     		ldr	r3, [r7, #60]
 4201              	.LBE458:
 4202              	.LBE457:
 4203              		.loc 1 2077 5 discriminator 1
 4204 00b2 002B     		cmp	r3, #0
 4205 00b4 E5D1     		bne	.L222
 4206              	.L219:
 4207              	.LBE454:
2078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If DMA Tx and/or DMA Rx Handles are associated to UART Handle, DMA Abort complete callbacks sh
2081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      before any call to DMA Abort functions */
2082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Tx Handle is valid */
2083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 4208              		.loc 1 2083 12
 4209 00b6 7B68     		ldr	r3, [r7, #4]
 4210 00b8 5B6B     		ldr	r3, [r3, #52]
 4211              		.loc 1 2083 6
 4212 00ba 002B     		cmp	r3, #0
 4213 00bc 0FD0     		beq	.L223
2084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Tx request if enabled.
2086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4214              		.loc 1 2087 9
 4215 00be 7B68     		ldr	r3, [r7, #4]
 4216 00c0 1B68     		ldr	r3, [r3]
 4217 00c2 5B69     		ldr	r3, [r3, #20]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 132


 4218 00c4 03F08003 		and	r3, r3, #128
 4219              		.loc 1 2087 8
 4220 00c8 802B     		cmp	r3, #128
 4221 00ca 04D1     		bne	.L224
2088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxAbortCallback;
 4222              		.loc 1 2089 12
 4223 00cc 7B68     		ldr	r3, [r7, #4]
 4224 00ce 5B6B     		ldr	r3, [r3, #52]
 4225              		.loc 1 2089 40
 4226 00d0 534A     		ldr	r2, .L239
 4227 00d2 1A65     		str	r2, [r3, #80]
 4228 00d4 03E0     		b	.L223
 4229              	.L224:
2090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = NULL;
 4230              		.loc 1 2093 12
 4231 00d6 7B68     		ldr	r3, [r7, #4]
 4232 00d8 5B6B     		ldr	r3, [r3, #52]
 4233              		.loc 1 2093 40
 4234 00da 0022     		movs	r2, #0
 4235 00dc 1A65     		str	r2, [r3, #80]
 4236              	.L223:
2094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Rx Handle is valid */
2097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 4237              		.loc 1 2097 12
 4238 00de 7B68     		ldr	r3, [r7, #4]
 4239 00e0 9B6B     		ldr	r3, [r3, #56]
 4240              		.loc 1 2097 6
 4241 00e2 002B     		cmp	r3, #0
 4242 00e4 0FD0     		beq	.L225
2098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Set DMA Abort Complete callback if UART DMA Rx request if enabled.
2100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        Otherwise, set it to NULL */
2101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4243              		.loc 1 2101 9
 4244 00e6 7B68     		ldr	r3, [r7, #4]
 4245 00e8 1B68     		ldr	r3, [r3]
 4246 00ea 5B69     		ldr	r3, [r3, #20]
 4247 00ec 03F04003 		and	r3, r3, #64
 4248              		.loc 1 2101 8
 4249 00f0 402B     		cmp	r3, #64
 4250 00f2 04D1     		bne	.L226
2102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxAbortCallback;
 4251              		.loc 1 2103 12
 4252 00f4 7B68     		ldr	r3, [r7, #4]
 4253 00f6 9B6B     		ldr	r3, [r3, #56]
 4254              		.loc 1 2103 40
 4255 00f8 4A4A     		ldr	r2, .L239+4
 4256 00fa 1A65     		str	r2, [r3, #80]
 4257 00fc 03E0     		b	.L225
 4258              	.L226:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 133


2104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = NULL;
 4259              		.loc 1 2107 12
 4260 00fe 7B68     		ldr	r3, [r7, #4]
 4261 0100 9B6B     		ldr	r3, [r3, #56]
 4262              		.loc 1 2107 40
 4263 0102 0022     		movs	r2, #0
 4264 0104 1A65     		str	r2, [r3, #80]
 4265              	.L225:
2108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4266              		.loc 1 2112 7
 4267 0106 7B68     		ldr	r3, [r7, #4]
 4268 0108 1B68     		ldr	r3, [r3]
 4269 010a 5B69     		ldr	r3, [r3, #20]
 4270 010c 03F08003 		and	r3, r3, #128
 4271              		.loc 1 2112 6
 4272 0110 802B     		cmp	r3, #128
 4273 0112 2DD1     		bne	.L227
 4274              	.L230:
 4275              	.LBB459:
2113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable DMA Tx at UART level */
2115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4276              		.loc 1 2115 5 discriminator 1
 4277 0114 7B68     		ldr	r3, [r7, #4]
 4278 0116 1B68     		ldr	r3, [r3]
 4279 0118 1433     		adds	r3, r3, #20
 4280 011a 7B62     		str	r3, [r7, #36]
 4281              	.LBB460:
 4282              	.LBB461:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4283              		.loc 2 1072 4 discriminator 1
 4284 011c 7B6A     		ldr	r3, [r7, #36]
 4285              		.syntax unified
 4286              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4287 011e 53E8003F 		ldrex r3, [r3]
 4288              	@ 0 "" 2
 4289              		.thumb
 4290              		.syntax unified
 4291 0122 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4292              		.loc 2 1073 10 discriminator 1
 4293 0124 3B6A     		ldr	r3, [r7, #32]
 4294              	.LBE461:
 4295              	.LBE460:
 4296              		.loc 1 2115 5 discriminator 1
 4297 0126 23F08003 		bic	r3, r3, #128
 4298 012a 7B67     		str	r3, [r7, #116]
 4299 012c 7B68     		ldr	r3, [r7, #4]
 4300 012e 1B68     		ldr	r3, [r3]
 4301 0130 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 134


 4302 0132 7A6F     		ldr	r2, [r7, #116]
 4303 0134 3A63     		str	r2, [r7, #48]
 4304 0136 FB62     		str	r3, [r7, #44]
 4305              	.LBB462:
 4306              	.LBB463:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4307              		.loc 2 1123 4 discriminator 1
 4308 0138 F96A     		ldr	r1, [r7, #44]
 4309 013a 3A6B     		ldr	r2, [r7, #48]
 4310              		.syntax unified
 4311              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4312 013c 41E80023 		strex r3, r2, [r1]
 4313              	@ 0 "" 2
 4314              		.thumb
 4315              		.syntax unified
 4316 0140 BB62     		str	r3, [r7, #40]
 4317              		.loc 2 1124 10 discriminator 1
 4318 0142 BB6A     		ldr	r3, [r7, #40]
 4319              	.LBE463:
 4320              	.LBE462:
 4321              		.loc 1 2115 5 discriminator 1
 4322 0144 002B     		cmp	r3, #0
 4323 0146 E5D1     		bne	.L230
 4324              	.LBE459:
2116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use non blocking DMA Abort API (callback) */
2118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4325              		.loc 1 2118 14
 4326 0148 7B68     		ldr	r3, [r7, #4]
 4327 014a 5B6B     		ldr	r3, [r3, #52]
 4328              		.loc 1 2118 8
 4329 014c 002B     		cmp	r3, #0
 4330 014e 0FD0     		beq	.L227
2119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Tx DMA Abort callback has already been initialised :
2121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4331              		.loc 1 2124 11
 4332 0150 7B68     		ldr	r3, [r7, #4]
 4333 0152 5B6B     		ldr	r3, [r3, #52]
 4334 0154 1846     		mov	r0, r3
 4335 0156 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4336 015a 0346     		mov	r3, r0
 4337              		.loc 1 2124 10
 4338 015c 002B     		cmp	r3, #0
 4339 015e 04D0     		beq	.L231
2125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback = NULL;
 4340              		.loc 1 2126 14
 4341 0160 7B68     		ldr	r3, [r7, #4]
 4342 0162 5B6B     		ldr	r3, [r3, #52]
 4343              		.loc 1 2126 42
 4344 0164 0022     		movs	r2, #0
 4345 0166 1A65     		str	r2, [r3, #80]
 4346 0168 02E0     		b	.L227
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 135


 4347              	.L231:
2127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4348              		.loc 1 2130 19
 4349 016a 0023     		movs	r3, #0
 4350 016c C7F88430 		str	r3, [r7, #132]
 4351              	.L227:
2131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4352              		.loc 1 2136 7
 4353 0170 7B68     		ldr	r3, [r7, #4]
 4354 0172 1B68     		ldr	r3, [r3]
 4355 0174 5B69     		ldr	r3, [r3, #20]
 4356 0176 03F04003 		and	r3, r3, #64
 4357              		.loc 1 2136 6
 4358 017a 402B     		cmp	r3, #64
 4359 017c 30D1     		bne	.L232
 4360              	.L235:
 4361              	.LBB464:
2137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4362              		.loc 1 2138 5 discriminator 1
 4363 017e 7B68     		ldr	r3, [r7, #4]
 4364 0180 1B68     		ldr	r3, [r3]
 4365 0182 1433     		adds	r3, r3, #20
 4366 0184 3B61     		str	r3, [r7, #16]
 4367              	.LBB465:
 4368              	.LBB466:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4369              		.loc 2 1072 4 discriminator 1
 4370 0186 3B69     		ldr	r3, [r7, #16]
 4371              		.syntax unified
 4372              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4373 0188 53E8003F 		ldrex r3, [r3]
 4374              	@ 0 "" 2
 4375              		.thumb
 4376              		.syntax unified
 4377 018c FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4378              		.loc 2 1073 10 discriminator 1
 4379 018e FB68     		ldr	r3, [r7, #12]
 4380              	.LBE466:
 4381              	.LBE465:
 4382              		.loc 1 2138 5 discriminator 1
 4383 0190 23F04003 		bic	r3, r3, #64
 4384 0194 3B67     		str	r3, [r7, #112]
 4385 0196 7B68     		ldr	r3, [r7, #4]
 4386 0198 1B68     		ldr	r3, [r3]
 4387 019a 1433     		adds	r3, r3, #20
 4388 019c 3A6F     		ldr	r2, [r7, #112]
 4389 019e FA61     		str	r2, [r7, #28]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 136


 4390 01a0 BB61     		str	r3, [r7, #24]
 4391              	.LBB467:
 4392              	.LBB468:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4393              		.loc 2 1123 4 discriminator 1
 4394 01a2 B969     		ldr	r1, [r7, #24]
 4395 01a4 FA69     		ldr	r2, [r7, #28]
 4396              		.syntax unified
 4397              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4398 01a6 41E80023 		strex r3, r2, [r1]
 4399              	@ 0 "" 2
 4400              		.thumb
 4401              		.syntax unified
 4402 01aa 7B61     		str	r3, [r7, #20]
 4403              		.loc 2 1124 10 discriminator 1
 4404 01ac 7B69     		ldr	r3, [r7, #20]
 4405              	.LBE468:
 4406              	.LBE467:
 4407              		.loc 1 2138 5 discriminator 1
 4408 01ae 002B     		cmp	r3, #0
 4409 01b0 E5D1     		bne	.L235
 4410              	.LBE464:
2139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use non blocking DMA Abort API (callback) */
2141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4411              		.loc 1 2141 14
 4412 01b2 7B68     		ldr	r3, [r7, #4]
 4413 01b4 9B6B     		ldr	r3, [r3, #56]
 4414              		.loc 1 2141 8
 4415 01b6 002B     		cmp	r3, #0
 4416 01b8 12D0     		beq	.L232
2142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART Rx DMA Abort callback has already been initialised :
2144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4417              		.loc 1 2147 11
 4418 01ba 7B68     		ldr	r3, [r7, #4]
 4419 01bc 9B6B     		ldr	r3, [r3, #56]
 4420 01be 1846     		mov	r0, r3
 4421 01c0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4422 01c4 0346     		mov	r3, r0
 4423              		.loc 1 2147 10
 4424 01c6 002B     		cmp	r3, #0
 4425 01c8 07D0     		beq	.L236
2148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback = NULL;
 4426              		.loc 1 2149 14
 4427 01ca 7B68     		ldr	r3, [r7, #4]
 4428 01cc 9B6B     		ldr	r3, [r3, #56]
 4429              		.loc 1 2149 42
 4430 01ce 0022     		movs	r2, #0
 4431 01d0 1A65     		str	r2, [r3, #80]
2150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x01U;
 4432              		.loc 1 2150 19
 4433 01d2 0123     		movs	r3, #1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 137


 4434 01d4 C7F88430 		str	r3, [r7, #132]
 4435 01d8 02E0     		b	.L232
 4436              	.L236:
2151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
2153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         AbortCplt = 0x00U;
 4437              		.loc 1 2154 19
 4438 01da 0023     		movs	r3, #0
 4439 01dc C7F88430 		str	r3, [r7, #132]
 4440              	.L232:
2155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* if no DMA abort complete callback execution is required => call user Abort Complete callback *
2160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (AbortCplt == 0x01U)
 4441              		.loc 1 2160 6
 4442 01e0 D7F88430 		ldr	r3, [r7, #132]
 4443 01e4 012B     		cmp	r3, #1
 4444 01e6 16D1     		bne	.L237
2161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx and Rx transfer counters */
2163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4445              		.loc 1 2163 24
 4446 01e8 7B68     		ldr	r3, [r7, #4]
 4447 01ea 0022     		movs	r2, #0
 4448 01ec DA84     		strh	r2, [r3, #38]	@ movhi
2164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4449              		.loc 1 2164 24
 4450 01ee 7B68     		ldr	r3, [r7, #4]
 4451 01f0 0022     		movs	r2, #0
 4452 01f2 DA85     		strh	r2, [r3, #46]	@ movhi
2165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset ErrorCode */
2167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ErrorCode = HAL_UART_ERROR_NONE;
 4453              		.loc 1 2167 22
 4454 01f4 7B68     		ldr	r3, [r7, #4]
 4455 01f6 0022     		movs	r2, #0
 4456 01f8 1A64     		str	r2, [r3, #64]
2168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState and huart->RxState to Ready */
2170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState  = HAL_UART_STATE_READY;
 4457              		.loc 1 2170 20
 4458 01fa 7B68     		ldr	r3, [r7, #4]
 4459 01fc 2022     		movs	r2, #32
 4460 01fe 83F83D20 		strb	r2, [r3, #61]
2171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4461              		.loc 1 2171 20
 4462 0202 7B68     		ldr	r3, [r7, #4]
 4463 0204 2022     		movs	r2, #32
 4464 0206 83F83E20 		strb	r2, [r3, #62]
2172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4465              		.loc 1 2172 26
 4466 020a 7B68     		ldr	r3, [r7, #4]
 4467 020c 0022     		movs	r2, #0
 4468 020e 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 138


2173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort complete callback */
2177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortCpltCallback(huart);
2178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort complete callback */
2180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortCpltCallback(huart);
 4469              		.loc 1 2180 5
 4470 0210 7868     		ldr	r0, [r7, #4]
 4471 0212 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 4472              	.L237:
2181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4473              		.loc 1 2184 10
 4474 0216 0023     		movs	r3, #0
2185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4475              		.loc 1 2185 1
 4476 0218 1846     		mov	r0, r3
 4477 021a 8837     		adds	r7, r7, #136
 4478              		.cfi_def_cfa_offset 8
 4479 021c BD46     		mov	sp, r7
 4480              		.cfi_def_cfa_register 13
 4481              		@ sp needed
 4482 021e 80BD     		pop	{r7, pc}
 4483              	.L240:
 4484              		.align	2
 4485              	.L239:
 4486 0220 00000000 		.word	UART_DMATxAbortCallback
 4487 0224 00000000 		.word	UART_DMARxAbortCallback
 4488              		.cfi_endproc
 4489              	.LFE152:
 4491              		.section	.text.HAL_UART_AbortTransmit_IT,"ax",%progbits
 4492              		.align	1
 4493              		.global	HAL_UART_AbortTransmit_IT
 4494              		.syntax unified
 4495              		.thumb
 4496              		.thumb_func
 4498              	HAL_UART_AbortTransmit_IT:
 4499              	.LFB153:
2186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Transmit transfer (Interrupt mode).
2189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Tx transfer started in Interrupt 
2191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Tx)
2193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
2196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 139


2201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortTransmit_IT(UART_HandleTypeDef *huart)
2202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4500              		.loc 1 2202 1
 4501              		.cfi_startproc
 4502              		@ args = 0, pretend = 0, frame = 56
 4503              		@ frame_needed = 1, uses_anonymous_args = 0
 4504 0000 80B5     		push	{r7, lr}
 4505              		.cfi_def_cfa_offset 8
 4506              		.cfi_offset 7, -8
 4507              		.cfi_offset 14, -4
 4508 0002 8EB0     		sub	sp, sp, #56
 4509              		.cfi_def_cfa_offset 64
 4510 0004 00AF     		add	r7, sp, #0
 4511              		.cfi_def_cfa_register 7
 4512 0006 7860     		str	r0, [r7, #4]
 4513              	.L244:
 4514              	.LBB469:
2203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
2204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 4515              		.loc 1 2204 3 discriminator 1
 4516 0008 7B68     		ldr	r3, [r7, #4]
 4517 000a 1B68     		ldr	r3, [r3]
 4518 000c 0C33     		adds	r3, r3, #12
 4519 000e 3B62     		str	r3, [r7, #32]
 4520              	.LBB470:
 4521              	.LBB471:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4522              		.loc 2 1072 4 discriminator 1
 4523 0010 3B6A     		ldr	r3, [r7, #32]
 4524              		.syntax unified
 4525              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4526 0012 53E8003F 		ldrex r3, [r3]
 4527              	@ 0 "" 2
 4528              		.thumb
 4529              		.syntax unified
 4530 0016 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4531              		.loc 2 1073 10 discriminator 1
 4532 0018 FB69     		ldr	r3, [r7, #28]
 4533              	.LBE471:
 4534              	.LBE470:
 4535              		.loc 1 2204 3 discriminator 1
 4536 001a 23F0C003 		bic	r3, r3, #192
 4537 001e 7B63     		str	r3, [r7, #52]
 4538 0020 7B68     		ldr	r3, [r7, #4]
 4539 0022 1B68     		ldr	r3, [r3]
 4540 0024 0C33     		adds	r3, r3, #12
 4541 0026 7A6B     		ldr	r2, [r7, #52]
 4542 0028 FA62     		str	r2, [r7, #44]
 4543 002a BB62     		str	r3, [r7, #40]
 4544              	.LBB472:
 4545              	.LBB473:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4546              		.loc 2 1123 4 discriminator 1
 4547 002c B96A     		ldr	r1, [r7, #40]
 4548 002e FA6A     		ldr	r2, [r7, #44]
 4549              		.syntax unified
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 140


 4550              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4551 0030 41E80023 		strex r3, r2, [r1]
 4552              	@ 0 "" 2
 4553              		.thumb
 4554              		.syntax unified
 4555 0034 7B62     		str	r3, [r7, #36]
 4556              		.loc 2 1124 10 discriminator 1
 4557 0036 7B6A     		ldr	r3, [r7, #36]
 4558              	.LBE473:
 4559              	.LBE472:
 4560              		.loc 1 2204 3 discriminator 1
 4561 0038 002B     		cmp	r3, #0
 4562 003a E5D1     		bne	.L244
 4563              	.LBE469:
2205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Tx request if enabled */
2207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT))
 4564              		.loc 1 2207 7
 4565 003c 7B68     		ldr	r3, [r7, #4]
 4566 003e 1B68     		ldr	r3, [r3]
 4567 0040 5B69     		ldr	r3, [r3, #20]
 4568 0042 03F08003 		and	r3, r3, #128
 4569              		.loc 1 2207 6
 4570 0046 802B     		cmp	r3, #128
 4571 0048 3CD1     		bne	.L245
 4572              	.L248:
 4573              	.LBB474:
2208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 4574              		.loc 1 2209 5 discriminator 1
 4575 004a 7B68     		ldr	r3, [r7, #4]
 4576 004c 1B68     		ldr	r3, [r3]
 4577 004e 1433     		adds	r3, r3, #20
 4578 0050 FB60     		str	r3, [r7, #12]
 4579              	.LBB475:
 4580              	.LBB476:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4581              		.loc 2 1072 4 discriminator 1
 4582 0052 FB68     		ldr	r3, [r7, #12]
 4583              		.syntax unified
 4584              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4585 0054 53E8003F 		ldrex r3, [r3]
 4586              	@ 0 "" 2
 4587              		.thumb
 4588              		.syntax unified
 4589 0058 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4590              		.loc 2 1073 10 discriminator 1
 4591 005a BB68     		ldr	r3, [r7, #8]
 4592              	.LBE476:
 4593              	.LBE475:
 4594              		.loc 1 2209 5 discriminator 1
 4595 005c 23F08003 		bic	r3, r3, #128
 4596 0060 3B63     		str	r3, [r7, #48]
 4597 0062 7B68     		ldr	r3, [r7, #4]
 4598 0064 1B68     		ldr	r3, [r3]
 4599 0066 1433     		adds	r3, r3, #20
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 141


 4600 0068 3A6B     		ldr	r2, [r7, #48]
 4601 006a BA61     		str	r2, [r7, #24]
 4602 006c 7B61     		str	r3, [r7, #20]
 4603              	.LBB477:
 4604              	.LBB478:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4605              		.loc 2 1123 4 discriminator 1
 4606 006e 7969     		ldr	r1, [r7, #20]
 4607 0070 BA69     		ldr	r2, [r7, #24]
 4608              		.syntax unified
 4609              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4610 0072 41E80023 		strex r3, r2, [r1]
 4611              	@ 0 "" 2
 4612              		.thumb
 4613              		.syntax unified
 4614 0076 3B61     		str	r3, [r7, #16]
 4615              		.loc 2 1124 10 discriminator 1
 4616 0078 3B69     		ldr	r3, [r7, #16]
 4617              	.LBE478:
 4618              	.LBE477:
 4619              		.loc 1 2209 5 discriminator 1
 4620 007a 002B     		cmp	r3, #0
 4621 007c E5D1     		bne	.L248
 4622              	.LBE474:
2210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Tx stream : use blocking DMA Abort API (no callback) */
2212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx != NULL)
 4623              		.loc 1 2212 14
 4624 007e 7B68     		ldr	r3, [r7, #4]
 4625 0080 5B6B     		ldr	r3, [r3, #52]
 4626              		.loc 1 2212 8
 4627 0082 002B     		cmp	r3, #0
 4628 0084 13D0     		beq	.L249
2213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmatx->XferAbortCallback = UART_DMATxOnlyAbortCallback;
 4629              		.loc 1 2216 12
 4630 0086 7B68     		ldr	r3, [r7, #4]
 4631 0088 5B6B     		ldr	r3, [r3, #52]
 4632              		.loc 1 2216 40
 4633 008a 164A     		ldr	r2, .L252
 4634 008c 1A65     		str	r2, [r3, #80]
2217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA TX */
2219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmatx) != HAL_OK)
 4635              		.loc 1 2219 11
 4636 008e 7B68     		ldr	r3, [r7, #4]
 4637 0090 5B6B     		ldr	r3, [r3, #52]
 4638 0092 1846     		mov	r0, r3
 4639 0094 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4640 0098 0346     		mov	r3, r0
 4641              		.loc 1 2219 10
 4642 009a 002B     		cmp	r3, #0
 4643 009c 1CD0     		beq	.L250
2220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmatx->XferAbortCallback function in case of error */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 142


2222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmatx->XferAbortCallback(huart->hdmatx);
 4644              		.loc 1 2222 14
 4645 009e 7B68     		ldr	r3, [r7, #4]
 4646 00a0 5B6B     		ldr	r3, [r3, #52]
 4647              		.loc 1 2222 22
 4648 00a2 1B6D     		ldr	r3, [r3, #80]
 4649              		.loc 1 2222 47
 4650 00a4 7A68     		ldr	r2, [r7, #4]
 4651 00a6 526B     		ldr	r2, [r2, #52]
 4652              		.loc 1 2222 9
 4653 00a8 1046     		mov	r0, r2
 4654 00aa 9847     		blx	r3
 4655              	.LVL0:
 4656 00ac 14E0     		b	.L250
 4657              	.L249:
2223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Tx transfer counter */
2228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->TxXferCount = 0x00U;
 4658              		.loc 1 2228 26
 4659 00ae 7B68     		ldr	r3, [r7, #4]
 4660 00b0 0022     		movs	r2, #0
 4661 00b2 DA84     		strh	r2, [r3, #38]	@ movhi
2229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->gState to Ready */
2231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->gState = HAL_UART_STATE_READY;
 4662              		.loc 1 2231 21
 4663 00b4 7B68     		ldr	r3, [r7, #4]
 4664 00b6 2022     		movs	r2, #32
 4665 00b8 83F83D20 		strb	r2, [r3, #61]
2232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Transmit Complete Callback */
2236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortTransmitCpltCallback(huart);
2237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Transmit Complete Callback */
2239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortTransmitCpltCallback(huart);
 4666              		.loc 1 2239 7
 4667 00bc 7868     		ldr	r0, [r7, #4]
 4668 00be FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4669 00c2 09E0     		b	.L250
 4670              	.L245:
2240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Tx transfer counter */
2246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 4671              		.loc 1 2246 24
 4672 00c4 7B68     		ldr	r3, [r7, #4]
 4673 00c6 0022     		movs	r2, #0
 4674 00c8 DA84     		strh	r2, [r3, #38]	@ movhi
2247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 143


2248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->gState to Ready */
2249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->gState = HAL_UART_STATE_READY;
 4675              		.loc 1 2249 19
 4676 00ca 7B68     		ldr	r3, [r7, #4]
 4677 00cc 2022     		movs	r2, #32
 4678 00ce 83F83D20 		strb	r2, [r3, #61]
2250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Transmit Complete Callback */
2254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortTransmitCpltCallback(huart);
2255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Transmit Complete Callback */
2257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortTransmitCpltCallback(huart);
 4679              		.loc 1 2257 5
 4680 00d2 7868     		ldr	r0, [r7, #4]
 4681 00d4 FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
 4682              	.L250:
2258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 4683              		.loc 1 2261 10
 4684 00d8 0023     		movs	r3, #0
2262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 4685              		.loc 1 2262 1
 4686 00da 1846     		mov	r0, r3
 4687 00dc 3837     		adds	r7, r7, #56
 4688              		.cfi_def_cfa_offset 8
 4689 00de BD46     		mov	sp, r7
 4690              		.cfi_def_cfa_register 13
 4691              		@ sp needed
 4692 00e0 80BD     		pop	{r7, pc}
 4693              	.L253:
 4694 00e2 00BF     		.align	2
 4695              	.L252:
 4696 00e4 00000000 		.word	UART_DMATxOnlyAbortCallback
 4697              		.cfi_endproc
 4698              	.LFE153:
 4700              		.section	.text.HAL_UART_AbortReceive_IT,"ax",%progbits
 4701              		.align	1
 4702              		.global	HAL_UART_AbortReceive_IT
 4703              		.syntax unified
 4704              		.thumb
 4705              		.thumb_func
 4707              	HAL_UART_AbortReceive_IT:
 4708              	.LFB154:
2263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Abort ongoing Receive transfer (Interrupt mode).
2266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure could be used for aborting any ongoing Rx transfer started in Interrupt 
2268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         This procedure performs following operations :
2269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable UART Interrupts (Rx)
2270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Disable the DMA transfer in the peripheral register (if enabled)
2271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Abort DMA transfer by calling HAL_DMA_Abort_IT (in case of transfer in DMA mode)
2272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - Set handle State to READY
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 144


2273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *           - At abort completion, call user abort complete callback
2274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This procedure is executed in Interrupt mode, meaning that abort procedure could be
2275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         considered as completed only when user abort complete callback is executed (not when ex
2276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_UART_AbortReceive_IT(UART_HandleTypeDef *huart)
2279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 4709              		.loc 1 2279 1
 4710              		.cfi_startproc
 4711              		@ args = 0, pretend = 0, frame = 104
 4712              		@ frame_needed = 1, uses_anonymous_args = 0
 4713 0000 80B5     		push	{r7, lr}
 4714              		.cfi_def_cfa_offset 8
 4715              		.cfi_offset 7, -8
 4716              		.cfi_offset 14, -4
 4717 0002 9AB0     		sub	sp, sp, #104
 4718              		.cfi_def_cfa_offset 112
 4719 0004 00AF     		add	r7, sp, #0
 4720              		.cfi_def_cfa_register 7
 4721 0006 7860     		str	r0, [r7, #4]
 4722              	.L257:
 4723              	.LBB479:
2280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
2281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 4724              		.loc 1 2281 3 discriminator 1
 4725 0008 7B68     		ldr	r3, [r7, #4]
 4726 000a 1B68     		ldr	r3, [r3]
 4727 000c 0C33     		adds	r3, r3, #12
 4728 000e BB64     		str	r3, [r7, #72]
 4729              	.LBB480:
 4730              	.LBB481:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4731              		.loc 2 1072 4 discriminator 1
 4732 0010 BB6C     		ldr	r3, [r7, #72]
 4733              		.syntax unified
 4734              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4735 0012 53E8003F 		ldrex r3, [r3]
 4736              	@ 0 "" 2
 4737              		.thumb
 4738              		.syntax unified
 4739 0016 7B64     		str	r3, [r7, #68]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4740              		.loc 2 1073 10 discriminator 1
 4741 0018 7B6C     		ldr	r3, [r7, #68]
 4742              	.LBE481:
 4743              	.LBE480:
 4744              		.loc 1 2281 3 discriminator 1
 4745 001a 23F49073 		bic	r3, r3, #288
 4746 001e 7B66     		str	r3, [r7, #100]
 4747 0020 7B68     		ldr	r3, [r7, #4]
 4748 0022 1B68     		ldr	r3, [r3]
 4749 0024 0C33     		adds	r3, r3, #12
 4750 0026 7A6E     		ldr	r2, [r7, #100]
 4751 0028 7A65     		str	r2, [r7, #84]
 4752 002a 3B65     		str	r3, [r7, #80]
 4753              	.LBB482:
 4754              	.LBB483:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 145


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4755              		.loc 2 1123 4 discriminator 1
 4756 002c 396D     		ldr	r1, [r7, #80]
 4757 002e 7A6D     		ldr	r2, [r7, #84]
 4758              		.syntax unified
 4759              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4760 0030 41E80023 		strex r3, r2, [r1]
 4761              	@ 0 "" 2
 4762              		.thumb
 4763              		.syntax unified
 4764 0034 FB64     		str	r3, [r7, #76]
 4765              		.loc 2 1124 10 discriminator 1
 4766 0036 FB6C     		ldr	r3, [r7, #76]
 4767              	.LBE483:
 4768              	.LBE482:
 4769              		.loc 1 2281 3 discriminator 1
 4770 0038 002B     		cmp	r3, #0
 4771 003a E5D1     		bne	.L257
 4772              	.L260:
 4773              	.LBE479:
 4774              	.LBB484:
2282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 4775              		.loc 1 2282 3 discriminator 1
 4776 003c 7B68     		ldr	r3, [r7, #4]
 4777 003e 1B68     		ldr	r3, [r3]
 4778 0040 1433     		adds	r3, r3, #20
 4779 0042 7B63     		str	r3, [r7, #52]
 4780              	.LBB485:
 4781              	.LBB486:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4782              		.loc 2 1072 4 discriminator 1
 4783 0044 7B6B     		ldr	r3, [r7, #52]
 4784              		.syntax unified
 4785              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4786 0046 53E8003F 		ldrex r3, [r3]
 4787              	@ 0 "" 2
 4788              		.thumb
 4789              		.syntax unified
 4790 004a 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4791              		.loc 2 1073 10 discriminator 1
 4792 004c 3B6B     		ldr	r3, [r7, #48]
 4793              	.LBE486:
 4794              	.LBE485:
 4795              		.loc 1 2282 3 discriminator 1
 4796 004e 23F00103 		bic	r3, r3, #1
 4797 0052 3B66     		str	r3, [r7, #96]
 4798 0054 7B68     		ldr	r3, [r7, #4]
 4799 0056 1B68     		ldr	r3, [r3]
 4800 0058 1433     		adds	r3, r3, #20
 4801 005a 3A6E     		ldr	r2, [r7, #96]
 4802 005c 3A64     		str	r2, [r7, #64]
 4803 005e FB63     		str	r3, [r7, #60]
 4804              	.LBB487:
 4805              	.LBB488:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4806              		.loc 2 1123 4 discriminator 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 146


 4807 0060 F96B     		ldr	r1, [r7, #60]
 4808 0062 3A6C     		ldr	r2, [r7, #64]
 4809              		.syntax unified
 4810              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4811 0064 41E80023 		strex r3, r2, [r1]
 4812              	@ 0 "" 2
 4813              		.thumb
 4814              		.syntax unified
 4815 0068 BB63     		str	r3, [r7, #56]
 4816              		.loc 2 1124 10 discriminator 1
 4817 006a BB6B     		ldr	r3, [r7, #56]
 4818              	.LBE488:
 4819              	.LBE487:
 4820              		.loc 1 2282 3 discriminator 1
 4821 006c 002B     		cmp	r3, #0
 4822 006e E5D1     		bne	.L260
 4823              	.LBE484:
2283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If Reception till IDLE event was ongoing, disable IDLEIE interrupt */
2285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 4824              		.loc 1 2285 12
 4825 0070 7B68     		ldr	r3, [r7, #4]
 4826 0072 1B6B     		ldr	r3, [r3, #48]
 4827              		.loc 1 2285 6
 4828 0074 012B     		cmp	r3, #1
 4829 0076 19D1     		bne	.L261
 4830              	.L264:
 4831              	.LBB489:
2286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_IDLEIE));
 4832              		.loc 1 2287 5 discriminator 1
 4833 0078 7B68     		ldr	r3, [r7, #4]
 4834 007a 1B68     		ldr	r3, [r3]
 4835 007c 0C33     		adds	r3, r3, #12
 4836 007e 3B62     		str	r3, [r7, #32]
 4837              	.LBB490:
 4838              	.LBB491:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4839              		.loc 2 1072 4 discriminator 1
 4840 0080 3B6A     		ldr	r3, [r7, #32]
 4841              		.syntax unified
 4842              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4843 0082 53E8003F 		ldrex r3, [r3]
 4844              	@ 0 "" 2
 4845              		.thumb
 4846              		.syntax unified
 4847 0086 FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4848              		.loc 2 1073 10 discriminator 1
 4849 0088 FB69     		ldr	r3, [r7, #28]
 4850              	.LBE491:
 4851              	.LBE490:
 4852              		.loc 1 2287 5 discriminator 1
 4853 008a 23F01003 		bic	r3, r3, #16
 4854 008e FB65     		str	r3, [r7, #92]
 4855 0090 7B68     		ldr	r3, [r7, #4]
 4856 0092 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 147


 4857 0094 0C33     		adds	r3, r3, #12
 4858 0096 FA6D     		ldr	r2, [r7, #92]
 4859 0098 FA62     		str	r2, [r7, #44]
 4860 009a BB62     		str	r3, [r7, #40]
 4861              	.LBB492:
 4862              	.LBB493:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4863              		.loc 2 1123 4 discriminator 1
 4864 009c B96A     		ldr	r1, [r7, #40]
 4865 009e FA6A     		ldr	r2, [r7, #44]
 4866              		.syntax unified
 4867              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4868 00a0 41E80023 		strex r3, r2, [r1]
 4869              	@ 0 "" 2
 4870              		.thumb
 4871              		.syntax unified
 4872 00a4 7B62     		str	r3, [r7, #36]
 4873              		.loc 2 1124 10 discriminator 1
 4874 00a6 7B6A     		ldr	r3, [r7, #36]
 4875              	.LBE493:
 4876              	.LBE492:
 4877              		.loc 1 2287 5 discriminator 1
 4878 00a8 002B     		cmp	r3, #0
 4879 00aa E5D1     		bne	.L264
 4880              	.L261:
 4881              	.LBE489:
2288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART DMA Rx request if enabled */
2291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 4882              		.loc 1 2291 7
 4883 00ac 7B68     		ldr	r3, [r7, #4]
 4884 00ae 1B68     		ldr	r3, [r3]
 4885 00b0 5B69     		ldr	r3, [r3, #20]
 4886 00b2 03F04003 		and	r3, r3, #64
 4887              		.loc 1 2291 6
 4888 00b6 402B     		cmp	r3, #64
 4889 00b8 3FD1     		bne	.L265
 4890              	.L268:
 4891              	.LBB494:
2292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 4892              		.loc 1 2293 5 discriminator 1
 4893 00ba 7B68     		ldr	r3, [r7, #4]
 4894 00bc 1B68     		ldr	r3, [r3]
 4895 00be 1433     		adds	r3, r3, #20
 4896 00c0 FB60     		str	r3, [r7, #12]
 4897              	.LBB495:
 4898              	.LBB496:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4899              		.loc 2 1072 4 discriminator 1
 4900 00c2 FB68     		ldr	r3, [r7, #12]
 4901              		.syntax unified
 4902              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4903 00c4 53E8003F 		ldrex r3, [r3]
 4904              	@ 0 "" 2
 4905              		.thumb
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 148


 4906              		.syntax unified
 4907 00c8 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 4908              		.loc 2 1073 10 discriminator 1
 4909 00ca BB68     		ldr	r3, [r7, #8]
 4910              	.LBE496:
 4911              	.LBE495:
 4912              		.loc 1 2293 5 discriminator 1
 4913 00cc 23F04003 		bic	r3, r3, #64
 4914 00d0 BB65     		str	r3, [r7, #88]
 4915 00d2 7B68     		ldr	r3, [r7, #4]
 4916 00d4 1B68     		ldr	r3, [r3]
 4917 00d6 1433     		adds	r3, r3, #20
 4918 00d8 BA6D     		ldr	r2, [r7, #88]
 4919 00da BA61     		str	r2, [r7, #24]
 4920 00dc 7B61     		str	r3, [r7, #20]
 4921              	.LBB497:
 4922              	.LBB498:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 4923              		.loc 2 1123 4 discriminator 1
 4924 00de 7969     		ldr	r1, [r7, #20]
 4925 00e0 BA69     		ldr	r2, [r7, #24]
 4926              		.syntax unified
 4927              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 4928 00e2 41E80023 		strex r3, r2, [r1]
 4929              	@ 0 "" 2
 4930              		.thumb
 4931              		.syntax unified
 4932 00e6 3B61     		str	r3, [r7, #16]
 4933              		.loc 2 1124 10 discriminator 1
 4934 00e8 3B69     		ldr	r3, [r7, #16]
 4935              	.LBE498:
 4936              	.LBE497:
 4937              		.loc 1 2293 5 discriminator 1
 4938 00ea 002B     		cmp	r3, #0
 4939 00ec E5D1     		bne	.L268
 4940              	.LBE494:
2294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Abort the UART DMA Rx stream : use blocking DMA Abort API (no callback) */
2296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx != NULL)
 4941              		.loc 1 2296 14
 4942 00ee 7B68     		ldr	r3, [r7, #4]
 4943 00f0 9B6B     		ldr	r3, [r3, #56]
 4944              		.loc 1 2296 8
 4945 00f2 002B     		cmp	r3, #0
 4946 00f4 13D0     		beq	.L269
2297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Set the UART DMA Abort callback :
2299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          will lead to call HAL_UART_AbortCpltCallback() at end of DMA abort procedure */
2300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->hdmarx->XferAbortCallback = UART_DMARxOnlyAbortCallback;
 4947              		.loc 1 2300 12
 4948 00f6 7B68     		ldr	r3, [r7, #4]
 4949 00f8 9B6B     		ldr	r3, [r3, #56]
 4950              		.loc 1 2300 40
 4951 00fa 194A     		ldr	r2, .L272
 4952 00fc 1A65     		str	r2, [r3, #80]
2301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 149


2302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Abort DMA RX */
2303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 4953              		.loc 1 2303 11
 4954 00fe 7B68     		ldr	r3, [r7, #4]
 4955 0100 9B6B     		ldr	r3, [r3, #56]
 4956 0102 1846     		mov	r0, r3
 4957 0104 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 4958 0108 0346     		mov	r3, r0
 4959              		.loc 1 2303 10
 4960 010a 002B     		cmp	r3, #0
 4961 010c 22D0     		beq	.L270
2304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Call Directly huart->hdmarx->XferAbortCallback function in case of error */
2306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->hdmarx->XferAbortCallback(huart->hdmarx);
 4962              		.loc 1 2306 14
 4963 010e 7B68     		ldr	r3, [r7, #4]
 4964 0110 9B6B     		ldr	r3, [r3, #56]
 4965              		.loc 1 2306 22
 4966 0112 1B6D     		ldr	r3, [r3, #80]
 4967              		.loc 1 2306 47
 4968 0114 7A68     		ldr	r2, [r7, #4]
 4969 0116 926B     		ldr	r2, [r2, #56]
 4970              		.loc 1 2306 9
 4971 0118 1046     		mov	r0, r2
 4972 011a 9847     		blx	r3
 4973              	.LVL1:
 4974 011c 1AE0     		b	.L270
 4975              	.L269:
2307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Reset Rx transfer counter */
2312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxXferCount = 0x00U;
 4976              		.loc 1 2312 26
 4977 011e 7B68     		ldr	r3, [r7, #4]
 4978 0120 0022     		movs	r2, #0
 4979 0122 DA85     		strh	r2, [r3, #46]	@ movhi
2313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Restore huart->RxState to Ready */
2315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 4980              		.loc 1 2315 22
 4981 0124 7B68     		ldr	r3, [r7, #4]
 4982 0126 2022     		movs	r2, #32
 4983 0128 83F83E20 		strb	r2, [r3, #62]
2316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 4984              		.loc 1 2316 28
 4985 012c 7B68     		ldr	r3, [r7, #4]
 4986 012e 0022     		movs	r2, #0
 4987 0130 1A63     		str	r2, [r3, #48]
2317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* As no DMA to be aborted, call directly user Abort complete callback */
2319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call registered Abort Receive Complete Callback */
2321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->AbortReceiveCpltCallback(huart);
2322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Call legacy weak Abort Receive Complete Callback */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 150


2324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       HAL_UART_AbortReceiveCpltCallback(huart);
 4988              		.loc 1 2324 7
 4989 0132 7868     		ldr	r0, [r7, #4]
 4990 0134 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 4991 0138 0CE0     		b	.L270
 4992              	.L265:
2325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
2329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Reset Rx transfer counter */
2331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 4993              		.loc 1 2331 24
 4994 013a 7B68     		ldr	r3, [r7, #4]
 4995 013c 0022     		movs	r2, #0
 4996 013e DA85     		strh	r2, [r3, #46]	@ movhi
2332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Restore huart->RxState to Ready */
2334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 4997              		.loc 1 2334 20
 4998 0140 7B68     		ldr	r3, [r7, #4]
 4999 0142 2022     		movs	r2, #32
 5000 0144 83F83E20 		strb	r2, [r3, #62]
2335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5001              		.loc 1 2335 26
 5002 0148 7B68     		ldr	r3, [r7, #4]
 5003 014a 0022     		movs	r2, #0
 5004 014c 1A63     		str	r2, [r3, #48]
2336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* As no DMA to be aborted, call directly user Abort complete callback */
2338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call registered Abort Receive Complete Callback */
2340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->AbortReceiveCpltCallback(huart);
2341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call legacy weak Abort Receive Complete Callback */
2343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_AbortReceiveCpltCallback(huart);
 5005              		.loc 1 2343 5
 5006 014e 7868     		ldr	r0, [r7, #4]
 5007 0150 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
 5008              	.L270:
2344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 5009              		.loc 1 2347 10
 5010 0154 0023     		movs	r3, #0
2348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5011              		.loc 1 2348 1
 5012 0156 1846     		mov	r0, r3
 5013 0158 6837     		adds	r7, r7, #104
 5014              		.cfi_def_cfa_offset 8
 5015 015a BD46     		mov	sp, r7
 5016              		.cfi_def_cfa_register 13
 5017              		@ sp needed
 5018 015c 80BD     		pop	{r7, pc}
 5019              	.L273:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 151


 5020 015e 00BF     		.align	2
 5021              	.L272:
 5022 0160 00000000 		.word	UART_DMARxOnlyAbortCallback
 5023              		.cfi_endproc
 5024              	.LFE154:
 5026              		.section	.text.HAL_UART_IRQHandler,"ax",%progbits
 5027              		.align	1
 5028              		.global	HAL_UART_IRQHandler
 5029              		.syntax unified
 5030              		.thumb
 5031              		.thumb_func
 5033              	HAL_UART_IRQHandler:
 5034              	.LFB155:
2349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART interrupt request.
2352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void HAL_UART_IRQHandler(UART_HandleTypeDef *huart)
2357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5035              		.loc 1 2357 1
 5036              		.cfi_startproc
 5037              		@ args = 0, pretend = 0, frame = 232
 5038              		@ frame_needed = 1, uses_anonymous_args = 0
 5039 0000 80B5     		push	{r7, lr}
 5040              		.cfi_def_cfa_offset 8
 5041              		.cfi_offset 7, -8
 5042              		.cfi_offset 14, -4
 5043 0002 BAB0     		sub	sp, sp, #232
 5044              		.cfi_def_cfa_offset 240
 5045 0004 00AF     		add	r7, sp, #0
 5046              		.cfi_def_cfa_register 7
 5047 0006 7860     		str	r0, [r7, #4]
2358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t isrflags   = READ_REG(huart->Instance->SR);
 5048              		.loc 1 2358 25
 5049 0008 7B68     		ldr	r3, [r7, #4]
 5050 000a 1B68     		ldr	r3, [r3]
 5051              		.loc 1 2358 12
 5052 000c 1B68     		ldr	r3, [r3]
 5053 000e C7F8E430 		str	r3, [r7, #228]
2359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr1its     = READ_REG(huart->Instance->CR1);
 5054              		.loc 1 2359 25
 5055 0012 7B68     		ldr	r3, [r7, #4]
 5056 0014 1B68     		ldr	r3, [r3]
 5057              		.loc 1 2359 12
 5058 0016 DB68     		ldr	r3, [r3, #12]
 5059 0018 C7F8E030 		str	r3, [r7, #224]
2360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t cr3its     = READ_REG(huart->Instance->CR3);
 5060              		.loc 1 2360 25
 5061 001c 7B68     		ldr	r3, [r7, #4]
 5062 001e 1B68     		ldr	r3, [r3]
 5063              		.loc 1 2360 12
 5064 0020 5B69     		ldr	r3, [r3, #20]
 5065 0022 C7F8DC30 		str	r3, [r7, #220]
2361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t errorflags = 0x00U;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 152


 5066              		.loc 1 2361 12
 5067 0026 0023     		movs	r3, #0
 5068 0028 C7F8D830 		str	r3, [r7, #216]
2362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 5069              		.loc 1 2362 12
 5070 002c 0023     		movs	r3, #0
 5071 002e C7F8D430 		str	r3, [r7, #212]
2363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If no error occurs */
2365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   errorflags = (isrflags & (uint32_t)(USART_SR_PE | USART_SR_FE | USART_SR_ORE | USART_SR_NE));
 5072              		.loc 1 2365 14
 5073 0032 D7F8E430 		ldr	r3, [r7, #228]
 5074 0036 03F00F03 		and	r3, r3, #15
 5075 003a C7F8D830 		str	r3, [r7, #216]
2366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (errorflags == RESET)
 5076              		.loc 1 2366 6
 5077 003e D7F8D830 		ldr	r3, [r7, #216]
 5078 0042 002B     		cmp	r3, #0
 5079 0044 0FD1     		bne	.L275
2367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART in mode Receiver -------------------------------------------------*/
2369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5080              		.loc 1 2369 20
 5081 0046 D7F8E430 		ldr	r3, [r7, #228]
 5082 004a 03F02003 		and	r3, r3, #32
 5083              		.loc 1 2369 8
 5084 004e 002B     		cmp	r3, #0
 5085 0050 09D0     		beq	.L275
 5086              		.loc 1 2369 59 discriminator 1
 5087 0052 D7F8E030 		ldr	r3, [r7, #224]
 5088 0056 03F02003 		and	r3, r3, #32
 5089              		.loc 1 2369 47 discriminator 1
 5090 005a 002B     		cmp	r3, #0
 5091 005c 03D0     		beq	.L275
2370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       UART_Receive_IT(huart);
 5092              		.loc 1 2371 7
 5093 005e 7868     		ldr	r0, [r7, #4]
 5094 0060 FFF7FEFF 		bl	UART_Receive_IT
2372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5095              		.loc 1 2372 7
 5096 0064 56E2     		b	.L274
 5097              	.L275:
2373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* If some errors occur */
2377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((errorflags != RESET) && (((cr3its & USART_CR3_EIE) != RESET)
 5098              		.loc 1 2377 6
 5099 0066 D7F8D830 		ldr	r3, [r7, #216]
 5100 006a 002B     		cmp	r3, #0
 5101 006c 00F0DE80 		beq	.L277
 5102              		.loc 1 2377 42 discriminator 1
 5103 0070 D7F8DC30 		ldr	r3, [r7, #220]
 5104 0074 03F00103 		and	r3, r3, #1
 5105              		.loc 1 2377 29 discriminator 1
 5106 0078 002B     		cmp	r3, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 153


 5107 007a 06D1     		bne	.L278
2378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                 || ((cr1its & (USART_CR1_RXNEIE | USART_CR1_PEIE)) != RESET)))
 5108              		.loc 1 2378 45
 5109 007c D7F8E030 		ldr	r3, [r7, #224]
 5110 0080 03F49073 		and	r3, r3, #288
 5111              		.loc 1 2378 33
 5112 0084 002B     		cmp	r3, #0
 5113 0086 00F0D180 		beq	.L277
 5114              	.L278:
2379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART parity error interrupt occurred ----------------------------------*/
2381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_PE) != RESET) && ((cr1its & USART_CR1_PEIE) != RESET))
 5115              		.loc 1 2381 20
 5116 008a D7F8E430 		ldr	r3, [r7, #228]
 5117 008e 03F00103 		and	r3, r3, #1
 5118              		.loc 1 2381 8
 5119 0092 002B     		cmp	r3, #0
 5120 0094 0BD0     		beq	.L279
 5121              		.loc 1 2381 57 discriminator 1
 5122 0096 D7F8E030 		ldr	r3, [r7, #224]
 5123 009a 03F48073 		and	r3, r3, #256
 5124              		.loc 1 2381 45 discriminator 1
 5125 009e 002B     		cmp	r3, #0
 5126 00a0 05D0     		beq	.L279
2382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_PE;
 5127              		.loc 1 2383 24
 5128 00a2 7B68     		ldr	r3, [r7, #4]
 5129 00a4 1B6C     		ldr	r3, [r3, #64]
 5130 00a6 43F00102 		orr	r2, r3, #1
 5131 00aa 7B68     		ldr	r3, [r7, #4]
 5132 00ac 1A64     		str	r2, [r3, #64]
 5133              	.L279:
2384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART noise error interrupt occurred -----------------------------------*/
2387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_NE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5134              		.loc 1 2387 20
 5135 00ae D7F8E430 		ldr	r3, [r7, #228]
 5136 00b2 03F00403 		and	r3, r3, #4
 5137              		.loc 1 2387 8
 5138 00b6 002B     		cmp	r3, #0
 5139 00b8 0BD0     		beq	.L280
 5140              		.loc 1 2387 57 discriminator 1
 5141 00ba D7F8DC30 		ldr	r3, [r7, #220]
 5142 00be 03F00103 		and	r3, r3, #1
 5143              		.loc 1 2387 45 discriminator 1
 5144 00c2 002B     		cmp	r3, #0
 5145 00c4 05D0     		beq	.L280
2388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_NE;
 5146              		.loc 1 2389 24
 5147 00c6 7B68     		ldr	r3, [r7, #4]
 5148 00c8 1B6C     		ldr	r3, [r3, #64]
 5149 00ca 43F00202 		orr	r2, r3, #2
 5150 00ce 7B68     		ldr	r3, [r7, #4]
 5151 00d0 1A64     		str	r2, [r3, #64]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 154


 5152              	.L280:
2390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART frame error interrupt occurred -----------------------------------*/
2393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_FE) != RESET) && ((cr3its & USART_CR3_EIE) != RESET))
 5153              		.loc 1 2393 20
 5154 00d2 D7F8E430 		ldr	r3, [r7, #228]
 5155 00d6 03F00203 		and	r3, r3, #2
 5156              		.loc 1 2393 8
 5157 00da 002B     		cmp	r3, #0
 5158 00dc 0BD0     		beq	.L281
 5159              		.loc 1 2393 57 discriminator 1
 5160 00de D7F8DC30 		ldr	r3, [r7, #220]
 5161 00e2 03F00103 		and	r3, r3, #1
 5162              		.loc 1 2393 45 discriminator 1
 5163 00e6 002B     		cmp	r3, #0
 5164 00e8 05D0     		beq	.L281
2394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_FE;
 5165              		.loc 1 2395 24
 5166 00ea 7B68     		ldr	r3, [r7, #4]
 5167 00ec 1B6C     		ldr	r3, [r3, #64]
 5168 00ee 43F00402 		orr	r2, r3, #4
 5169 00f2 7B68     		ldr	r3, [r7, #4]
 5170 00f4 1A64     		str	r2, [r3, #64]
 5171              	.L281:
2396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* UART Over-Run interrupt occurred --------------------------------------*/
2399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (((isrflags & USART_SR_ORE) != RESET) && (((cr1its & USART_CR1_RXNEIE) != RESET)
 5172              		.loc 1 2399 20
 5173 00f6 D7F8E430 		ldr	r3, [r7, #228]
 5174 00fa 03F00803 		and	r3, r3, #8
 5175              		.loc 1 2399 8
 5176 00fe 002B     		cmp	r3, #0
 5177 0100 11D0     		beq	.L282
 5178              		.loc 1 2399 59 discriminator 1
 5179 0102 D7F8E030 		ldr	r3, [r7, #224]
 5180 0106 03F02003 		and	r3, r3, #32
 5181              		.loc 1 2399 46 discriminator 1
 5182 010a 002B     		cmp	r3, #0
 5183 010c 05D1     		bne	.L283
2400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                  || ((cr3its & USART_CR3_EIE) != RESET)))
 5184              		.loc 1 2400 62
 5185 010e D7F8DC30 		ldr	r3, [r7, #220]
 5186 0112 03F00103 		and	r3, r3, #1
 5187              		.loc 1 2400 50
 5188 0116 002B     		cmp	r3, #0
 5189 0118 05D0     		beq	.L282
 5190              	.L283:
2401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->ErrorCode |= HAL_UART_ERROR_ORE;
 5191              		.loc 1 2402 24
 5192 011a 7B68     		ldr	r3, [r7, #4]
 5193 011c 1B6C     		ldr	r3, [r3, #64]
 5194 011e 43F00802 		orr	r2, r3, #8
 5195 0122 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 155


 5196 0124 1A64     		str	r2, [r3, #64]
 5197              	.L282:
2403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Call UART Error Call back function if need be --------------------------*/
2406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ErrorCode != HAL_UART_ERROR_NONE)
 5198              		.loc 1 2406 14
 5199 0126 7B68     		ldr	r3, [r7, #4]
 5200 0128 1B6C     		ldr	r3, [r3, #64]
 5201              		.loc 1 2406 8
 5202 012a 002B     		cmp	r3, #0
 5203 012c 00F0ED81 		beq	.L321
2407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* UART in mode Receiver -----------------------------------------------*/
2409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((isrflags & USART_SR_RXNE) != RESET) && ((cr1its & USART_CR1_RXNEIE) != RESET))
 5204              		.loc 1 2409 22
 5205 0130 D7F8E430 		ldr	r3, [r7, #228]
 5206 0134 03F02003 		and	r3, r3, #32
 5207              		.loc 1 2409 10
 5208 0138 002B     		cmp	r3, #0
 5209 013a 08D0     		beq	.L285
 5210              		.loc 1 2409 61 discriminator 1
 5211 013c D7F8E030 		ldr	r3, [r7, #224]
 5212 0140 03F02003 		and	r3, r3, #32
 5213              		.loc 1 2409 49 discriminator 1
 5214 0144 002B     		cmp	r3, #0
 5215 0146 02D0     		beq	.L285
2410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_Receive_IT(huart);
 5216              		.loc 1 2411 9
 5217 0148 7868     		ldr	r0, [r7, #4]
 5218 014a FFF7FEFF 		bl	UART_Receive_IT
 5219              	.L285:
2412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* If Overrun error occurs, or if any error occurs in DMA mode reception,
2415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          consider error as blocking */
2416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 5220              		.loc 1 2416 20
 5221 014e 7B68     		ldr	r3, [r7, #4]
 5222 0150 1B68     		ldr	r3, [r3]
 5223 0152 5B69     		ldr	r3, [r3, #20]
 5224 0154 03F04003 		and	r3, r3, #64
 5225 0158 402B     		cmp	r3, #64
 5226 015a 0CBF     		ite	eq
 5227 015c 0123     		moveq	r3, #1
 5228 015e 0023     		movne	r3, #0
 5229 0160 DBB2     		uxtb	r3, r3
 5230              		.loc 1 2416 18
 5231 0162 C7F8D430 		str	r3, [r7, #212]
2417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (((huart->ErrorCode & HAL_UART_ERROR_ORE) != RESET) || dmarequest)
 5232              		.loc 1 2417 18
 5233 0166 7B68     		ldr	r3, [r7, #4]
 5234 0168 1B6C     		ldr	r3, [r3, #64]
 5235              		.loc 1 2417 30
 5236 016a 03F00803 		and	r3, r3, #8
 5237              		.loc 1 2417 10
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 156


 5238 016e 002B     		cmp	r3, #0
 5239 0170 03D1     		bne	.L286
 5240              		.loc 1 2417 62 discriminator 1
 5241 0172 D7F8D430 		ldr	r3, [r7, #212]
 5242 0176 002B     		cmp	r3, #0
 5243 0178 4FD0     		beq	.L287
 5244              	.L286:
2418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Blocking error : transfer is aborted
2420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Set the UART state ready to be able to start again the process,
2421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Disable Rx Interrupts, and disable Rx DMA request, if ongoing */
2422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         UART_EndRxTransfer(huart);
 5245              		.loc 1 2422 9
 5246 017a 7868     		ldr	r0, [r7, #4]
 5247 017c FFF7FEFF 		bl	UART_EndRxTransfer
2423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART DMA Rx request if enabled */
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5248              		.loc 1 2425 13
 5249 0180 7B68     		ldr	r3, [r7, #4]
 5250 0182 1B68     		ldr	r3, [r3]
 5251 0184 5B69     		ldr	r3, [r3, #20]
 5252 0186 03F04003 		and	r3, r3, #64
 5253              		.loc 1 2425 12
 5254 018a 402B     		cmp	r3, #64
 5255 018c 41D1     		bne	.L288
 5256              	.L291:
 5257              	.LBB499:
2426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5258              		.loc 1 2427 11 discriminator 1
 5259 018e 7B68     		ldr	r3, [r7, #4]
 5260 0190 1B68     		ldr	r3, [r3]
 5261 0192 1433     		adds	r3, r3, #20
 5262 0194 C7F89C30 		str	r3, [r7, #156]
 5263              	.LBB500:
 5264              	.LBB501:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5265              		.loc 2 1072 4 discriminator 1
 5266 0198 D7F89C30 		ldr	r3, [r7, #156]
 5267              		.syntax unified
 5268              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5269 019c 53E8003F 		ldrex r3, [r3]
 5270              	@ 0 "" 2
 5271              		.thumb
 5272              		.syntax unified
 5273 01a0 C7F89830 		str	r3, [r7, #152]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5274              		.loc 2 1073 10 discriminator 1
 5275 01a4 D7F89830 		ldr	r3, [r7, #152]
 5276              	.LBE501:
 5277              	.LBE500:
 5278              		.loc 1 2427 11 discriminator 1
 5279 01a8 23F04003 		bic	r3, r3, #64
 5280 01ac C7F8D030 		str	r3, [r7, #208]
 5281 01b0 7B68     		ldr	r3, [r7, #4]
 5282 01b2 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 157


 5283 01b4 1433     		adds	r3, r3, #20
 5284 01b6 D7F8D020 		ldr	r2, [r7, #208]
 5285 01ba C7F8A820 		str	r2, [r7, #168]
 5286 01be C7F8A430 		str	r3, [r7, #164]
 5287              	.LBB502:
 5288              	.LBB503:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5289              		.loc 2 1123 4 discriminator 1
 5290 01c2 D7F8A410 		ldr	r1, [r7, #164]
 5291 01c6 D7F8A820 		ldr	r2, [r7, #168]
 5292              		.syntax unified
 5293              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5294 01ca 41E80023 		strex r3, r2, [r1]
 5295              	@ 0 "" 2
 5296              		.thumb
 5297              		.syntax unified
 5298 01ce C7F8A030 		str	r3, [r7, #160]
 5299              		.loc 2 1124 10 discriminator 1
 5300 01d2 D7F8A030 		ldr	r3, [r7, #160]
 5301              	.LBE503:
 5302              	.LBE502:
 5303              		.loc 1 2427 11 discriminator 1
 5304 01d6 002B     		cmp	r3, #0
 5305 01d8 D9D1     		bne	.L291
 5306              	.LBE499:
2428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Abort the UART DMA Rx stream */
2430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           if (huart->hdmarx != NULL)
 5307              		.loc 1 2430 20
 5308 01da 7B68     		ldr	r3, [r7, #4]
 5309 01dc 9B6B     		ldr	r3, [r3, #56]
 5310              		.loc 1 2430 14
 5311 01de 002B     		cmp	r3, #0
 5312 01e0 13D0     		beq	.L292
2431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Set the UART DMA Abort callback :
2433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                will lead to call HAL_UART_ErrorCallback() at end of DMA abort procedure */
2434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->hdmarx->XferAbortCallback = UART_DMAAbortOnError;
 5313              		.loc 1 2434 18
 5314 01e2 7B68     		ldr	r3, [r7, #4]
 5315 01e4 9B6B     		ldr	r3, [r3, #56]
 5316              		.loc 1 2434 46
 5317 01e6 7D4A     		ldr	r2, .L325
 5318 01e8 1A65     		str	r2, [r3, #80]
2435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             if (HAL_DMA_Abort_IT(huart->hdmarx) != HAL_OK)
 5319              		.loc 1 2435 17
 5320 01ea 7B68     		ldr	r3, [r7, #4]
 5321 01ec 9B6B     		ldr	r3, [r3, #56]
 5322 01ee 1846     		mov	r0, r3
 5323 01f0 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 5324 01f4 0346     		mov	r3, r0
 5325              		.loc 1 2435 16
 5326 01f6 002B     		cmp	r3, #0
 5327 01f8 16D0     		beq	.L322
2436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             {
2437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               /* Call Directly XferAbortCallback function in case of error */
2438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****               huart->hdmarx->XferAbortCallback(huart->hdmarx);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 158


 5328              		.loc 1 2438 20
 5329 01fa 7B68     		ldr	r3, [r7, #4]
 5330 01fc 9B6B     		ldr	r3, [r3, #56]
 5331              		.loc 1 2438 28
 5332 01fe 1B6D     		ldr	r3, [r3, #80]
 5333              		.loc 1 2438 53
 5334 0200 7A68     		ldr	r2, [r7, #4]
 5335 0202 926B     		ldr	r2, [r2, #56]
 5336              		.loc 1 2438 15
 5337 0204 1046     		mov	r0, r2
 5338 0206 9847     		blx	r3
 5339              	.LVL2:
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5340              		.loc 1 2425 12
 5341 0208 0EE0     		b	.L322
 5342              	.L292:
2439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             }
2440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           else
2442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           {
2443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /* Call user error callback */
2444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call registered error callback*/
2446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             huart->ErrorCallback(huart);
2447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             /*Call legacy weak error callback*/
2449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             HAL_UART_ErrorCallback(huart);
 5343              		.loc 1 2449 13
 5344 020a 7868     		ldr	r0, [r7, #4]
 5345 020c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5346              		.loc 1 2425 12
 5347 0210 0AE0     		b	.L322
 5348              	.L288:
2450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           }
2452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         else
2454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Call user error callback */
2456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call registered error callback*/
2458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ErrorCallback(huart);
2459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /*Call legacy weak error callback*/
2461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           HAL_UART_ErrorCallback(huart);
 5349              		.loc 1 2461 11
 5350 0212 7868     		ldr	r0, [r7, #4]
 5351 0214 FFF7FEFF 		bl	HAL_UART_ErrorCallback
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5352              		.loc 1 2425 12
 5353 0218 06E0     		b	.L322
 5354              	.L287:
2462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 159


2466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Non Blocking error : transfer could go on.
2468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            Error is notified to user through user error callback */
2469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered error callback*/
2471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCallback(huart);
2472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak error callback*/
2474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_ErrorCallback(huart);
 5355              		.loc 1 2474 9
 5356 021a 7868     		ldr	r0, [r7, #4]
 5357 021c FFF7FEFF 		bl	HAL_UART_ErrorCallback
2475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ErrorCode = HAL_UART_ERROR_NONE;
 5358              		.loc 1 2477 26
 5359 0220 7B68     		ldr	r3, [r7, #4]
 5360 0222 0022     		movs	r2, #0
 5361 0224 1A64     		str	r2, [r3, #64]
2478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5362              		.loc 1 2480 5
 5363 0226 70E1     		b	.L321
 5364              	.L322:
2425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
 5365              		.loc 1 2425 12
 5366 0228 00BF     		nop
 5367              		.loc 1 2480 5
 5368 022a 6EE1     		b	.L321
 5369              	.L277:
2481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
2482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
2484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : */
2485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 5370              		.loc 1 2485 13
 5371 022c 7B68     		ldr	r3, [r7, #4]
 5372 022e 1B6B     		ldr	r3, [r3, #48]
 5373              		.loc 1 2485 6
 5374 0230 012B     		cmp	r3, #1
 5375 0232 40F04A81 		bne	.L294
2486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((isrflags & USART_SR_IDLE) != 0U)
 5376              		.loc 1 2486 21
 5377 0236 D7F8E430 		ldr	r3, [r7, #228]
 5378 023a 03F01003 		and	r3, r3, #16
 5379              		.loc 1 2486 7
 5380 023e 002B     		cmp	r3, #0
 5381 0240 00F04381 		beq	.L294
2487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       && ((cr1its & USART_SR_IDLE) != 0U))
 5382              		.loc 1 2487 19
 5383 0244 D7F8E030 		ldr	r3, [r7, #224]
 5384 0248 03F01003 		and	r3, r3, #16
 5385              		.loc 1 2487 7
 5386 024c 002B     		cmp	r3, #0
 5387 024e 00F03C81 		beq	.L294
 5388              	.LBB504:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 160


2488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     __HAL_UART_CLEAR_IDLEFLAG(huart);
 5389              		.loc 1 2489 5
 5390 0252 0023     		movs	r3, #0
 5391 0254 BB60     		str	r3, [r7, #8]
 5392 0256 7B68     		ldr	r3, [r7, #4]
 5393 0258 1B68     		ldr	r3, [r3]
 5394 025a 1B68     		ldr	r3, [r3]
 5395 025c BB60     		str	r3, [r7, #8]
 5396 025e 7B68     		ldr	r3, [r7, #4]
 5397 0260 1B68     		ldr	r3, [r3]
 5398 0262 5B68     		ldr	r3, [r3, #4]
 5399 0264 BB60     		str	r3, [r7, #8]
 5400 0266 BB68     		ldr	r3, [r7, #8]
 5401              	.LBE504:
2490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check if DMA mode is enabled in UART */
2492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR))
 5402              		.loc 1 2492 9
 5403 0268 7B68     		ldr	r3, [r7, #4]
 5404 026a 1B68     		ldr	r3, [r3]
 5405 026c 5B69     		ldr	r3, [r3, #20]
 5406 026e 03F04003 		and	r3, r3, #64
 5407              		.loc 1 2492 8
 5408 0272 402B     		cmp	r3, #64
 5409 0274 40F0B480 		bne	.L295
 5410              	.LBB505:
2493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode enabled */
2495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing,
2496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          (DMA cplt callback will be called).
2497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_remaining_rx_data = (uint16_t) __HAL_DMA_GET_COUNTER(huart->hdmarx);
 5411              		.loc 1 2498 50
 5412 0278 7B68     		ldr	r3, [r7, #4]
 5413 027a 9B6B     		ldr	r3, [r3, #56]
 5414 027c 1B68     		ldr	r3, [r3]
 5415 027e 5B68     		ldr	r3, [r3, #4]
 5416              		.loc 1 2498 16
 5417 0280 A7F8BE30 		strh	r3, [r7, #190]	@ movhi
2499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((nb_remaining_rx_data > 0U)
 5418              		.loc 1 2499 10
 5419 0284 B7F8BE30 		ldrh	r3, [r7, #190]
 5420 0288 002B     		cmp	r3, #0
 5421 028a 00F04081 		beq	.L323
2500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_remaining_rx_data < huart->RxXferSize))
 5422              		.loc 1 2500 43
 5423 028e 7B68     		ldr	r3, [r7, #4]
 5424 0290 9B8D     		ldrh	r3, [r3, #44]
 5425              		.loc 1 2500 11
 5426 0292 B7F8BE20 		ldrh	r2, [r7, #190]
 5427 0296 9A42     		cmp	r2, r3
 5428 0298 80F03981 		bcs	.L323
2501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Reception is not complete */
2503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxXferCount = nb_remaining_rx_data;
 5429              		.loc 1 2503 28
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 161


 5430 029c 7B68     		ldr	r3, [r7, #4]
 5431 029e B7F8BE20 		ldrh	r2, [r7, #190]	@ movhi
 5432 02a2 DA85     		strh	r2, [r3, #46]	@ movhi
2504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* In Normal mode, end DMA xfer and HAL UART Rx process*/
2506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (huart->hdmarx->Init.Mode != DMA_CIRCULAR)
 5433              		.loc 1 2506 18
 5434 02a4 7B68     		ldr	r3, [r7, #4]
 5435 02a6 9B6B     		ldr	r3, [r3, #56]
 5436              		.loc 1 2506 32
 5437 02a8 DB69     		ldr	r3, [r3, #28]
 5438              		.loc 1 2506 12
 5439 02aa B3F5807F 		cmp	r3, #256
 5440 02ae 00F08880 		beq	.L297
 5441              	.L300:
 5442              	.LBB506:
2507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
2508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable PE and ERR (Frame error, noise error, overrun error) interrupts */
2509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 5443              		.loc 1 2509 11 discriminator 1
 5444 02b2 7B68     		ldr	r3, [r7, #4]
 5445 02b4 1B68     		ldr	r3, [r3]
 5446 02b6 0C33     		adds	r3, r3, #12
 5447 02b8 C7F88830 		str	r3, [r7, #136]
 5448              	.LBB507:
 5449              	.LBB508:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5450              		.loc 2 1072 4 discriminator 1
 5451 02bc D7F88830 		ldr	r3, [r7, #136]
 5452              		.syntax unified
 5453              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5454 02c0 53E8003F 		ldrex r3, [r3]
 5455              	@ 0 "" 2
 5456              		.thumb
 5457              		.syntax unified
 5458 02c4 C7F88430 		str	r3, [r7, #132]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5459              		.loc 2 1073 10 discriminator 1
 5460 02c8 D7F88430 		ldr	r3, [r7, #132]
 5461              	.LBE508:
 5462              	.LBE507:
 5463              		.loc 1 2509 11 discriminator 1
 5464 02cc 23F48073 		bic	r3, r3, #256
 5465 02d0 C7F8B830 		str	r3, [r7, #184]
 5466 02d4 7B68     		ldr	r3, [r7, #4]
 5467 02d6 1B68     		ldr	r3, [r3]
 5468 02d8 0C33     		adds	r3, r3, #12
 5469 02da D7F8B820 		ldr	r2, [r7, #184]
 5470 02de C7F89420 		str	r2, [r7, #148]
 5471 02e2 C7F89030 		str	r3, [r7, #144]
 5472              	.LBB509:
 5473              	.LBB510:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5474              		.loc 2 1123 4 discriminator 1
 5475 02e6 D7F89010 		ldr	r1, [r7, #144]
 5476 02ea D7F89420 		ldr	r2, [r7, #148]
 5477              		.syntax unified
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 162


 5478              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5479 02ee 41E80023 		strex r3, r2, [r1]
 5480              	@ 0 "" 2
 5481              		.thumb
 5482              		.syntax unified
 5483 02f2 C7F88C30 		str	r3, [r7, #140]
 5484              		.loc 2 1124 10 discriminator 1
 5485 02f6 D7F88C30 		ldr	r3, [r7, #140]
 5486              	.LBE510:
 5487              	.LBE509:
 5488              		.loc 1 2509 11 discriminator 1
 5489 02fa 002B     		cmp	r3, #0
 5490 02fc D9D1     		bne	.L300
 5491              	.L303:
 5492              	.LBE506:
 5493              	.LBB511:
2510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5494              		.loc 1 2510 11 discriminator 1
 5495 02fe 7B68     		ldr	r3, [r7, #4]
 5496 0300 1B68     		ldr	r3, [r3]
 5497 0302 1433     		adds	r3, r3, #20
 5498 0304 7B67     		str	r3, [r7, #116]
 5499              	.LBB512:
 5500              	.LBB513:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5501              		.loc 2 1072 4 discriminator 1
 5502 0306 7B6F     		ldr	r3, [r7, #116]
 5503              		.syntax unified
 5504              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5505 0308 53E8003F 		ldrex r3, [r3]
 5506              	@ 0 "" 2
 5507              		.thumb
 5508              		.syntax unified
 5509 030c 3B67     		str	r3, [r7, #112]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5510              		.loc 2 1073 10 discriminator 1
 5511 030e 3B6F     		ldr	r3, [r7, #112]
 5512              	.LBE513:
 5513              	.LBE512:
 5514              		.loc 1 2510 11 discriminator 1
 5515 0310 23F00103 		bic	r3, r3, #1
 5516 0314 C7F8B430 		str	r3, [r7, #180]
 5517 0318 7B68     		ldr	r3, [r7, #4]
 5518 031a 1B68     		ldr	r3, [r3]
 5519 031c 1433     		adds	r3, r3, #20
 5520 031e D7F8B420 		ldr	r2, [r7, #180]
 5521 0322 C7F88020 		str	r2, [r7, #128]
 5522 0326 FB67     		str	r3, [r7, #124]
 5523              	.LBB514:
 5524              	.LBB515:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5525              		.loc 2 1123 4 discriminator 1
 5526 0328 F96F     		ldr	r1, [r7, #124]
 5527 032a D7F88020 		ldr	r2, [r7, #128]
 5528              		.syntax unified
 5529              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5530 032e 41E80023 		strex r3, r2, [r1]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 163


 5531              	@ 0 "" 2
 5532              		.thumb
 5533              		.syntax unified
 5534 0332 BB67     		str	r3, [r7, #120]
 5535              		.loc 2 1124 10 discriminator 1
 5536 0334 BB6F     		ldr	r3, [r7, #120]
 5537              	.LBE515:
 5538              	.LBE514:
 5539              		.loc 1 2510 11 discriminator 1
 5540 0336 002B     		cmp	r3, #0
 5541 0338 E1D1     		bne	.L303
 5542              	.L306:
 5543              	.LBE511:
 5544              	.LBB516:
2511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Disable the DMA transfer for the receiver request by resetting the DMAR bit
2513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              in the UART CR3 register */
2514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 5545              		.loc 1 2514 11 discriminator 1
 5546 033a 7B68     		ldr	r3, [r7, #4]
 5547 033c 1B68     		ldr	r3, [r3]
 5548 033e 1433     		adds	r3, r3, #20
 5549 0340 3B66     		str	r3, [r7, #96]
 5550              	.LBB517:
 5551              	.LBB518:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5552              		.loc 2 1072 4 discriminator 1
 5553 0342 3B6E     		ldr	r3, [r7, #96]
 5554              		.syntax unified
 5555              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5556 0344 53E8003F 		ldrex r3, [r3]
 5557              	@ 0 "" 2
 5558              		.thumb
 5559              		.syntax unified
 5560 0348 FB65     		str	r3, [r7, #92]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5561              		.loc 2 1073 10 discriminator 1
 5562 034a FB6D     		ldr	r3, [r7, #92]
 5563              	.LBE518:
 5564              	.LBE517:
 5565              		.loc 1 2514 11 discriminator 1
 5566 034c 23F04003 		bic	r3, r3, #64
 5567 0350 C7F8B030 		str	r3, [r7, #176]
 5568 0354 7B68     		ldr	r3, [r7, #4]
 5569 0356 1B68     		ldr	r3, [r3]
 5570 0358 1433     		adds	r3, r3, #20
 5571 035a D7F8B020 		ldr	r2, [r7, #176]
 5572 035e FA66     		str	r2, [r7, #108]
 5573 0360 BB66     		str	r3, [r7, #104]
 5574              	.LBB519:
 5575              	.LBB520:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5576              		.loc 2 1123 4 discriminator 1
 5577 0362 B96E     		ldr	r1, [r7, #104]
 5578 0364 FA6E     		ldr	r2, [r7, #108]
 5579              		.syntax unified
 5580              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 164


 5581 0366 41E80023 		strex r3, r2, [r1]
 5582              	@ 0 "" 2
 5583              		.thumb
 5584              		.syntax unified
 5585 036a 7B66     		str	r3, [r7, #100]
 5586              		.loc 2 1124 10 discriminator 1
 5587 036c 7B6E     		ldr	r3, [r7, #100]
 5588              	.LBE520:
 5589              	.LBE519:
 5590              		.loc 1 2514 11 discriminator 1
 5591 036e 002B     		cmp	r3, #0
 5592 0370 E3D1     		bne	.L306
 5593              	.LBE516:
2515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* At end of Rx process, restore huart->RxState to Ready */
2517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->RxState = HAL_UART_STATE_READY;
 5594              		.loc 1 2517 26
 5595 0372 7B68     		ldr	r3, [r7, #4]
 5596 0374 2022     		movs	r2, #32
 5597 0376 83F83E20 		strb	r2, [r3, #62]
2518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5598              		.loc 1 2518 32
 5599 037a 7B68     		ldr	r3, [r7, #4]
 5600 037c 0022     		movs	r2, #0
 5601 037e 1A63     		str	r2, [r3, #48]
 5602              	.L309:
 5603              	.LBB521:
2519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5604              		.loc 1 2520 11 discriminator 1
 5605 0380 7B68     		ldr	r3, [r7, #4]
 5606 0382 1B68     		ldr	r3, [r3]
 5607 0384 0C33     		adds	r3, r3, #12
 5608 0386 FB64     		str	r3, [r7, #76]
 5609              	.LBB522:
 5610              	.LBB523:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5611              		.loc 2 1072 4 discriminator 1
 5612 0388 FB6C     		ldr	r3, [r7, #76]
 5613              		.syntax unified
 5614              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5615 038a 53E8003F 		ldrex r3, [r3]
 5616              	@ 0 "" 2
 5617              		.thumb
 5618              		.syntax unified
 5619 038e BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5620              		.loc 2 1073 10 discriminator 1
 5621 0390 BB6C     		ldr	r3, [r7, #72]
 5622              	.LBE523:
 5623              	.LBE522:
 5624              		.loc 1 2520 11 discriminator 1
 5625 0392 23F01003 		bic	r3, r3, #16
 5626 0396 C7F8AC30 		str	r3, [r7, #172]
 5627 039a 7B68     		ldr	r3, [r7, #4]
 5628 039c 1B68     		ldr	r3, [r3]
 5629 039e 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 165


 5630 03a0 D7F8AC20 		ldr	r2, [r7, #172]
 5631 03a4 BA65     		str	r2, [r7, #88]
 5632 03a6 7B65     		str	r3, [r7, #84]
 5633              	.LBB524:
 5634              	.LBB525:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5635              		.loc 2 1123 4 discriminator 1
 5636 03a8 796D     		ldr	r1, [r7, #84]
 5637 03aa BA6D     		ldr	r2, [r7, #88]
 5638              		.syntax unified
 5639              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5640 03ac 41E80023 		strex r3, r2, [r1]
 5641              	@ 0 "" 2
 5642              		.thumb
 5643              		.syntax unified
 5644 03b0 3B65     		str	r3, [r7, #80]
 5645              		.loc 2 1124 10 discriminator 1
 5646 03b2 3B6D     		ldr	r3, [r7, #80]
 5647              	.LBE525:
 5648              	.LBE524:
 5649              		.loc 1 2520 11 discriminator 1
 5650 03b4 002B     		cmp	r3, #0
 5651 03b6 E3D1     		bne	.L309
 5652              	.LBE521:
2521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Last bytes received, so no need as the abort is immediate */
2523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           (void)HAL_DMA_Abort(huart->hdmarx);
 5653              		.loc 1 2523 17
 5654 03b8 7B68     		ldr	r3, [r7, #4]
 5655 03ba 9B6B     		ldr	r3, [r3, #56]
 5656 03bc 1846     		mov	r0, r3
 5657 03be FFF7FEFF 		bl	HAL_DMA_Abort
 5658              	.L297:
2524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
2525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
2527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
2528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, (huart->RxXferSize - huart->RxXferCount));
 5659              		.loc 1 2530 49
 5660 03c2 7B68     		ldr	r3, [r7, #4]
 5661 03c4 9A8D     		ldrh	r2, [r3, #44]
 5662              		.loc 1 2530 69
 5663 03c6 7B68     		ldr	r3, [r7, #4]
 5664 03c8 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5665 03ca 9BB2     		uxth	r3, r3
 5666              		.loc 1 2530 9
 5667 03cc D31A     		subs	r3, r2, r3
 5668 03ce 9BB2     		uxth	r3, r3
 5669 03d0 1946     		mov	r1, r3
 5670 03d2 7868     		ldr	r0, [r7, #4]
 5671 03d4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5672              		.loc 1 2533 7
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 166


 5673 03d8 99E0     		b	.L323
 5674              	.L326:
 5675 03da 00BF     		.align	2
 5676              	.L325:
 5677 03dc 00000000 		.word	UART_DMAAbortOnError
 5678              	.L295:
 5679              	.LBE505:
 5680              	.LBB526:
2534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
2536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
2537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* DMA mode not enabled */
2538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check received length : If all expected data are received, do nothing.
2539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          Otherwise, if at least one data has already been received, IDLE event is to be notified to
2540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       uint16_t nb_rx_data = huart->RxXferSize - huart->RxXferCount;
 5681              		.loc 1 2540 34
 5682 03e0 7B68     		ldr	r3, [r7, #4]
 5683 03e2 9A8D     		ldrh	r2, [r3, #44]
 5684              		.loc 1 2540 54
 5685 03e4 7B68     		ldr	r3, [r7, #4]
 5686 03e6 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5687 03e8 9BB2     		uxth	r3, r3
 5688              		.loc 1 2540 16
 5689 03ea D31A     		subs	r3, r2, r3
 5690 03ec A7F8CE30 		strh	r3, [r7, #206]	@ movhi
2541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->RxXferCount > 0U)
 5691              		.loc 1 2541 17
 5692 03f0 7B68     		ldr	r3, [r7, #4]
 5693 03f2 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 5694 03f4 9BB2     		uxth	r3, r3
 5695              		.loc 1 2541 10
 5696 03f6 002B     		cmp	r3, #0
 5697 03f8 00F08B80 		beq	.L324
2542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           && (nb_rx_data > 0U))
 5698              		.loc 1 2542 11
 5699 03fc B7F8CE30 		ldrh	r3, [r7, #206]
 5700 0400 002B     		cmp	r3, #0
 5701 0402 00F08680 		beq	.L324
 5702              	.L313:
 5703              	.LBB527:
2543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
2544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Parity Error Interrupt and RXNE interrupts */
2545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 5704              		.loc 1 2545 9 discriminator 1
 5705 0406 7B68     		ldr	r3, [r7, #4]
 5706 0408 1B68     		ldr	r3, [r3]
 5707 040a 0C33     		adds	r3, r3, #12
 5708 040c BB63     		str	r3, [r7, #56]
 5709              	.LBB528:
 5710              	.LBB529:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5711              		.loc 2 1072 4 discriminator 1
 5712 040e BB6B     		ldr	r3, [r7, #56]
 5713              		.syntax unified
 5714              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5715 0410 53E8003F 		ldrex r3, [r3]
 5716              	@ 0 "" 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 167


 5717              		.thumb
 5718              		.syntax unified
 5719 0414 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5720              		.loc 2 1073 10 discriminator 1
 5721 0416 7B6B     		ldr	r3, [r7, #52]
 5722              	.LBE529:
 5723              	.LBE528:
 5724              		.loc 1 2545 9 discriminator 1
 5725 0418 23F49073 		bic	r3, r3, #288
 5726 041c C7F8C830 		str	r3, [r7, #200]
 5727 0420 7B68     		ldr	r3, [r7, #4]
 5728 0422 1B68     		ldr	r3, [r3]
 5729 0424 0C33     		adds	r3, r3, #12
 5730 0426 D7F8C820 		ldr	r2, [r7, #200]
 5731 042a 7A64     		str	r2, [r7, #68]
 5732 042c 3B64     		str	r3, [r7, #64]
 5733              	.LBB530:
 5734              	.LBB531:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5735              		.loc 2 1123 4 discriminator 1
 5736 042e 396C     		ldr	r1, [r7, #64]
 5737 0430 7A6C     		ldr	r2, [r7, #68]
 5738              		.syntax unified
 5739              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5740 0432 41E80023 		strex r3, r2, [r1]
 5741              	@ 0 "" 2
 5742              		.thumb
 5743              		.syntax unified
 5744 0436 FB63     		str	r3, [r7, #60]
 5745              		.loc 2 1124 10 discriminator 1
 5746 0438 FB6B     		ldr	r3, [r7, #60]
 5747              	.LBE531:
 5748              	.LBE530:
 5749              		.loc 1 2545 9 discriminator 1
 5750 043a 002B     		cmp	r3, #0
 5751 043c E3D1     		bne	.L313
 5752              	.L316:
 5753              	.LBE527:
 5754              	.LBB532:
2546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
2548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 5755              		.loc 1 2548 9 discriminator 1
 5756 043e 7B68     		ldr	r3, [r7, #4]
 5757 0440 1B68     		ldr	r3, [r3]
 5758 0442 1433     		adds	r3, r3, #20
 5759 0444 7B62     		str	r3, [r7, #36]
 5760              	.LBB533:
 5761              	.LBB534:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5762              		.loc 2 1072 4 discriminator 1
 5763 0446 7B6A     		ldr	r3, [r7, #36]
 5764              		.syntax unified
 5765              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5766 0448 53E8003F 		ldrex r3, [r3]
 5767              	@ 0 "" 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 168


 5768              		.thumb
 5769              		.syntax unified
 5770 044c 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5771              		.loc 2 1073 10 discriminator 1
 5772 044e 3B6A     		ldr	r3, [r7, #32]
 5773              	.LBE534:
 5774              	.LBE533:
 5775              		.loc 1 2548 9 discriminator 1
 5776 0450 23F00103 		bic	r3, r3, #1
 5777 0454 C7F8C430 		str	r3, [r7, #196]
 5778 0458 7B68     		ldr	r3, [r7, #4]
 5779 045a 1B68     		ldr	r3, [r3]
 5780 045c 1433     		adds	r3, r3, #20
 5781 045e D7F8C420 		ldr	r2, [r7, #196]
 5782 0462 3A63     		str	r2, [r7, #48]
 5783 0464 FB62     		str	r3, [r7, #44]
 5784              	.LBB535:
 5785              	.LBB536:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5786              		.loc 2 1123 4 discriminator 1
 5787 0466 F96A     		ldr	r1, [r7, #44]
 5788 0468 3A6B     		ldr	r2, [r7, #48]
 5789              		.syntax unified
 5790              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5791 046a 41E80023 		strex r3, r2, [r1]
 5792              	@ 0 "" 2
 5793              		.thumb
 5794              		.syntax unified
 5795 046e BB62     		str	r3, [r7, #40]
 5796              		.loc 2 1124 10 discriminator 1
 5797 0470 BB6A     		ldr	r3, [r7, #40]
 5798              	.LBE536:
 5799              	.LBE535:
 5800              		.loc 1 2548 9 discriminator 1
 5801 0472 002B     		cmp	r3, #0
 5802 0474 E3D1     		bne	.L316
 5803              	.LBE532:
2549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Rx process is completed, restore huart->RxState to Ready */
2551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 5804              		.loc 1 2551 24
 5805 0476 7B68     		ldr	r3, [r7, #4]
 5806 0478 2022     		movs	r2, #32
 5807 047a 83F83E20 		strb	r2, [r3, #62]
2552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 5808              		.loc 1 2552 30
 5809 047e 7B68     		ldr	r3, [r7, #4]
 5810 0480 0022     		movs	r2, #0
 5811 0482 1A63     		str	r2, [r3, #48]
 5812              	.L319:
 5813              	.LBB537:
2553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 5814              		.loc 1 2554 9 discriminator 1
 5815 0484 7B68     		ldr	r3, [r7, #4]
 5816 0486 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 169


 5817 0488 0C33     		adds	r3, r3, #12
 5818 048a 3B61     		str	r3, [r7, #16]
 5819              	.LBB538:
 5820              	.LBB539:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5821              		.loc 2 1072 4 discriminator 1
 5822 048c 3B69     		ldr	r3, [r7, #16]
 5823              		.syntax unified
 5824              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5825 048e 53E8003F 		ldrex r3, [r3]
 5826              	@ 0 "" 2
 5827              		.thumb
 5828              		.syntax unified
 5829 0492 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 5830              		.loc 2 1073 10 discriminator 1
 5831 0494 FB68     		ldr	r3, [r7, #12]
 5832              	.LBE539:
 5833              	.LBE538:
 5834              		.loc 1 2554 9 discriminator 1
 5835 0496 23F01003 		bic	r3, r3, #16
 5836 049a C7F8C030 		str	r3, [r7, #192]
 5837 049e 7B68     		ldr	r3, [r7, #4]
 5838 04a0 1B68     		ldr	r3, [r3]
 5839 04a2 0C33     		adds	r3, r3, #12
 5840 04a4 D7F8C020 		ldr	r2, [r7, #192]
 5841 04a8 FA61     		str	r2, [r7, #28]
 5842 04aa BB61     		str	r3, [r7, #24]
 5843              	.LBB540:
 5844              	.LBB541:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 5845              		.loc 2 1123 4 discriminator 1
 5846 04ac B969     		ldr	r1, [r7, #24]
 5847 04ae FA69     		ldr	r2, [r7, #28]
 5848              		.syntax unified
 5849              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 5850 04b0 41E80023 		strex r3, r2, [r1]
 5851              	@ 0 "" 2
 5852              		.thumb
 5853              		.syntax unified
 5854 04b4 7B61     		str	r3, [r7, #20]
 5855              		.loc 2 1124 10 discriminator 1
 5856 04b6 7B69     		ldr	r3, [r7, #20]
 5857              	.LBE541:
 5858              	.LBE540:
 5859              		.loc 1 2554 9 discriminator 1
 5860 04b8 002B     		cmp	r3, #0
 5861 04ba E3D1     		bne	.L319
 5862              	.LBE537:
2555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
2557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, nb_rx_data);
2558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
2559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
2560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, nb_rx_data);
 5863              		.loc 1 2560 9
 5864 04bc B7F8CE30 		ldrh	r3, [r7, #206]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 170


 5865 04c0 1946     		mov	r1, r3
 5866 04c2 7868     		ldr	r0, [r7, #4]
 5867 04c4 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
2561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
 5868              		.loc 1 2563 7
 5869 04c8 23E0     		b	.L324
 5870              	.L294:
 5871              	.LBE526:
2564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
2565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter ------------------------------------------------*/
2568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TXE) != RESET) && ((cr1its & USART_CR1_TXEIE) != RESET))
 5872              		.loc 1 2568 18
 5873 04ca D7F8E430 		ldr	r3, [r7, #228]
 5874 04ce 03F08003 		and	r3, r3, #128
 5875              		.loc 1 2568 6
 5876 04d2 002B     		cmp	r3, #0
 5877 04d4 09D0     		beq	.L320
 5878              		.loc 1 2568 56 discriminator 1
 5879 04d6 D7F8E030 		ldr	r3, [r7, #224]
 5880 04da 03F08003 		and	r3, r3, #128
 5881              		.loc 1 2568 44 discriminator 1
 5882 04de 002B     		cmp	r3, #0
 5883 04e0 03D0     		beq	.L320
2569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_Transmit_IT(huart);
 5884              		.loc 1 2570 5
 5885 04e2 7868     		ldr	r0, [r7, #4]
 5886 04e4 FFF7FEFF 		bl	UART_Transmit_IT
2571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5887              		.loc 1 2571 5
 5888 04e8 14E0     		b	.L274
 5889              	.L320:
2572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* UART in mode Transmitter end --------------------------------------------*/
2575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (((isrflags & USART_SR_TC) != RESET) && ((cr1its & USART_CR1_TCIE) != RESET))
 5890              		.loc 1 2575 18
 5891 04ea D7F8E430 		ldr	r3, [r7, #228]
 5892 04ee 03F04003 		and	r3, r3, #64
 5893              		.loc 1 2575 6
 5894 04f2 002B     		cmp	r3, #0
 5895 04f4 0ED0     		beq	.L274
 5896              		.loc 1 2575 55 discriminator 1
 5897 04f6 D7F8E030 		ldr	r3, [r7, #224]
 5898 04fa 03F04003 		and	r3, r3, #64
 5899              		.loc 1 2575 43 discriminator 1
 5900 04fe 002B     		cmp	r3, #0
 5901 0500 08D0     		beq	.L274
2576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTransmit_IT(huart);
 5902              		.loc 1 2577 5
 5903 0502 7868     		ldr	r0, [r7, #4]
 5904 0504 FFF7FEFF 		bl	UART_EndTransmit_IT
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 171


2578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return;
 5905              		.loc 1 2578 5
 5906 0508 04E0     		b	.L274
 5907              	.L321:
2480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   } /* End if some error occurs */
 5908              		.loc 1 2480 5
 5909 050a 00BF     		nop
 5910 050c 02E0     		b	.L274
 5911              	.L323:
 5912              	.LBB542:
2533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5913              		.loc 1 2533 7
 5914 050e 00BF     		nop
 5915 0510 00E0     		b	.L274
 5916              	.L324:
 5917              	.LBE542:
 5918              	.LBB543:
2563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 5919              		.loc 1 2563 7
 5920 0512 00BF     		nop
 5921              	.L274:
 5922              	.LBE543:
2579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5923              		.loc 1 2580 1
 5924 0514 E837     		adds	r7, r7, #232
 5925              		.cfi_def_cfa_offset 8
 5926 0516 BD46     		mov	sp, r7
 5927              		.cfi_def_cfa_register 13
 5928              		@ sp needed
 5929 0518 80BD     		pop	{r7, pc}
 5930              		.cfi_endproc
 5931              	.LFE155:
 5933 051a 00BF     		.section	.text.HAL_UART_TxCpltCallback,"ax",%progbits
 5934              		.align	1
 5935              		.weak	HAL_UART_TxCpltCallback
 5936              		.syntax unified
 5937              		.thumb
 5938              		.thumb_func
 5940              	HAL_UART_TxCpltCallback:
 5941              	.LFB156:
2581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Transfer completed callbacks.
2584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxCpltCallback(UART_HandleTypeDef *huart)
2589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5942              		.loc 1 2589 1
 5943              		.cfi_startproc
 5944              		@ args = 0, pretend = 0, frame = 8
 5945              		@ frame_needed = 1, uses_anonymous_args = 0
 5946              		@ link register save eliminated.
 5947 0000 80B4     		push	{r7}
 5948              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 172


 5949              		.cfi_offset 7, -4
 5950 0002 83B0     		sub	sp, sp, #12
 5951              		.cfi_def_cfa_offset 16
 5952 0004 00AF     		add	r7, sp, #0
 5953              		.cfi_def_cfa_register 7
 5954 0006 7860     		str	r0, [r7, #4]
2590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxCpltCallback could be implemented in the user file
2594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5955              		.loc 1 2595 1
 5956 0008 00BF     		nop
 5957 000a 0C37     		adds	r7, r7, #12
 5958              		.cfi_def_cfa_offset 4
 5959 000c BD46     		mov	sp, r7
 5960              		.cfi_def_cfa_register 13
 5961              		@ sp needed
 5962 000e 5DF8047B 		ldr	r7, [sp], #4
 5963              		.cfi_restore 7
 5964              		.cfi_def_cfa_offset 0
 5965 0012 7047     		bx	lr
 5966              		.cfi_endproc
 5967              	.LFE156:
 5969              		.section	.text.HAL_UART_TxHalfCpltCallback,"ax",%progbits
 5970              		.align	1
 5971              		.weak	HAL_UART_TxHalfCpltCallback
 5972              		.syntax unified
 5973              		.thumb
 5974              		.thumb_func
 5976              	HAL_UART_TxHalfCpltCallback:
 5977              	.LFB157:
2596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Tx Half Transfer completed callbacks.
2599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_TxHalfCpltCallback(UART_HandleTypeDef *huart)
2604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 5978              		.loc 1 2604 1
 5979              		.cfi_startproc
 5980              		@ args = 0, pretend = 0, frame = 8
 5981              		@ frame_needed = 1, uses_anonymous_args = 0
 5982              		@ link register save eliminated.
 5983 0000 80B4     		push	{r7}
 5984              		.cfi_def_cfa_offset 4
 5985              		.cfi_offset 7, -4
 5986 0002 83B0     		sub	sp, sp, #12
 5987              		.cfi_def_cfa_offset 16
 5988 0004 00AF     		add	r7, sp, #0
 5989              		.cfi_def_cfa_register 7
 5990 0006 7860     		str	r0, [r7, #4]
2605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 173


2607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_TxHalfCpltCallback could be implemented in the user file
2609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 5991              		.loc 1 2610 1
 5992 0008 00BF     		nop
 5993 000a 0C37     		adds	r7, r7, #12
 5994              		.cfi_def_cfa_offset 4
 5995 000c BD46     		mov	sp, r7
 5996              		.cfi_def_cfa_register 13
 5997              		@ sp needed
 5998 000e 5DF8047B 		ldr	r7, [sp], #4
 5999              		.cfi_restore 7
 6000              		.cfi_def_cfa_offset 0
 6001 0012 7047     		bx	lr
 6002              		.cfi_endproc
 6003              	.LFE157:
 6005              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 6006              		.align	1
 6007              		.weak	HAL_UART_RxCpltCallback
 6008              		.syntax unified
 6009              		.thumb
 6010              		.thumb_func
 6012              	HAL_UART_RxCpltCallback:
 6013              	.LFB158:
2611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Transfer completed callbacks.
2614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
2619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6014              		.loc 1 2619 1
 6015              		.cfi_startproc
 6016              		@ args = 0, pretend = 0, frame = 8
 6017              		@ frame_needed = 1, uses_anonymous_args = 0
 6018              		@ link register save eliminated.
 6019 0000 80B4     		push	{r7}
 6020              		.cfi_def_cfa_offset 4
 6021              		.cfi_offset 7, -4
 6022 0002 83B0     		sub	sp, sp, #12
 6023              		.cfi_def_cfa_offset 16
 6024 0004 00AF     		add	r7, sp, #0
 6025              		.cfi_def_cfa_register 7
 6026 0006 7860     		str	r0, [r7, #4]
2620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxCpltCallback could be implemented in the user file
2624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6027              		.loc 1 2625 1
 6028 0008 00BF     		nop
 6029 000a 0C37     		adds	r7, r7, #12
 6030              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 174


 6031 000c BD46     		mov	sp, r7
 6032              		.cfi_def_cfa_register 13
 6033              		@ sp needed
 6034 000e 5DF8047B 		ldr	r7, [sp], #4
 6035              		.cfi_restore 7
 6036              		.cfi_def_cfa_offset 0
 6037 0012 7047     		bx	lr
 6038              		.cfi_endproc
 6039              	.LFE158:
 6041              		.section	.text.HAL_UART_RxHalfCpltCallback,"ax",%progbits
 6042              		.align	1
 6043              		.weak	HAL_UART_RxHalfCpltCallback
 6044              		.syntax unified
 6045              		.thumb
 6046              		.thumb_func
 6048              	HAL_UART_RxHalfCpltCallback:
 6049              	.LFB159:
2626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Rx Half Transfer completed callbacks.
2629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_RxHalfCpltCallback(UART_HandleTypeDef *huart)
2634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6050              		.loc 1 2634 1
 6051              		.cfi_startproc
 6052              		@ args = 0, pretend = 0, frame = 8
 6053              		@ frame_needed = 1, uses_anonymous_args = 0
 6054              		@ link register save eliminated.
 6055 0000 80B4     		push	{r7}
 6056              		.cfi_def_cfa_offset 4
 6057              		.cfi_offset 7, -4
 6058 0002 83B0     		sub	sp, sp, #12
 6059              		.cfi_def_cfa_offset 16
 6060 0004 00AF     		add	r7, sp, #0
 6061              		.cfi_def_cfa_register 7
 6062 0006 7860     		str	r0, [r7, #4]
2635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_RxHalfCpltCallback could be implemented in the user file
2639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6063              		.loc 1 2640 1
 6064 0008 00BF     		nop
 6065 000a 0C37     		adds	r7, r7, #12
 6066              		.cfi_def_cfa_offset 4
 6067 000c BD46     		mov	sp, r7
 6068              		.cfi_def_cfa_register 13
 6069              		@ sp needed
 6070 000e 5DF8047B 		ldr	r7, [sp], #4
 6071              		.cfi_restore 7
 6072              		.cfi_def_cfa_offset 0
 6073 0012 7047     		bx	lr
 6074              		.cfi_endproc
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 175


 6075              	.LFE159:
 6077              		.section	.text.HAL_UART_ErrorCallback,"ax",%progbits
 6078              		.align	1
 6079              		.weak	HAL_UART_ErrorCallback
 6080              		.syntax unified
 6081              		.thumb
 6082              		.thumb_func
 6084              	HAL_UART_ErrorCallback:
 6085              	.LFB160:
2641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART error callbacks.
2644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_ErrorCallback(UART_HandleTypeDef *huart)
2649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6086              		.loc 1 2649 1
 6087              		.cfi_startproc
 6088              		@ args = 0, pretend = 0, frame = 8
 6089              		@ frame_needed = 1, uses_anonymous_args = 0
 6090              		@ link register save eliminated.
 6091 0000 80B4     		push	{r7}
 6092              		.cfi_def_cfa_offset 4
 6093              		.cfi_offset 7, -4
 6094 0002 83B0     		sub	sp, sp, #12
 6095              		.cfi_def_cfa_offset 16
 6096 0004 00AF     		add	r7, sp, #0
 6097              		.cfi_def_cfa_register 7
 6098 0006 7860     		str	r0, [r7, #4]
2650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE: This function should not be modified, when the callback is needed,
2653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****            the HAL_UART_ErrorCallback could be implemented in the user file
2654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6099              		.loc 1 2655 1
 6100 0008 00BF     		nop
 6101 000a 0C37     		adds	r7, r7, #12
 6102              		.cfi_def_cfa_offset 4
 6103 000c BD46     		mov	sp, r7
 6104              		.cfi_def_cfa_register 13
 6105              		@ sp needed
 6106 000e 5DF8047B 		ldr	r7, [sp], #4
 6107              		.cfi_restore 7
 6108              		.cfi_def_cfa_offset 0
 6109 0012 7047     		bx	lr
 6110              		.cfi_endproc
 6111              	.LFE160:
 6113              		.section	.text.HAL_UART_AbortCpltCallback,"ax",%progbits
 6114              		.align	1
 6115              		.weak	HAL_UART_AbortCpltCallback
 6116              		.syntax unified
 6117              		.thumb
 6118              		.thumb_func
 6120              	HAL_UART_AbortCpltCallback:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 176


 6121              	.LFB161:
2656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortCpltCallback(UART_HandleTypeDef *huart)
2663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6122              		.loc 1 2663 1
 6123              		.cfi_startproc
 6124              		@ args = 0, pretend = 0, frame = 8
 6125              		@ frame_needed = 1, uses_anonymous_args = 0
 6126              		@ link register save eliminated.
 6127 0000 80B4     		push	{r7}
 6128              		.cfi_def_cfa_offset 4
 6129              		.cfi_offset 7, -4
 6130 0002 83B0     		sub	sp, sp, #12
 6131              		.cfi_def_cfa_offset 16
 6132 0004 00AF     		add	r7, sp, #0
 6133              		.cfi_def_cfa_register 7
 6134 0006 7860     		str	r0, [r7, #4]
2664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortCpltCallback can be implemented in the user file.
2669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6135              		.loc 1 2670 1
 6136 0008 00BF     		nop
 6137 000a 0C37     		adds	r7, r7, #12
 6138              		.cfi_def_cfa_offset 4
 6139 000c BD46     		mov	sp, r7
 6140              		.cfi_def_cfa_register 13
 6141              		@ sp needed
 6142 000e 5DF8047B 		ldr	r7, [sp], #4
 6143              		.cfi_restore 7
 6144              		.cfi_def_cfa_offset 0
 6145 0012 7047     		bx	lr
 6146              		.cfi_endproc
 6147              	.LFE161:
 6149              		.section	.text.HAL_UART_AbortTransmitCpltCallback,"ax",%progbits
 6150              		.align	1
 6151              		.weak	HAL_UART_AbortTransmitCpltCallback
 6152              		.syntax unified
 6153              		.thumb
 6154              		.thumb_func
 6156              	HAL_UART_AbortTransmitCpltCallback:
 6157              	.LFB162:
2671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Complete callback.
2674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortTransmitCpltCallback(UART_HandleTypeDef *huart)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 177


2678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6158              		.loc 1 2678 1
 6159              		.cfi_startproc
 6160              		@ args = 0, pretend = 0, frame = 8
 6161              		@ frame_needed = 1, uses_anonymous_args = 0
 6162              		@ link register save eliminated.
 6163 0000 80B4     		push	{r7}
 6164              		.cfi_def_cfa_offset 4
 6165              		.cfi_offset 7, -4
 6166 0002 83B0     		sub	sp, sp, #12
 6167              		.cfi_def_cfa_offset 16
 6168 0004 00AF     		add	r7, sp, #0
 6169              		.cfi_def_cfa_register 7
 6170 0006 7860     		str	r0, [r7, #4]
2679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortTransmitCpltCallback can be implemented in the user file.
2684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6171              		.loc 1 2685 1
 6172 0008 00BF     		nop
 6173 000a 0C37     		adds	r7, r7, #12
 6174              		.cfi_def_cfa_offset 4
 6175 000c BD46     		mov	sp, r7
 6176              		.cfi_def_cfa_register 13
 6177              		@ sp needed
 6178 000e 5DF8047B 		ldr	r7, [sp], #4
 6179              		.cfi_restore 7
 6180              		.cfi_def_cfa_offset 0
 6181 0012 7047     		bx	lr
 6182              		.cfi_endproc
 6183              	.LFE162:
 6185              		.section	.text.HAL_UART_AbortReceiveCpltCallback,"ax",%progbits
 6186              		.align	1
 6187              		.weak	HAL_UART_AbortReceiveCpltCallback
 6188              		.syntax unified
 6189              		.thumb
 6190              		.thumb_func
 6192              	HAL_UART_AbortReceiveCpltCallback:
 6193              	.LFB163:
2686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  UART Abort Receive Complete callback.
2689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UART_AbortReceiveCpltCallback(UART_HandleTypeDef *huart)
2693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6194              		.loc 1 2693 1
 6195              		.cfi_startproc
 6196              		@ args = 0, pretend = 0, frame = 8
 6197              		@ frame_needed = 1, uses_anonymous_args = 0
 6198              		@ link register save eliminated.
 6199 0000 80B4     		push	{r7}
 6200              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 178


 6201              		.cfi_offset 7, -4
 6202 0002 83B0     		sub	sp, sp, #12
 6203              		.cfi_def_cfa_offset 16
 6204 0004 00AF     		add	r7, sp, #0
 6205              		.cfi_def_cfa_register 7
 6206 0006 7860     		str	r0, [r7, #4]
2694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UART_AbortReceiveCpltCallback can be implemented in the user file.
2699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6207              		.loc 1 2700 1
 6208 0008 00BF     		nop
 6209 000a 0C37     		adds	r7, r7, #12
 6210              		.cfi_def_cfa_offset 4
 6211 000c BD46     		mov	sp, r7
 6212              		.cfi_def_cfa_register 13
 6213              		@ sp needed
 6214 000e 5DF8047B 		ldr	r7, [sp], #4
 6215              		.cfi_restore 7
 6216              		.cfi_def_cfa_offset 0
 6217 0012 7047     		bx	lr
 6218              		.cfi_endproc
 6219              	.LFE163:
 6221              		.section	.text.HAL_UARTEx_RxEventCallback,"ax",%progbits
 6222              		.align	1
 6223              		.weak	HAL_UARTEx_RxEventCallback
 6224              		.syntax unified
 6225              		.thumb
 6226              		.thumb_func
 6228              	HAL_UARTEx_RxEventCallback:
 6229              	.LFB164:
2701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Reception Event Callback (Rx event notification called after use of advanced reception 
2704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle
2705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Number of data available in application reception buffer (indicates a position in
2706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               reception buffer until which, data are available)
2707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** __weak void HAL_UARTEx_RxEventCallback(UART_HandleTypeDef *huart, uint16_t Size)
2710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6230              		.loc 1 2710 1
 6231              		.cfi_startproc
 6232              		@ args = 0, pretend = 0, frame = 8
 6233              		@ frame_needed = 1, uses_anonymous_args = 0
 6234              		@ link register save eliminated.
 6235 0000 80B4     		push	{r7}
 6236              		.cfi_def_cfa_offset 4
 6237              		.cfi_offset 7, -4
 6238 0002 83B0     		sub	sp, sp, #12
 6239              		.cfi_def_cfa_offset 16
 6240 0004 00AF     		add	r7, sp, #0
 6241              		.cfi_def_cfa_register 7
 6242 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 179


 6243 0008 0B46     		mov	r3, r1
 6244 000a 7B80     		strh	r3, [r7, #2]	@ movhi
2711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Prevent unused argument(s) compilation warning */
2712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(huart);
2713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UNUSED(Size);
2714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* NOTE : This function should not be modified, when the callback is needed,
2716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****             the HAL_UARTEx_RxEventCallback can be implemented in the user file.
2717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    */
2718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6245              		.loc 1 2718 1
 6246 000c 00BF     		nop
 6247 000e 0C37     		adds	r7, r7, #12
 6248              		.cfi_def_cfa_offset 4
 6249 0010 BD46     		mov	sp, r7
 6250              		.cfi_def_cfa_register 13
 6251              		@ sp needed
 6252 0012 5DF8047B 		ldr	r7, [sp], #4
 6253              		.cfi_restore 7
 6254              		.cfi_def_cfa_offset 0
 6255 0016 7047     		bx	lr
 6256              		.cfi_endproc
 6257              	.LFE164:
 6259              		.section	.text.HAL_LIN_SendBreak,"ax",%progbits
 6260              		.align	1
 6261              		.global	HAL_LIN_SendBreak
 6262              		.syntax unified
 6263              		.thumb
 6264              		.thumb_func
 6266              	HAL_LIN_SendBreak:
 6267              	.LFB165:
2719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group3 Peripheral Control functions
2725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART control functions
2726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2727:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2728:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2729:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                       ##### Peripheral Control functions #####
2730:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2731:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   [..]
2732:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     This subsection provides a set of functions allowing to control the UART:
2733:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_LIN_SendBreak() API can be helpful to transmit the break character.
2734:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_EnterMuteMode() API can be helpful to enter the UART in mute mode.
2735:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_MultiProcessor_ExitMuteMode() API can be helpful to exit the UART mute mode by software
2736:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableTransmitter() API to enable the UART transmitter and disables the UART
2737:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     (+) HAL_HalfDuplex_EnableReceiver() API to enable the UART receiver and disables the UART trans
2738:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2739:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
2740:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2741:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2742:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2743:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2744:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Transmits break characters.
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 180


2745:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2746:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2747:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2748:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2749:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_LIN_SendBreak(UART_HandleTypeDef *huart)
2750:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6268              		.loc 1 2750 1
 6269              		.cfi_startproc
 6270              		@ args = 0, pretend = 0, frame = 32
 6271              		@ frame_needed = 1, uses_anonymous_args = 0
 6272              		@ link register save eliminated.
 6273 0000 80B4     		push	{r7}
 6274              		.cfi_def_cfa_offset 4
 6275              		.cfi_offset 7, -4
 6276 0002 89B0     		sub	sp, sp, #36
 6277              		.cfi_def_cfa_offset 40
 6278 0004 00AF     		add	r7, sp, #0
 6279              		.cfi_def_cfa_register 7
 6280 0006 7860     		str	r0, [r7, #4]
2751:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2752:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2753:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2754:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2755:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6281              		.loc 1 2755 3
 6282 0008 7B68     		ldr	r3, [r7, #4]
 6283 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6284 000e 012B     		cmp	r3, #1
 6285 0010 01D1     		bne	.L337
 6286              		.loc 1 2755 3 is_stmt 0 discriminator 1
 6287 0012 0223     		movs	r3, #2
 6288 0014 2AE0     		b	.L338
 6289              	.L337:
 6290              		.loc 1 2755 3 discriminator 2
 6291 0016 7B68     		ldr	r3, [r7, #4]
 6292 0018 0122     		movs	r2, #1
 6293 001a 83F83C20 		strb	r2, [r3, #60]
2756:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2757:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6294              		.loc 1 2757 17 is_stmt 1 discriminator 2
 6295 001e 7B68     		ldr	r3, [r7, #4]
 6296 0020 2422     		movs	r2, #36
 6297 0022 83F83D20 		strb	r2, [r3, #61]
 6298              	.L341:
 6299              	.LBB544:
2758:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2759:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Send break characters */
2760:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_SBK);
 6300              		.loc 1 2760 3 discriminator 1
 6301 0026 7B68     		ldr	r3, [r7, #4]
 6302 0028 1B68     		ldr	r3, [r3]
 6303 002a 0C33     		adds	r3, r3, #12
 6304 002c FB60     		str	r3, [r7, #12]
 6305              	.LBB545:
 6306              	.LBB546:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6307              		.loc 2 1072 4 discriminator 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 181


 6308 002e FB68     		ldr	r3, [r7, #12]
 6309              		.syntax unified
 6310              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6311 0030 53E8003F 		ldrex r3, [r3]
 6312              	@ 0 "" 2
 6313              		.thumb
 6314              		.syntax unified
 6315 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6316              		.loc 2 1073 10 discriminator 1
 6317 0036 BB68     		ldr	r3, [r7, #8]
 6318              	.LBE546:
 6319              	.LBE545:
 6320              		.loc 1 2760 3 discriminator 1
 6321 0038 43F00103 		orr	r3, r3, #1
 6322 003c FB61     		str	r3, [r7, #28]
 6323 003e 7B68     		ldr	r3, [r7, #4]
 6324 0040 1B68     		ldr	r3, [r3]
 6325 0042 0C33     		adds	r3, r3, #12
 6326 0044 FA69     		ldr	r2, [r7, #28]
 6327 0046 BA61     		str	r2, [r7, #24]
 6328 0048 7B61     		str	r3, [r7, #20]
 6329              	.LBB547:
 6330              	.LBB548:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6331              		.loc 2 1123 4 discriminator 1
 6332 004a 7969     		ldr	r1, [r7, #20]
 6333 004c BA69     		ldr	r2, [r7, #24]
 6334              		.syntax unified
 6335              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6336 004e 41E80023 		strex r3, r2, [r1]
 6337              	@ 0 "" 2
 6338              		.thumb
 6339              		.syntax unified
 6340 0052 3B61     		str	r3, [r7, #16]
 6341              		.loc 2 1124 10 discriminator 1
 6342 0054 3B69     		ldr	r3, [r7, #16]
 6343              	.LBE548:
 6344              	.LBE547:
 6345              		.loc 1 2760 3 discriminator 1
 6346 0056 002B     		cmp	r3, #0
 6347 0058 E5D1     		bne	.L341
 6348              	.LBE544:
2761:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2762:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6349              		.loc 1 2762 17
 6350 005a 7B68     		ldr	r3, [r7, #4]
 6351 005c 2022     		movs	r2, #32
 6352 005e 83F83D20 		strb	r2, [r3, #61]
2763:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2764:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2765:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6353              		.loc 1 2765 3
 6354 0062 7B68     		ldr	r3, [r7, #4]
 6355 0064 0022     		movs	r2, #0
 6356 0066 83F83C20 		strb	r2, [r3, #60]
2766:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 182


2767:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6357              		.loc 1 2767 10
 6358 006a 0023     		movs	r3, #0
 6359              	.L338:
2768:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6360              		.loc 1 2768 1
 6361 006c 1846     		mov	r0, r3
 6362 006e 2437     		adds	r7, r7, #36
 6363              		.cfi_def_cfa_offset 4
 6364 0070 BD46     		mov	sp, r7
 6365              		.cfi_def_cfa_register 13
 6366              		@ sp needed
 6367 0072 5DF8047B 		ldr	r7, [sp], #4
 6368              		.cfi_restore 7
 6369              		.cfi_def_cfa_offset 0
 6370 0076 7047     		bx	lr
 6371              		.cfi_endproc
 6372              	.LFE165:
 6374              		.section	.text.HAL_MultiProcessor_EnterMuteMode,"ax",%progbits
 6375              		.align	1
 6376              		.global	HAL_MultiProcessor_EnterMuteMode
 6377              		.syntax unified
 6378              		.thumb
 6379              		.thumb_func
 6381              	HAL_MultiProcessor_EnterMuteMode:
 6382              	.LFB166:
2769:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2770:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2771:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enters the UART in mute mode.
2772:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2773:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2774:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2775:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2776:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_EnterMuteMode(UART_HandleTypeDef *huart)
2777:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6383              		.loc 1 2777 1
 6384              		.cfi_startproc
 6385              		@ args = 0, pretend = 0, frame = 32
 6386              		@ frame_needed = 1, uses_anonymous_args = 0
 6387              		@ link register save eliminated.
 6388 0000 80B4     		push	{r7}
 6389              		.cfi_def_cfa_offset 4
 6390              		.cfi_offset 7, -4
 6391 0002 89B0     		sub	sp, sp, #36
 6392              		.cfi_def_cfa_offset 40
 6393 0004 00AF     		add	r7, sp, #0
 6394              		.cfi_def_cfa_register 7
 6395 0006 7860     		str	r0, [r7, #4]
2778:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2779:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2780:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2781:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2782:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6396              		.loc 1 2782 3
 6397 0008 7B68     		ldr	r3, [r7, #4]
 6398 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6399 000e 012B     		cmp	r3, #1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 183


 6400 0010 01D1     		bne	.L343
 6401              		.loc 1 2782 3 is_stmt 0 discriminator 1
 6402 0012 0223     		movs	r3, #2
 6403 0014 2AE0     		b	.L344
 6404              	.L343:
 6405              		.loc 1 2782 3 discriminator 2
 6406 0016 7B68     		ldr	r3, [r7, #4]
 6407 0018 0122     		movs	r2, #1
 6408 001a 83F83C20 		strb	r2, [r3, #60]
2783:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2784:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6409              		.loc 1 2784 17 is_stmt 1 discriminator 2
 6410 001e 7B68     		ldr	r3, [r7, #4]
 6411 0020 2422     		movs	r2, #36
 6412 0022 83F83D20 		strb	r2, [r3, #61]
 6413              	.L347:
 6414              	.LBB549:
2785:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2786:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART mute mode  by setting the RWU bit in the CR1 register */
2787:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6415              		.loc 1 2787 3 discriminator 1
 6416 0026 7B68     		ldr	r3, [r7, #4]
 6417 0028 1B68     		ldr	r3, [r3]
 6418 002a 0C33     		adds	r3, r3, #12
 6419 002c FB60     		str	r3, [r7, #12]
 6420              	.LBB550:
 6421              	.LBB551:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6422              		.loc 2 1072 4 discriminator 1
 6423 002e FB68     		ldr	r3, [r7, #12]
 6424              		.syntax unified
 6425              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6426 0030 53E8003F 		ldrex r3, [r3]
 6427              	@ 0 "" 2
 6428              		.thumb
 6429              		.syntax unified
 6430 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6431              		.loc 2 1073 10 discriminator 1
 6432 0036 BB68     		ldr	r3, [r7, #8]
 6433              	.LBE551:
 6434              	.LBE550:
 6435              		.loc 1 2787 3 discriminator 1
 6436 0038 43F00203 		orr	r3, r3, #2
 6437 003c FB61     		str	r3, [r7, #28]
 6438 003e 7B68     		ldr	r3, [r7, #4]
 6439 0040 1B68     		ldr	r3, [r3]
 6440 0042 0C33     		adds	r3, r3, #12
 6441 0044 FA69     		ldr	r2, [r7, #28]
 6442 0046 BA61     		str	r2, [r7, #24]
 6443 0048 7B61     		str	r3, [r7, #20]
 6444              	.LBB552:
 6445              	.LBB553:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6446              		.loc 2 1123 4 discriminator 1
 6447 004a 7969     		ldr	r1, [r7, #20]
 6448 004c BA69     		ldr	r2, [r7, #24]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 184


 6449              		.syntax unified
 6450              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6451 004e 41E80023 		strex r3, r2, [r1]
 6452              	@ 0 "" 2
 6453              		.thumb
 6454              		.syntax unified
 6455 0052 3B61     		str	r3, [r7, #16]
 6456              		.loc 2 1124 10 discriminator 1
 6457 0054 3B69     		ldr	r3, [r7, #16]
 6458              	.LBE553:
 6459              	.LBE552:
 6460              		.loc 1 2787 3 discriminator 1
 6461 0056 002B     		cmp	r3, #0
 6462 0058 E5D1     		bne	.L347
 6463              	.LBE549:
2788:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2789:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6464              		.loc 1 2789 17
 6465 005a 7B68     		ldr	r3, [r7, #4]
 6466 005c 2022     		movs	r2, #32
 6467 005e 83F83D20 		strb	r2, [r3, #61]
2790:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2791:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2792:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6468              		.loc 1 2792 3
 6469 0062 7B68     		ldr	r3, [r7, #4]
 6470 0064 0022     		movs	r2, #0
 6471 0066 83F83C20 		strb	r2, [r3, #60]
2793:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2794:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6472              		.loc 1 2794 10
 6473 006a 0023     		movs	r3, #0
 6474              	.L344:
2795:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6475              		.loc 1 2795 1
 6476 006c 1846     		mov	r0, r3
 6477 006e 2437     		adds	r7, r7, #36
 6478              		.cfi_def_cfa_offset 4
 6479 0070 BD46     		mov	sp, r7
 6480              		.cfi_def_cfa_register 13
 6481              		@ sp needed
 6482 0072 5DF8047B 		ldr	r7, [sp], #4
 6483              		.cfi_restore 7
 6484              		.cfi_def_cfa_offset 0
 6485 0076 7047     		bx	lr
 6486              		.cfi_endproc
 6487              	.LFE166:
 6489              		.section	.text.HAL_MultiProcessor_ExitMuteMode,"ax",%progbits
 6490              		.align	1
 6491              		.global	HAL_MultiProcessor_ExitMuteMode
 6492              		.syntax unified
 6493              		.thumb
 6494              		.thumb_func
 6496              	HAL_MultiProcessor_ExitMuteMode:
 6497              	.LFB167:
2796:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2797:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 185


2798:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Exits the UART mute mode: wake up software.
2799:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2800:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2801:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2802:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2803:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_MultiProcessor_ExitMuteMode(UART_HandleTypeDef *huart)
2804:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6498              		.loc 1 2804 1
 6499              		.cfi_startproc
 6500              		@ args = 0, pretend = 0, frame = 32
 6501              		@ frame_needed = 1, uses_anonymous_args = 0
 6502              		@ link register save eliminated.
 6503 0000 80B4     		push	{r7}
 6504              		.cfi_def_cfa_offset 4
 6505              		.cfi_offset 7, -4
 6506 0002 89B0     		sub	sp, sp, #36
 6507              		.cfi_def_cfa_offset 40
 6508 0004 00AF     		add	r7, sp, #0
 6509              		.cfi_def_cfa_register 7
 6510 0006 7860     		str	r0, [r7, #4]
2805:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
2806:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_INSTANCE(huart->Instance));
2807:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2808:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2809:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6511              		.loc 1 2809 3
 6512 0008 7B68     		ldr	r3, [r7, #4]
 6513 000a 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6514 000e 012B     		cmp	r3, #1
 6515 0010 01D1     		bne	.L349
 6516              		.loc 1 2809 3 is_stmt 0 discriminator 1
 6517 0012 0223     		movs	r3, #2
 6518 0014 2AE0     		b	.L350
 6519              	.L349:
 6520              		.loc 1 2809 3 discriminator 2
 6521 0016 7B68     		ldr	r3, [r7, #4]
 6522 0018 0122     		movs	r2, #1
 6523 001a 83F83C20 		strb	r2, [r3, #60]
2810:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2811:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6524              		.loc 1 2811 17 is_stmt 1 discriminator 2
 6525 001e 7B68     		ldr	r3, [r7, #4]
 6526 0020 2422     		movs	r2, #36
 6527 0022 83F83D20 		strb	r2, [r3, #61]
 6528              	.L353:
 6529              	.LBB554:
2812:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2813:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the USART mute mode by clearing the RWU bit in the CR1 register */
2814:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_RWU);
 6530              		.loc 1 2814 3 discriminator 1
 6531 0026 7B68     		ldr	r3, [r7, #4]
 6532 0028 1B68     		ldr	r3, [r3]
 6533 002a 0C33     		adds	r3, r3, #12
 6534 002c FB60     		str	r3, [r7, #12]
 6535              	.LBB555:
 6536              	.LBB556:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 186


 6537              		.loc 2 1072 4 discriminator 1
 6538 002e FB68     		ldr	r3, [r7, #12]
 6539              		.syntax unified
 6540              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6541 0030 53E8003F 		ldrex r3, [r3]
 6542              	@ 0 "" 2
 6543              		.thumb
 6544              		.syntax unified
 6545 0034 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6546              		.loc 2 1073 10 discriminator 1
 6547 0036 BB68     		ldr	r3, [r7, #8]
 6548              	.LBE556:
 6549              	.LBE555:
 6550              		.loc 1 2814 3 discriminator 1
 6551 0038 23F00203 		bic	r3, r3, #2
 6552 003c FB61     		str	r3, [r7, #28]
 6553 003e 7B68     		ldr	r3, [r7, #4]
 6554 0040 1B68     		ldr	r3, [r3]
 6555 0042 0C33     		adds	r3, r3, #12
 6556 0044 FA69     		ldr	r2, [r7, #28]
 6557 0046 BA61     		str	r2, [r7, #24]
 6558 0048 7B61     		str	r3, [r7, #20]
 6559              	.LBB557:
 6560              	.LBB558:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6561              		.loc 2 1123 4 discriminator 1
 6562 004a 7969     		ldr	r1, [r7, #20]
 6563 004c BA69     		ldr	r2, [r7, #24]
 6564              		.syntax unified
 6565              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6566 004e 41E80023 		strex r3, r2, [r1]
 6567              	@ 0 "" 2
 6568              		.thumb
 6569              		.syntax unified
 6570 0052 3B61     		str	r3, [r7, #16]
 6571              		.loc 2 1124 10 discriminator 1
 6572 0054 3B69     		ldr	r3, [r7, #16]
 6573              	.LBE558:
 6574              	.LBE557:
 6575              		.loc 1 2814 3 discriminator 1
 6576 0056 002B     		cmp	r3, #0
 6577 0058 E5D1     		bne	.L353
 6578              	.LBE554:
2815:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2816:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6579              		.loc 1 2816 17
 6580 005a 7B68     		ldr	r3, [r7, #4]
 6581 005c 2022     		movs	r2, #32
 6582 005e 83F83D20 		strb	r2, [r3, #61]
2817:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2818:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2819:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6583              		.loc 1 2819 3
 6584 0062 7B68     		ldr	r3, [r7, #4]
 6585 0064 0022     		movs	r2, #0
 6586 0066 83F83C20 		strb	r2, [r3, #60]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 187


2820:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2821:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6587              		.loc 1 2821 10
 6588 006a 0023     		movs	r3, #0
 6589              	.L350:
2822:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6590              		.loc 1 2822 1
 6591 006c 1846     		mov	r0, r3
 6592 006e 2437     		adds	r7, r7, #36
 6593              		.cfi_def_cfa_offset 4
 6594 0070 BD46     		mov	sp, r7
 6595              		.cfi_def_cfa_register 13
 6596              		@ sp needed
 6597 0072 5DF8047B 		ldr	r7, [sp], #4
 6598              		.cfi_restore 7
 6599              		.cfi_def_cfa_offset 0
 6600 0076 7047     		bx	lr
 6601              		.cfi_endproc
 6602              	.LFE167:
 6604              		.section	.text.HAL_HalfDuplex_EnableTransmitter,"ax",%progbits
 6605              		.align	1
 6606              		.global	HAL_HalfDuplex_EnableTransmitter
 6607              		.syntax unified
 6608              		.thumb
 6609              		.thumb_func
 6611              	HAL_HalfDuplex_EnableTransmitter:
 6612              	.LFB168:
2823:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2824:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2825:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART transmitter and disables the UART receiver.
2826:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2827:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2828:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2829:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2830:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableTransmitter(UART_HandleTypeDef *huart)
2831:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6613              		.loc 1 2831 1
 6614              		.cfi_startproc
 6615              		@ args = 0, pretend = 0, frame = 16
 6616              		@ frame_needed = 1, uses_anonymous_args = 0
 6617              		@ link register save eliminated.
 6618 0000 80B4     		push	{r7}
 6619              		.cfi_def_cfa_offset 4
 6620              		.cfi_offset 7, -4
 6621 0002 85B0     		sub	sp, sp, #20
 6622              		.cfi_def_cfa_offset 24
 6623 0004 00AF     		add	r7, sp, #0
 6624              		.cfi_def_cfa_register 7
 6625 0006 7860     		str	r0, [r7, #4]
2832:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6626              		.loc 1 2832 12
 6627 0008 0023     		movs	r3, #0
 6628 000a FB60     		str	r3, [r7, #12]
2833:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2834:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2835:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6629              		.loc 1 2835 3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 188


 6630 000c 7B68     		ldr	r3, [r7, #4]
 6631 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6632 0012 012B     		cmp	r3, #1
 6633 0014 01D1     		bne	.L355
 6634              		.loc 1 2835 3 is_stmt 0 discriminator 1
 6635 0016 0223     		movs	r3, #2
 6636 0018 20E0     		b	.L356
 6637              	.L355:
 6638              		.loc 1 2835 3 discriminator 2
 6639 001a 7B68     		ldr	r3, [r7, #4]
 6640 001c 0122     		movs	r2, #1
 6641 001e 83F83C20 		strb	r2, [r3, #60]
2836:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2837:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6642              		.loc 1 2837 17 is_stmt 1 discriminator 2
 6643 0022 7B68     		ldr	r3, [r7, #4]
 6644 0024 2422     		movs	r2, #36
 6645 0026 83F83D20 		strb	r2, [r3, #61]
2838:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2839:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2840:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6646              		.loc 1 2840 17 discriminator 2
 6647 002a 7B68     		ldr	r3, [r7, #4]
 6648 002c 1B68     		ldr	r3, [r3]
 6649              		.loc 1 2840 10 discriminator 2
 6650 002e DB68     		ldr	r3, [r3, #12]
 6651 0030 FB60     		str	r3, [r7, #12]
2841:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2842:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2843:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6652              		.loc 1 2843 10 discriminator 2
 6653 0032 FB68     		ldr	r3, [r7, #12]
 6654 0034 23F00C03 		bic	r3, r3, #12
 6655 0038 FB60     		str	r3, [r7, #12]
2844:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2845:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's transmit interface by setting the TE bit in the USART CR1 register */
2846:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_TE;
 6656              		.loc 1 2846 10 discriminator 2
 6657 003a FB68     		ldr	r3, [r7, #12]
 6658 003c 43F00803 		orr	r3, r3, #8
 6659 0040 FB60     		str	r3, [r7, #12]
2847:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2848:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2849:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6660              		.loc 1 2849 3 discriminator 2
 6661 0042 7B68     		ldr	r3, [r7, #4]
 6662 0044 1B68     		ldr	r3, [r3]
 6663 0046 FA68     		ldr	r2, [r7, #12]
 6664 0048 DA60     		str	r2, [r3, #12]
2850:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2851:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6665              		.loc 1 2851 17 discriminator 2
 6666 004a 7B68     		ldr	r3, [r7, #4]
 6667 004c 2022     		movs	r2, #32
 6668 004e 83F83D20 		strb	r2, [r3, #61]
2852:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2853:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 189


2854:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6669              		.loc 1 2854 3 discriminator 2
 6670 0052 7B68     		ldr	r3, [r7, #4]
 6671 0054 0022     		movs	r2, #0
 6672 0056 83F83C20 		strb	r2, [r3, #60]
2855:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2856:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6673              		.loc 1 2856 10 discriminator 2
 6674 005a 0023     		movs	r3, #0
 6675              	.L356:
2857:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6676              		.loc 1 2857 1
 6677 005c 1846     		mov	r0, r3
 6678 005e 1437     		adds	r7, r7, #20
 6679              		.cfi_def_cfa_offset 4
 6680 0060 BD46     		mov	sp, r7
 6681              		.cfi_def_cfa_register 13
 6682              		@ sp needed
 6683 0062 5DF8047B 		ldr	r7, [sp], #4
 6684              		.cfi_restore 7
 6685              		.cfi_def_cfa_offset 0
 6686 0066 7047     		bx	lr
 6687              		.cfi_endproc
 6688              	.LFE168:
 6690              		.section	.text.HAL_HalfDuplex_EnableReceiver,"ax",%progbits
 6691              		.align	1
 6692              		.global	HAL_HalfDuplex_EnableReceiver
 6693              		.syntax unified
 6694              		.thumb
 6695              		.thumb_func
 6697              	HAL_HalfDuplex_EnableReceiver:
 6698              	.LFB169:
2858:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2859:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2860:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Enables the UART receiver and disables the UART transmitter.
2861:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2862:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2863:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
2864:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2865:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef HAL_HalfDuplex_EnableReceiver(UART_HandleTypeDef *huart)
2866:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6699              		.loc 1 2866 1
 6700              		.cfi_startproc
 6701              		@ args = 0, pretend = 0, frame = 16
 6702              		@ frame_needed = 1, uses_anonymous_args = 0
 6703              		@ link register save eliminated.
 6704 0000 80B4     		push	{r7}
 6705              		.cfi_def_cfa_offset 4
 6706              		.cfi_offset 7, -4
 6707 0002 85B0     		sub	sp, sp, #20
 6708              		.cfi_def_cfa_offset 24
 6709 0004 00AF     		add	r7, sp, #0
 6710              		.cfi_def_cfa_register 7
 6711 0006 7860     		str	r0, [r7, #4]
2867:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg = 0x00U;
 6712              		.loc 1 2867 12
 6713 0008 0023     		movs	r3, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 190


 6714 000a FB60     		str	r3, [r7, #12]
2868:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2869:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Locked */
2870:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_LOCK(huart);
 6715              		.loc 1 2870 3
 6716 000c 7B68     		ldr	r3, [r7, #4]
 6717 000e 93F83C30 		ldrb	r3, [r3, #60]	@ zero_extendqisi2
 6718 0012 012B     		cmp	r3, #1
 6719 0014 01D1     		bne	.L358
 6720              		.loc 1 2870 3 is_stmt 0 discriminator 1
 6721 0016 0223     		movs	r3, #2
 6722 0018 20E0     		b	.L359
 6723              	.L358:
 6724              		.loc 1 2870 3 discriminator 2
 6725 001a 7B68     		ldr	r3, [r7, #4]
 6726 001c 0122     		movs	r2, #1
 6727 001e 83F83C20 		strb	r2, [r3, #60]
2871:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2872:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_BUSY;
 6728              		.loc 1 2872 17 is_stmt 1 discriminator 2
 6729 0022 7B68     		ldr	r3, [r7, #4]
 6730 0024 2422     		movs	r2, #36
 6731 0026 83F83D20 		strb	r2, [r3, #61]
2873:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2874:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
2875:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = huart->Instance->CR1;
 6732              		.loc 1 2875 17 discriminator 2
 6733 002a 7B68     		ldr	r3, [r7, #4]
 6734 002c 1B68     		ldr	r3, [r3]
 6735              		.loc 1 2875 10 discriminator 2
 6736 002e DB68     		ldr	r3, [r3, #12]
 6737 0030 FB60     		str	r3, [r7, #12]
2876:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2877:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear TE and RE bits */
2878:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg &= (uint32_t)~((uint32_t)(USART_CR1_TE | USART_CR1_RE));
 6738              		.loc 1 2878 10 discriminator 2
 6739 0032 FB68     		ldr	r3, [r7, #12]
 6740 0034 23F00C03 		bic	r3, r3, #12
 6741 0038 FB60     		str	r3, [r7, #12]
2879:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2880:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the USART's receive interface by setting the RE bit in the USART CR1 register */
2881:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg |= (uint32_t)USART_CR1_RE;
 6742              		.loc 1 2881 10 discriminator 2
 6743 003a FB68     		ldr	r3, [r7, #12]
 6744 003c 43F00403 		orr	r3, r3, #4
 6745 0040 FB60     		str	r3, [r7, #12]
2882:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2883:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Write to USART CR1 */
2884:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   WRITE_REG(huart->Instance->CR1, (uint32_t)tmpreg);
 6746              		.loc 1 2884 3 discriminator 2
 6747 0042 7B68     		ldr	r3, [r7, #4]
 6748 0044 1B68     		ldr	r3, [r3]
 6749 0046 FA68     		ldr	r2, [r7, #12]
 6750 0048 DA60     		str	r2, [r3, #12]
2885:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2886:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 6751              		.loc 1 2886 17 discriminator 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 191


 6752 004a 7B68     		ldr	r3, [r7, #4]
 6753 004c 2022     		movs	r2, #32
 6754 004e 83F83D20 		strb	r2, [r3, #61]
2887:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2888:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
2889:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 6755              		.loc 1 2889 3 discriminator 2
 6756 0052 7B68     		ldr	r3, [r7, #4]
 6757 0054 0022     		movs	r2, #0
 6758 0056 83F83C20 		strb	r2, [r3, #60]
2890:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2891:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 6759              		.loc 1 2891 10 discriminator 2
 6760 005a 0023     		movs	r3, #0
 6761              	.L359:
2892:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6762              		.loc 1 2892 1
 6763 005c 1846     		mov	r0, r3
 6764 005e 1437     		adds	r7, r7, #20
 6765              		.cfi_def_cfa_offset 4
 6766 0060 BD46     		mov	sp, r7
 6767              		.cfi_def_cfa_register 13
 6768              		@ sp needed
 6769 0062 5DF8047B 		ldr	r7, [sp], #4
 6770              		.cfi_restore 7
 6771              		.cfi_def_cfa_offset 0
 6772 0066 7047     		bx	lr
 6773              		.cfi_endproc
 6774              	.LFE169:
 6776              		.section	.text.HAL_UART_GetState,"ax",%progbits
 6777              		.align	1
 6778              		.global	HAL_UART_GetState
 6779              		.syntax unified
 6780              		.thumb
 6781              		.thumb_func
 6783              	HAL_UART_GetState:
 6784              	.LFB170:
2893:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2894:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2895:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2896:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2897:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2898:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Exported_Functions_Group4 Peripheral State and Errors functions
2899:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *  @brief   UART State and Errors functions
2900:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *
2901:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @verbatim
2902:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2903:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                  ##### Peripheral State and Errors functions #####
2904:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ==============================================================================
2905:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****  [..]
2906:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    This subsection provides a set of functions allowing to return the State of
2907:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    UART communication process, return Peripheral Errors occurred during communication
2908:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    process
2909:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetState() API can be helpful to check in run-time the state of the UART peripheral
2910:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****    (+) HAL_UART_GetError() check in run-time errors that could be occurred during communication.
2911:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2912:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** @endverbatim
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 192


2913:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2914:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2915:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2916:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2917:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Returns the UART state.
2918:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
2919:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
2920:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL state
2921:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2922:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_UART_StateTypeDef HAL_UART_GetState(UART_HandleTypeDef *huart)
2923:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6785              		.loc 1 2923 1
 6786              		.cfi_startproc
 6787              		@ args = 0, pretend = 0, frame = 16
 6788              		@ frame_needed = 1, uses_anonymous_args = 0
 6789              		@ link register save eliminated.
 6790 0000 80B4     		push	{r7}
 6791              		.cfi_def_cfa_offset 4
 6792              		.cfi_offset 7, -4
 6793 0002 85B0     		sub	sp, sp, #20
 6794              		.cfi_def_cfa_offset 24
 6795 0004 00AF     		add	r7, sp, #0
 6796              		.cfi_def_cfa_register 7
 6797 0006 7860     		str	r0, [r7, #4]
2924:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t temp1 = 0x00U, temp2 = 0x00U;
 6798              		.loc 1 2924 12
 6799 0008 0023     		movs	r3, #0
 6800 000a FB60     		str	r3, [r7, #12]
 6801              		.loc 1 2924 27
 6802 000c 0023     		movs	r3, #0
 6803 000e BB60     		str	r3, [r7, #8]
2925:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp1 = huart->gState;
 6804              		.loc 1 2925 16
 6805 0010 7B68     		ldr	r3, [r7, #4]
 6806 0012 93F83D30 		ldrb	r3, [r3, #61]
 6807 0016 DBB2     		uxtb	r3, r3
 6808              		.loc 1 2925 9
 6809 0018 FB60     		str	r3, [r7, #12]
2926:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   temp2 = huart->RxState;
 6810              		.loc 1 2926 16
 6811 001a 7B68     		ldr	r3, [r7, #4]
 6812 001c 93F83E30 		ldrb	r3, [r3, #62]
 6813 0020 DBB2     		uxtb	r3, r3
 6814              		.loc 1 2926 9
 6815 0022 BB60     		str	r3, [r7, #8]
2927:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2928:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return (HAL_UART_StateTypeDef)(temp1 | temp2);
 6816              		.loc 1 2928 10
 6817 0024 FB68     		ldr	r3, [r7, #12]
 6818 0026 DAB2     		uxtb	r2, r3
 6819 0028 BB68     		ldr	r3, [r7, #8]
 6820 002a DBB2     		uxtb	r3, r3
 6821 002c 1343     		orrs	r3, r3, r2
 6822 002e DBB2     		uxtb	r3, r3
2929:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6823              		.loc 1 2929 1
 6824 0030 1846     		mov	r0, r3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 193


 6825 0032 1437     		adds	r7, r7, #20
 6826              		.cfi_def_cfa_offset 4
 6827 0034 BD46     		mov	sp, r7
 6828              		.cfi_def_cfa_register 13
 6829              		@ sp needed
 6830 0036 5DF8047B 		ldr	r7, [sp], #4
 6831              		.cfi_restore 7
 6832              		.cfi_def_cfa_offset 0
 6833 003a 7047     		bx	lr
 6834              		.cfi_endproc
 6835              	.LFE170:
 6837              		.section	.text.HAL_UART_GetError,"ax",%progbits
 6838              		.align	1
 6839              		.global	HAL_UART_GetError
 6840              		.syntax unified
 6841              		.thumb
 6842              		.thumb_func
 6844              	HAL_UART_GetError:
 6845              	.LFB171:
2930:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2931:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2932:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Return the UART error code
2933:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart Pointer to a UART_HandleTypeDef structure that contains
2934:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified UART.
2935:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval UART Error Code
2936:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2937:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** uint32_t HAL_UART_GetError(UART_HandleTypeDef *huart)
2938:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6846              		.loc 1 2938 1
 6847              		.cfi_startproc
 6848              		@ args = 0, pretend = 0, frame = 8
 6849              		@ frame_needed = 1, uses_anonymous_args = 0
 6850              		@ link register save eliminated.
 6851 0000 80B4     		push	{r7}
 6852              		.cfi_def_cfa_offset 4
 6853              		.cfi_offset 7, -4
 6854 0002 83B0     		sub	sp, sp, #12
 6855              		.cfi_def_cfa_offset 16
 6856 0004 00AF     		add	r7, sp, #0
 6857              		.cfi_def_cfa_register 7
 6858 0006 7860     		str	r0, [r7, #4]
2939:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return huart->ErrorCode;
 6859              		.loc 1 2939 15
 6860 0008 7B68     		ldr	r3, [r7, #4]
 6861 000a 1B6C     		ldr	r3, [r3, #64]
2940:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 6862              		.loc 1 2940 1
 6863 000c 1846     		mov	r0, r3
 6864 000e 0C37     		adds	r7, r7, #12
 6865              		.cfi_def_cfa_offset 4
 6866 0010 BD46     		mov	sp, r7
 6867              		.cfi_def_cfa_register 13
 6868              		@ sp needed
 6869 0012 5DF8047B 		ldr	r7, [sp], #4
 6870              		.cfi_restore 7
 6871              		.cfi_def_cfa_offset 0
 6872 0016 7047     		bx	lr
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 194


 6873              		.cfi_endproc
 6874              	.LFE171:
 6876              		.section	.text.UART_DMATransmitCplt,"ax",%progbits
 6877              		.align	1
 6878              		.syntax unified
 6879              		.thumb
 6880              		.thumb_func
 6882              	UART_DMATransmitCplt:
 6883              	.LFB172:
2941:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2942:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2943:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2944:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2945:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2946:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2947:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @}
2948:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2949:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2950:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /** @defgroup UART_Private_Functions UART Private Functions
2951:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @{
2952:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2953:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2954:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2955:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Initialize the callbacks to their default values.
2956:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
2957:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval none
2958:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2959:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
2960:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** void UART_InitCallbacksToDefault(UART_HandleTypeDef *huart)
2961:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
2962:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Init the UART Callback settings */
2963:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback        = HAL_UART_TxHalfCpltCallback;        /* Legacy weak TxHalfCpltC
2964:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback            = HAL_UART_TxCpltCallback;            /* Legacy weak TxCpltCallb
2965:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxHalfCpltCallback        = HAL_UART_RxHalfCpltCallback;        /* Legacy weak RxHalfCpltC
2966:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxCpltCallback            = HAL_UART_RxCpltCallback;            /* Legacy weak RxCpltCallb
2967:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback             = HAL_UART_ErrorCallback;             /* Legacy weak ErrorCallba
2968:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback         = HAL_UART_AbortCpltCallback;         /* Legacy weak AbortCpltCa
2969:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback = HAL_UART_AbortTransmitCpltCallback; /* Legacy weak AbortTransm
2970:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback  = HAL_UART_AbortReceiveCpltCallback;  /* Legacy weak AbortReceiv
2971:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxEventCallback           = HAL_UARTEx_RxEventCallback;         /* Legacy weak RxEventCall
2972:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2973:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
2974:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
2975:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2976:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
2977:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART transmit process complete callback.
2978:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
2979:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
2980:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
2981:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
2982:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATransmitCplt(DMA_HandleTypeDef *hdma)
2983:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 6884              		.loc 1 2983 1
 6885              		.cfi_startproc
 6886              		@ args = 0, pretend = 0, frame = 64
 6887              		@ frame_needed = 1, uses_anonymous_args = 0
 6888 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 195


 6889              		.cfi_def_cfa_offset 8
 6890              		.cfi_offset 7, -8
 6891              		.cfi_offset 14, -4
 6892 0002 90B0     		sub	sp, sp, #64
 6893              		.cfi_def_cfa_offset 72
 6894 0004 00AF     		add	r7, sp, #0
 6895              		.cfi_def_cfa_register 7
 6896 0006 7860     		str	r0, [r7, #4]
2984:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 6897              		.loc 1 2984 23
 6898 0008 7B68     		ldr	r3, [r7, #4]
 6899 000a 9B6B     		ldr	r3, [r3, #56]
 6900 000c FB63     		str	r3, [r7, #60]
2985:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
2986:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 6901              		.loc 1 2986 12
 6902 000e 7B68     		ldr	r3, [r7, #4]
 6903 0010 1B68     		ldr	r3, [r3]
 6904              		.loc 1 2986 22
 6905 0012 1B68     		ldr	r3, [r3]
 6906              		.loc 1 2986 27
 6907 0014 03F48073 		and	r3, r3, #256
 6908              		.loc 1 2986 6
 6909 0018 002B     		cmp	r3, #0
 6910 001a 37D1     		bne	.L365
2987:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
2988:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 6911              		.loc 1 2988 24
 6912 001c FB6B     		ldr	r3, [r7, #60]
 6913 001e 0022     		movs	r2, #0
 6914 0020 DA84     		strh	r2, [r3, #38]	@ movhi
 6915              	.L368:
 6916              	.LBB559:
2989:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2990:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for transmit request by setting the DMAT bit
2991:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
2992:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAT);
 6917              		.loc 1 2992 5 discriminator 1
 6918 0022 FB6B     		ldr	r3, [r7, #60]
 6919 0024 1B68     		ldr	r3, [r3]
 6920 0026 1433     		adds	r3, r3, #20
 6921 0028 7B62     		str	r3, [r7, #36]
 6922              	.LBB560:
 6923              	.LBB561:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6924              		.loc 2 1072 4 discriminator 1
 6925 002a 7B6A     		ldr	r3, [r7, #36]
 6926              		.syntax unified
 6927              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6928 002c 53E8003F 		ldrex r3, [r3]
 6929              	@ 0 "" 2
 6930              		.thumb
 6931              		.syntax unified
 6932 0030 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6933              		.loc 2 1073 10 discriminator 1
 6934 0032 3B6A     		ldr	r3, [r7, #32]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 196


 6935              	.LBE561:
 6936              	.LBE560:
 6937              		.loc 1 2992 5 discriminator 1
 6938 0034 23F08003 		bic	r3, r3, #128
 6939 0038 BB63     		str	r3, [r7, #56]
 6940 003a FB6B     		ldr	r3, [r7, #60]
 6941 003c 1B68     		ldr	r3, [r3]
 6942 003e 1433     		adds	r3, r3, #20
 6943 0040 BA6B     		ldr	r2, [r7, #56]
 6944 0042 3A63     		str	r2, [r7, #48]
 6945 0044 FB62     		str	r3, [r7, #44]
 6946              	.LBB562:
 6947              	.LBB563:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6948              		.loc 2 1123 4 discriminator 1
 6949 0046 F96A     		ldr	r1, [r7, #44]
 6950 0048 3A6B     		ldr	r2, [r7, #48]
 6951              		.syntax unified
 6952              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6953 004a 41E80023 		strex r3, r2, [r1]
 6954              	@ 0 "" 2
 6955              		.thumb
 6956              		.syntax unified
 6957 004e BB62     		str	r3, [r7, #40]
 6958              		.loc 2 1124 10 discriminator 1
 6959 0050 BB6A     		ldr	r3, [r7, #40]
 6960              	.LBE563:
 6961              	.LBE562:
 6962              		.loc 1 2992 5 discriminator 1
 6963 0052 002B     		cmp	r3, #0
 6964 0054 E5D1     		bne	.L368
 6965              	.L371:
 6966              	.LBE559:
 6967              	.LBB564:
2993:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2994:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Enable the UART Transmit Complete Interrupt */
2995:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_TCIE);
 6968              		.loc 1 2995 5 discriminator 1
 6969 0056 FB6B     		ldr	r3, [r7, #60]
 6970 0058 1B68     		ldr	r3, [r3]
 6971 005a 0C33     		adds	r3, r3, #12
 6972 005c 3B61     		str	r3, [r7, #16]
 6973              	.LBB565:
 6974              	.LBB566:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6975              		.loc 2 1072 4 discriminator 1
 6976 005e 3B69     		ldr	r3, [r7, #16]
 6977              		.syntax unified
 6978              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 6979 0060 53E8003F 		ldrex r3, [r3]
 6980              	@ 0 "" 2
 6981              		.thumb
 6982              		.syntax unified
 6983 0064 FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 6984              		.loc 2 1073 10 discriminator 1
 6985 0066 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 197


 6986              	.LBE566:
 6987              	.LBE565:
 6988              		.loc 1 2995 5 discriminator 1
 6989 0068 43F04003 		orr	r3, r3, #64
 6990 006c 7B63     		str	r3, [r7, #52]
 6991 006e FB6B     		ldr	r3, [r7, #60]
 6992 0070 1B68     		ldr	r3, [r3]
 6993 0072 0C33     		adds	r3, r3, #12
 6994 0074 7A6B     		ldr	r2, [r7, #52]
 6995 0076 FA61     		str	r2, [r7, #28]
 6996 0078 BB61     		str	r3, [r7, #24]
 6997              	.LBB567:
 6998              	.LBB568:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 6999              		.loc 2 1123 4 discriminator 1
 7000 007a B969     		ldr	r1, [r7, #24]
 7001 007c FA69     		ldr	r2, [r7, #28]
 7002              		.syntax unified
 7003              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7004 007e 41E80023 		strex r3, r2, [r1]
 7005              	@ 0 "" 2
 7006              		.thumb
 7007              		.syntax unified
 7008 0082 7B61     		str	r3, [r7, #20]
 7009              		.loc 2 1124 10 discriminator 1
 7010 0084 7B69     		ldr	r3, [r7, #20]
 7011              	.LBE568:
 7012              	.LBE567:
 7013              		.loc 1 2995 5 discriminator 1
 7014 0086 002B     		cmp	r3, #0
 7015 0088 E5D1     		bne	.L371
 7016              	.LBE564:
2996:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
2997:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
2998:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Circular mode */
2999:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3000:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3001:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3002:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Tx complete callback*/
3003:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxCpltCallback(huart);
3004:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3005:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Tx complete callback*/
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_TxCpltCallback(huart);
3007:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3008:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3009:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7017              		.loc 1 3009 1
 7018 008a 02E0     		b	.L373
 7019              	.L365:
3006:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7020              		.loc 1 3006 5
 7021 008c F86B     		ldr	r0, [r7, #60]
 7022 008e FFF7FEFF 		bl	HAL_UART_TxCpltCallback
 7023              	.L373:
 7024              		.loc 1 3009 1
 7025 0092 00BF     		nop
 7026 0094 4037     		adds	r7, r7, #64
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 198


 7027              		.cfi_def_cfa_offset 8
 7028 0096 BD46     		mov	sp, r7
 7029              		.cfi_def_cfa_register 13
 7030              		@ sp needed
 7031 0098 80BD     		pop	{r7, pc}
 7032              		.cfi_endproc
 7033              	.LFE172:
 7035              		.section	.text.UART_DMATxHalfCplt,"ax",%progbits
 7036              		.align	1
 7037              		.syntax unified
 7038              		.thumb
 7039              		.thumb_func
 7041              	UART_DMATxHalfCplt:
 7042              	.LFB173:
3010:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3011:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3012:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART transmit process half complete callback
3013:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3014:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3015:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3016:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3017:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxHalfCplt(DMA_HandleTypeDef *hdma)
3018:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7043              		.loc 1 3018 1
 7044              		.cfi_startproc
 7045              		@ args = 0, pretend = 0, frame = 16
 7046              		@ frame_needed = 1, uses_anonymous_args = 0
 7047 0000 80B5     		push	{r7, lr}
 7048              		.cfi_def_cfa_offset 8
 7049              		.cfi_offset 7, -8
 7050              		.cfi_offset 14, -4
 7051 0002 84B0     		sub	sp, sp, #16
 7052              		.cfi_def_cfa_offset 24
 7053 0004 00AF     		add	r7, sp, #0
 7054              		.cfi_def_cfa_register 7
 7055 0006 7860     		str	r0, [r7, #4]
3019:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7056              		.loc 1 3019 23
 7057 0008 7B68     		ldr	r3, [r7, #4]
 7058 000a 9B6B     		ldr	r3, [r3, #56]
 7059 000c FB60     		str	r3, [r7, #12]
3020:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3021:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3022:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3023:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxHalfCpltCallback(huart);
3024:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3025:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3026:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxHalfCpltCallback(huart);
 7060              		.loc 1 3026 3
 7061 000e F868     		ldr	r0, [r7, #12]
 7062 0010 FFF7FEFF 		bl	HAL_UART_TxHalfCpltCallback
3027:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3028:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7063              		.loc 1 3028 1
 7064 0014 00BF     		nop
 7065 0016 1037     		adds	r7, r7, #16
 7066              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 199


 7067 0018 BD46     		mov	sp, r7
 7068              		.cfi_def_cfa_register 13
 7069              		@ sp needed
 7070 001a 80BD     		pop	{r7, pc}
 7071              		.cfi_endproc
 7072              	.LFE173:
 7074              		.section	.text.UART_DMAReceiveCplt,"ax",%progbits
 7075              		.align	1
 7076              		.syntax unified
 7077              		.thumb
 7078              		.thumb_func
 7080              	UART_DMAReceiveCplt:
 7081              	.LFB174:
3029:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3030:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3031:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART receive process complete callback.
3032:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3033:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3034:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3035:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3036:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAReceiveCplt(DMA_HandleTypeDef *hdma)
3037:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7082              		.loc 1 3037 1
 7083              		.cfi_startproc
 7084              		@ args = 0, pretend = 0, frame = 112
 7085              		@ frame_needed = 1, uses_anonymous_args = 0
 7086 0000 80B5     		push	{r7, lr}
 7087              		.cfi_def_cfa_offset 8
 7088              		.cfi_offset 7, -8
 7089              		.cfi_offset 14, -4
 7090 0002 9CB0     		sub	sp, sp, #112
 7091              		.cfi_def_cfa_offset 120
 7092 0004 00AF     		add	r7, sp, #0
 7093              		.cfi_def_cfa_register 7
 7094 0006 7860     		str	r0, [r7, #4]
3038:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7095              		.loc 1 3038 23
 7096 0008 7B68     		ldr	r3, [r7, #4]
 7097 000a 9B6B     		ldr	r3, [r3, #56]
 7098 000c FB66     		str	r3, [r7, #108]
3039:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* DMA Normal mode*/
3040:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((hdma->Instance->CR & DMA_SxCR_CIRC) == 0U)
 7099              		.loc 1 3040 12
 7100 000e 7B68     		ldr	r3, [r7, #4]
 7101 0010 1B68     		ldr	r3, [r3]
 7102              		.loc 1 3040 22
 7103 0012 1B68     		ldr	r3, [r3]
 7104              		.loc 1 3040 27
 7105 0014 03F48073 		and	r3, r3, #256
 7106              		.loc 1 3040 6
 7107 0018 002B     		cmp	r3, #0
 7108 001a 72D1     		bne	.L376
3041:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3042:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0U;
 7109              		.loc 1 3042 24
 7110 001c FB6E     		ldr	r3, [r7, #108]
 7111 001e 0022     		movs	r2, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 200


 7112 0020 DA85     		strh	r2, [r3, #46]	@ movhi
 7113              	.L379:
 7114              	.LBB569:
3043:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3044:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3045:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7115              		.loc 1 3045 5 discriminator 1
 7116 0022 FB6E     		ldr	r3, [r7, #108]
 7117 0024 1B68     		ldr	r3, [r3]
 7118 0026 0C33     		adds	r3, r3, #12
 7119 0028 FB64     		str	r3, [r7, #76]
 7120              	.LBB570:
 7121              	.LBB571:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7122              		.loc 2 1072 4 discriminator 1
 7123 002a FB6C     		ldr	r3, [r7, #76]
 7124              		.syntax unified
 7125              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7126 002c 53E8003F 		ldrex r3, [r3]
 7127              	@ 0 "" 2
 7128              		.thumb
 7129              		.syntax unified
 7130 0030 BB64     		str	r3, [r7, #72]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7131              		.loc 2 1073 10 discriminator 1
 7132 0032 BB6C     		ldr	r3, [r7, #72]
 7133              	.LBE571:
 7134              	.LBE570:
 7135              		.loc 1 3045 5 discriminator 1
 7136 0034 23F48073 		bic	r3, r3, #256
 7137 0038 BB66     		str	r3, [r7, #104]
 7138 003a FB6E     		ldr	r3, [r7, #108]
 7139 003c 1B68     		ldr	r3, [r3]
 7140 003e 0C33     		adds	r3, r3, #12
 7141 0040 BA6E     		ldr	r2, [r7, #104]
 7142 0042 BA65     		str	r2, [r7, #88]
 7143 0044 7B65     		str	r3, [r7, #84]
 7144              	.LBB572:
 7145              	.LBB573:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7146              		.loc 2 1123 4 discriminator 1
 7147 0046 796D     		ldr	r1, [r7, #84]
 7148 0048 BA6D     		ldr	r2, [r7, #88]
 7149              		.syntax unified
 7150              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7151 004a 41E80023 		strex r3, r2, [r1]
 7152              	@ 0 "" 2
 7153              		.thumb
 7154              		.syntax unified
 7155 004e 3B65     		str	r3, [r7, #80]
 7156              		.loc 2 1124 10 discriminator 1
 7157 0050 3B6D     		ldr	r3, [r7, #80]
 7158              	.LBE573:
 7159              	.LBE572:
 7160              		.loc 1 3045 5 discriminator 1
 7161 0052 002B     		cmp	r3, #0
 7162 0054 E5D1     		bne	.L379
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 201


 7163              	.L382:
 7164              	.LBE569:
 7165              	.LBB574:
3046:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7166              		.loc 1 3046 5 discriminator 1
 7167 0056 FB6E     		ldr	r3, [r7, #108]
 7168 0058 1B68     		ldr	r3, [r3]
 7169 005a 1433     		adds	r3, r3, #20
 7170 005c BB63     		str	r3, [r7, #56]
 7171              	.LBB575:
 7172              	.LBB576:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7173              		.loc 2 1072 4 discriminator 1
 7174 005e BB6B     		ldr	r3, [r7, #56]
 7175              		.syntax unified
 7176              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7177 0060 53E8003F 		ldrex r3, [r3]
 7178              	@ 0 "" 2
 7179              		.thumb
 7180              		.syntax unified
 7181 0064 7B63     		str	r3, [r7, #52]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7182              		.loc 2 1073 10 discriminator 1
 7183 0066 7B6B     		ldr	r3, [r7, #52]
 7184              	.LBE576:
 7185              	.LBE575:
 7186              		.loc 1 3046 5 discriminator 1
 7187 0068 23F00103 		bic	r3, r3, #1
 7188 006c 7B66     		str	r3, [r7, #100]
 7189 006e FB6E     		ldr	r3, [r7, #108]
 7190 0070 1B68     		ldr	r3, [r3]
 7191 0072 1433     		adds	r3, r3, #20
 7192 0074 7A6E     		ldr	r2, [r7, #100]
 7193 0076 7A64     		str	r2, [r7, #68]
 7194 0078 3B64     		str	r3, [r7, #64]
 7195              	.LBB577:
 7196              	.LBB578:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7197              		.loc 2 1123 4 discriminator 1
 7198 007a 396C     		ldr	r1, [r7, #64]
 7199 007c 7A6C     		ldr	r2, [r7, #68]
 7200              		.syntax unified
 7201              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7202 007e 41E80023 		strex r3, r2, [r1]
 7203              	@ 0 "" 2
 7204              		.thumb
 7205              		.syntax unified
 7206 0082 FB63     		str	r3, [r7, #60]
 7207              		.loc 2 1124 10 discriminator 1
 7208 0084 FB6B     		ldr	r3, [r7, #60]
 7209              	.LBE578:
 7210              	.LBE577:
 7211              		.loc 1 3046 5 discriminator 1
 7212 0086 002B     		cmp	r3, #0
 7213 0088 E5D1     		bne	.L382
 7214              	.L385:
 7215              	.LBE574:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 202


 7216              	.LBB579:
3047:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3048:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Disable the DMA transfer for the receiver request by setting the DMAR bit
3049:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****        in the UART CR3 register */
3050:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 7217              		.loc 1 3050 5 discriminator 1
 7218 008a FB6E     		ldr	r3, [r7, #108]
 7219 008c 1B68     		ldr	r3, [r3]
 7220 008e 1433     		adds	r3, r3, #20
 7221 0090 7B62     		str	r3, [r7, #36]
 7222              	.LBB580:
 7223              	.LBB581:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7224              		.loc 2 1072 4 discriminator 1
 7225 0092 7B6A     		ldr	r3, [r7, #36]
 7226              		.syntax unified
 7227              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7228 0094 53E8003F 		ldrex r3, [r3]
 7229              	@ 0 "" 2
 7230              		.thumb
 7231              		.syntax unified
 7232 0098 3B62     		str	r3, [r7, #32]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7233              		.loc 2 1073 10 discriminator 1
 7234 009a 3B6A     		ldr	r3, [r7, #32]
 7235              	.LBE581:
 7236              	.LBE580:
 7237              		.loc 1 3050 5 discriminator 1
 7238 009c 23F04003 		bic	r3, r3, #64
 7239 00a0 3B66     		str	r3, [r7, #96]
 7240 00a2 FB6E     		ldr	r3, [r7, #108]
 7241 00a4 1B68     		ldr	r3, [r3]
 7242 00a6 1433     		adds	r3, r3, #20
 7243 00a8 3A6E     		ldr	r2, [r7, #96]
 7244 00aa 3A63     		str	r2, [r7, #48]
 7245 00ac FB62     		str	r3, [r7, #44]
 7246              	.LBB582:
 7247              	.LBB583:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7248              		.loc 2 1123 4 discriminator 1
 7249 00ae F96A     		ldr	r1, [r7, #44]
 7250 00b0 3A6B     		ldr	r2, [r7, #48]
 7251              		.syntax unified
 7252              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7253 00b2 41E80023 		strex r3, r2, [r1]
 7254              	@ 0 "" 2
 7255              		.thumb
 7256              		.syntax unified
 7257 00b6 BB62     		str	r3, [r7, #40]
 7258              		.loc 2 1124 10 discriminator 1
 7259 00b8 BB6A     		ldr	r3, [r7, #40]
 7260              	.LBE583:
 7261              	.LBE582:
 7262              		.loc 1 3050 5 discriminator 1
 7263 00ba 002B     		cmp	r3, #0
 7264 00bc E5D1     		bne	.L385
 7265              	.LBE579:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 203


3051:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3052:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* At end of Rx process, restore huart->RxState to Ready */
3053:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxState = HAL_UART_STATE_READY;
 7266              		.loc 1 3053 20
 7267 00be FB6E     		ldr	r3, [r7, #108]
 7268 00c0 2022     		movs	r2, #32
 7269 00c2 83F83E20 		strb	r2, [r3, #62]
3054:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3055:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* If Reception till IDLE event has been selected, Disable IDLE Interrupt */
3056:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7270              		.loc 1 3056 14
 7271 00c6 FB6E     		ldr	r3, [r7, #108]
 7272 00c8 1B6B     		ldr	r3, [r3, #48]
 7273              		.loc 1 3056 8
 7274 00ca 012B     		cmp	r3, #1
 7275 00cc 19D1     		bne	.L376
 7276              	.L388:
 7277              	.LBB584:
3057:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3058:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 7278              		.loc 1 3058 7 discriminator 1
 7279 00ce FB6E     		ldr	r3, [r7, #108]
 7280 00d0 1B68     		ldr	r3, [r3]
 7281 00d2 0C33     		adds	r3, r3, #12
 7282 00d4 3B61     		str	r3, [r7, #16]
 7283              	.LBB585:
 7284              	.LBB586:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7285              		.loc 2 1072 4 discriminator 1
 7286 00d6 3B69     		ldr	r3, [r7, #16]
 7287              		.syntax unified
 7288              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7289 00d8 53E8003F 		ldrex r3, [r3]
 7290              	@ 0 "" 2
 7291              		.thumb
 7292              		.syntax unified
 7293 00dc FB60     		str	r3, [r7, #12]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7294              		.loc 2 1073 10 discriminator 1
 7295 00de FB68     		ldr	r3, [r7, #12]
 7296              	.LBE586:
 7297              	.LBE585:
 7298              		.loc 1 3058 7 discriminator 1
 7299 00e0 23F01003 		bic	r3, r3, #16
 7300 00e4 FB65     		str	r3, [r7, #92]
 7301 00e6 FB6E     		ldr	r3, [r7, #108]
 7302 00e8 1B68     		ldr	r3, [r3]
 7303 00ea 0C33     		adds	r3, r3, #12
 7304 00ec FA6D     		ldr	r2, [r7, #92]
 7305 00ee FA61     		str	r2, [r7, #28]
 7306 00f0 BB61     		str	r3, [r7, #24]
 7307              	.LBB587:
 7308              	.LBB588:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7309              		.loc 2 1123 4 discriminator 1
 7310 00f2 B969     		ldr	r1, [r7, #24]
 7311 00f4 FA69     		ldr	r2, [r7, #28]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 204


 7312              		.syntax unified
 7313              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7314 00f6 41E80023 		strex r3, r2, [r1]
 7315              	@ 0 "" 2
 7316              		.thumb
 7317              		.syntax unified
 7318 00fa 7B61     		str	r3, [r7, #20]
 7319              		.loc 2 1124 10 discriminator 1
 7320 00fc 7B69     		ldr	r3, [r7, #20]
 7321              	.LBE588:
 7322              	.LBE587:
 7323              		.loc 1 3058 7 discriminator 1
 7324 00fe 002B     		cmp	r3, #0
 7325 0100 E5D1     		bne	.L388
 7326              	.L376:
 7327              	.LBE584:
3059:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3060:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3061:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3062:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3063:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3064:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7328              		.loc 1 3064 12
 7329 0102 FB6E     		ldr	r3, [r7, #108]
 7330 0104 1B6B     		ldr	r3, [r3, #48]
 7331              		.loc 1 3064 6
 7332 0106 012B     		cmp	r3, #1
 7333 0108 06D1     		bne	.L389
3065:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3066:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3067:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3068:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize);
3069:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3070:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3071:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 7334              		.loc 1 3071 5
 7335 010a FB6E     		ldr	r3, [r7, #108]
 7336 010c 9B8D     		ldrh	r3, [r3, #44]
 7337 010e 1946     		mov	r1, r3
 7338 0110 F86E     		ldr	r0, [r7, #108]
 7339 0112 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3072:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3073:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3074:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3075:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3076:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Complete callback */
3077:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3078:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx complete callback*/
3079:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxCpltCallback(huart);
3080:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3081:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx complete callback*/
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxCpltCallback(huart);
3083:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3084:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3085:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7340              		.loc 1 3085 1
 7341 0116 02E0     		b	.L391
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 205


 7342              	.L389:
3082:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7343              		.loc 1 3082 5
 7344 0118 F86E     		ldr	r0, [r7, #108]
 7345 011a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 7346              	.L391:
 7347              		.loc 1 3085 1
 7348 011e 00BF     		nop
 7349 0120 7037     		adds	r7, r7, #112
 7350              		.cfi_def_cfa_offset 8
 7351 0122 BD46     		mov	sp, r7
 7352              		.cfi_def_cfa_register 13
 7353              		@ sp needed
 7354 0124 80BD     		pop	{r7, pc}
 7355              		.cfi_endproc
 7356              	.LFE174:
 7358              		.section	.text.UART_DMARxHalfCplt,"ax",%progbits
 7359              		.align	1
 7360              		.syntax unified
 7361              		.thumb
 7362              		.thumb_func
 7364              	UART_DMARxHalfCplt:
 7365              	.LFB175:
3086:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3087:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3088:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief DMA UART receive process half complete callback
3089:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3090:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3091:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3092:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3093:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxHalfCplt(DMA_HandleTypeDef *hdma)
3094:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7366              		.loc 1 3094 1
 7367              		.cfi_startproc
 7368              		@ args = 0, pretend = 0, frame = 16
 7369              		@ frame_needed = 1, uses_anonymous_args = 0
 7370 0000 80B5     		push	{r7, lr}
 7371              		.cfi_def_cfa_offset 8
 7372              		.cfi_offset 7, -8
 7373              		.cfi_offset 14, -4
 7374 0002 84B0     		sub	sp, sp, #16
 7375              		.cfi_def_cfa_offset 24
 7376 0004 00AF     		add	r7, sp, #0
 7377              		.cfi_def_cfa_register 7
 7378 0006 7860     		str	r0, [r7, #4]
3095:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7379              		.loc 1 3095 23
 7380 0008 7B68     		ldr	r3, [r7, #4]
 7381 000a 9B6B     		ldr	r3, [r3, #56]
 7382 000c FB60     		str	r3, [r7, #12]
3096:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3097:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check current reception Mode :
3098:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      If Reception till IDLE event has been selected : use Rx Event callback */
3099:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 7383              		.loc 1 3099 12
 7384 000e FB68     		ldr	r3, [r7, #12]
 7385 0010 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 206


 7386              		.loc 1 3099 6
 7387 0012 012B     		cmp	r3, #1
 7388 0014 08D1     		bne	.L393
3100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Event callback*/
3103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxEventCallback(huart, huart->RxXferSize / 2U);
3104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Event callback*/
3106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize / 2U);
 7389              		.loc 1 3106 44
 7390 0016 FB68     		ldr	r3, [r7, #12]
 7391 0018 9B8D     		ldrh	r3, [r3, #44]
 7392              		.loc 1 3106 5
 7393 001a 5B08     		lsrs	r3, r3, #1
 7394 001c 9BB2     		uxth	r3, r3
 7395 001e 1946     		mov	r1, r3
 7396 0020 F868     		ldr	r0, [r7, #12]
 7397 0022 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
3107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* In other cases : use Rx Half Complete callback */
3112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call registered Rx Half complete callback*/
3114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxHalfCpltCallback(huart);
3115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /*Call legacy weak Rx Half complete callback*/
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     HAL_UART_RxHalfCpltCallback(huart);
3118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7398              		.loc 1 3120 1
 7399 0026 02E0     		b	.L395
 7400              	.L393:
3117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
 7401              		.loc 1 3117 5
 7402 0028 F868     		ldr	r0, [r7, #12]
 7403 002a FFF7FEFF 		bl	HAL_UART_RxHalfCpltCallback
 7404              	.L395:
 7405              		.loc 1 3120 1
 7406 002e 00BF     		nop
 7407 0030 1037     		adds	r7, r7, #16
 7408              		.cfi_def_cfa_offset 8
 7409 0032 BD46     		mov	sp, r7
 7410              		.cfi_def_cfa_register 13
 7411              		@ sp needed
 7412 0034 80BD     		pop	{r7, pc}
 7413              		.cfi_endproc
 7414              	.LFE175:
 7416              		.section	.text.UART_DMAError,"ax",%progbits
 7417              		.align	1
 7418              		.syntax unified
 7419              		.thumb
 7420              		.thumb_func
 7422              	UART_DMAError:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 207


 7423              	.LFB176:
3121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication error callback.
3124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAError(DMA_HandleTypeDef *hdma)
3129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7424              		.loc 1 3129 1
 7425              		.cfi_startproc
 7426              		@ args = 0, pretend = 0, frame = 16
 7427              		@ frame_needed = 1, uses_anonymous_args = 0
 7428 0000 80B5     		push	{r7, lr}
 7429              		.cfi_def_cfa_offset 8
 7430              		.cfi_offset 7, -8
 7431              		.cfi_offset 14, -4
 7432 0002 84B0     		sub	sp, sp, #16
 7433              		.cfi_def_cfa_offset 24
 7434 0004 00AF     		add	r7, sp, #0
 7435              		.cfi_def_cfa_register 7
 7436 0006 7860     		str	r0, [r7, #4]
3130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t dmarequest = 0x00U;
 7437              		.loc 1 3130 12
 7438 0008 0023     		movs	r3, #0
 7439 000a FB60     		str	r3, [r7, #12]
3131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 7440              		.loc 1 3131 23
 7441 000c 7B68     		ldr	r3, [r7, #4]
 7442 000e 9B6B     		ldr	r3, [r3, #56]
 7443 0010 BB60     		str	r3, [r7, #8]
3132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Tx request if ongoing */
3134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAT);
 7444              		.loc 1 3134 16
 7445 0012 BB68     		ldr	r3, [r7, #8]
 7446 0014 1B68     		ldr	r3, [r3]
 7447 0016 5B69     		ldr	r3, [r3, #20]
 7448 0018 03F08003 		and	r3, r3, #128
 7449 001c 802B     		cmp	r3, #128
 7450 001e 0CBF     		ite	eq
 7451 0020 0123     		moveq	r3, #1
 7452 0022 0023     		movne	r3, #0
 7453 0024 DBB2     		uxtb	r3, r3
 7454              		.loc 1 3134 14
 7455 0026 FB60     		str	r3, [r7, #12]
3135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->gState == HAL_UART_STATE_BUSY_TX) && dmarequest)
 7456              		.loc 1 3135 13
 7457 0028 BB68     		ldr	r3, [r7, #8]
 7458 002a 93F83D30 		ldrb	r3, [r3, #61]
 7459 002e DBB2     		uxtb	r3, r3
 7460              		.loc 1 3135 6
 7461 0030 212B     		cmp	r3, #33
 7462 0032 08D1     		bne	.L397
 7463              		.loc 1 3135 49 discriminator 1
 7464 0034 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 208


 7465 0036 002B     		cmp	r3, #0
 7466 0038 05D0     		beq	.L397
3136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->TxXferCount = 0x00U;
 7467              		.loc 1 3137 24
 7468 003a BB68     		ldr	r3, [r7, #8]
 7469 003c 0022     		movs	r2, #0
 7470 003e DA84     		strh	r2, [r3, #38]	@ movhi
3138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndTxTransfer(huart);
 7471              		.loc 1 3138 5
 7472 0040 B868     		ldr	r0, [r7, #8]
 7473 0042 FFF7FEFF 		bl	UART_EndTxTransfer
 7474              	.L397:
3139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Stop UART DMA Rx request if ongoing */
3142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   dmarequest = HAL_IS_BIT_SET(huart->Instance->CR3, USART_CR3_DMAR);
 7475              		.loc 1 3142 16
 7476 0046 BB68     		ldr	r3, [r7, #8]
 7477 0048 1B68     		ldr	r3, [r3]
 7478 004a 5B69     		ldr	r3, [r3, #20]
 7479 004c 03F04003 		and	r3, r3, #64
 7480 0050 402B     		cmp	r3, #64
 7481 0052 0CBF     		ite	eq
 7482 0054 0123     		moveq	r3, #1
 7483 0056 0023     		movne	r3, #0
 7484 0058 DBB2     		uxtb	r3, r3
 7485              		.loc 1 3142 14
 7486 005a FB60     		str	r3, [r7, #12]
3143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if ((huart->RxState == HAL_UART_STATE_BUSY_RX) && dmarequest)
 7487              		.loc 1 3143 13
 7488 005c BB68     		ldr	r3, [r7, #8]
 7489 005e 93F83E30 		ldrb	r3, [r3, #62]
 7490 0062 DBB2     		uxtb	r3, r3
 7491              		.loc 1 3143 6
 7492 0064 222B     		cmp	r3, #34
 7493 0066 08D1     		bne	.L398
 7494              		.loc 1 3143 50 discriminator 1
 7495 0068 FB68     		ldr	r3, [r7, #12]
 7496 006a 002B     		cmp	r3, #0
 7497 006c 05D0     		beq	.L398
3144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->RxXferCount = 0x00U;
 7498              		.loc 1 3145 24
 7499 006e BB68     		ldr	r3, [r7, #8]
 7500 0070 0022     		movs	r2, #0
 7501 0072 DA85     		strh	r2, [r3, #46]	@ movhi
3146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     UART_EndRxTransfer(huart);
 7502              		.loc 1 3146 5
 7503 0074 B868     		ldr	r0, [r7, #8]
 7504 0076 FFF7FEFF 		bl	UART_EndRxTransfer
 7505              	.L398:
3147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode |= HAL_UART_ERROR_DMA;
 7506              		.loc 1 3149 20
 7507 007a BB68     		ldr	r3, [r7, #8]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 209


 7508 007c 1B6C     		ldr	r3, [r3, #64]
 7509 007e 43F01002 		orr	r2, r3, #16
 7510 0082 BB68     		ldr	r3, [r7, #8]
 7511 0084 1A64     		str	r2, [r3, #64]
3150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 7512              		.loc 1 3155 3
 7513 0086 B868     		ldr	r0, [r7, #8]
 7514 0088 FFF7FEFF 		bl	HAL_UART_ErrorCallback
3156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7515              		.loc 1 3157 1
 7516 008c 00BF     		nop
 7517 008e 1037     		adds	r7, r7, #16
 7518              		.cfi_def_cfa_offset 8
 7519 0090 BD46     		mov	sp, r7
 7520              		.cfi_def_cfa_register 13
 7521              		@ sp needed
 7522 0092 80BD     		pop	{r7, pc}
 7523              		.cfi_endproc
 7524              	.LFE176:
 7526              		.section	.text.UART_WaitOnFlagUntilTimeout,"ax",%progbits
 7527              		.align	1
 7528              		.syntax unified
 7529              		.thumb
 7530              		.thumb_func
 7532              	UART_WaitOnFlagUntilTimeout:
 7533              	.LFB177:
3158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  This function handles UART Communication Timeout.
3161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Flag specifies the UART flag to check.
3164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Status The new Flag status (SET or RESET).
3165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Tickstart Tick start value
3166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Timeout Timeout duration
3167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, Flag
3170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****                                                      uint32_t Tickstart, uint32_t Timeout)
3171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7534              		.loc 1 3171 1
 7535              		.cfi_startproc
 7536              		@ args = 4, pretend = 0, frame = 64
 7537              		@ frame_needed = 1, uses_anonymous_args = 0
 7538 0000 80B5     		push	{r7, lr}
 7539              		.cfi_def_cfa_offset 8
 7540              		.cfi_offset 7, -8
 7541              		.cfi_offset 14, -4
 7542 0002 90B0     		sub	sp, sp, #64
 7543              		.cfi_def_cfa_offset 72
 7544 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 210


 7545              		.cfi_def_cfa_register 7
 7546 0006 F860     		str	r0, [r7, #12]
 7547 0008 B960     		str	r1, [r7, #8]
 7548 000a 3B60     		str	r3, [r7]
 7549 000c 1346     		mov	r3, r2
 7550 000e FB71     		strb	r3, [r7, #7]
3172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Wait until flag is set */
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 7551              		.loc 1 3173 9
 7552 0010 50E0     		b	.L400
 7553              	.L409:
3174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     /* Check for the Timeout */
3176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (Timeout != HAL_MAX_DELAY)
 7554              		.loc 1 3176 8
 7555 0012 BB6C     		ldr	r3, [r7, #72]
 7556 0014 B3F1FF3F 		cmp	r3, #-1
 7557 0018 4CD0     		beq	.L400
3177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 7558              		.loc 1 3178 10
 7559 001a BB6C     		ldr	r3, [r7, #72]
 7560 001c 002B     		cmp	r3, #0
 7561 001e 07D0     		beq	.L404
 7562              		.loc 1 3178 32 discriminator 1
 7563 0020 FFF7FEFF 		bl	HAL_GetTick
 7564 0024 0246     		mov	r2, r0
 7565              		.loc 1 3178 46 discriminator 1
 7566 0026 3B68     		ldr	r3, [r7]
 7567 0028 D31A     		subs	r3, r2, r3
 7568              		.loc 1 3178 27 discriminator 1
 7569 002a BA6C     		ldr	r2, [r7, #72]
 7570 002c 9A42     		cmp	r2, r3
 7571 002e 41D2     		bcs	.L400
 7572              	.L404:
 7573              	.LBB589:
3179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for t
3181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE
 7574              		.loc 1 3181 9 discriminator 1
 7575 0030 FB68     		ldr	r3, [r7, #12]
 7576 0032 1B68     		ldr	r3, [r3]
 7577 0034 0C33     		adds	r3, r3, #12
 7578 0036 BB62     		str	r3, [r7, #40]
 7579              	.LBB590:
 7580              	.LBB591:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7581              		.loc 2 1072 4 discriminator 1
 7582 0038 BB6A     		ldr	r3, [r7, #40]
 7583              		.syntax unified
 7584              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7585 003a 53E8003F 		ldrex r3, [r3]
 7586              	@ 0 "" 2
 7587              		.thumb
 7588              		.syntax unified
 7589 003e 7B62     		str	r3, [r7, #36]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 211


 7590              		.loc 2 1073 10 discriminator 1
 7591 0040 7B6A     		ldr	r3, [r7, #36]
 7592              	.LBE591:
 7593              	.LBE590:
 7594              		.loc 1 3181 9 discriminator 1
 7595 0042 23F4D073 		bic	r3, r3, #416
 7596 0046 FB63     		str	r3, [r7, #60]
 7597 0048 FB68     		ldr	r3, [r7, #12]
 7598 004a 1B68     		ldr	r3, [r3]
 7599 004c 0C33     		adds	r3, r3, #12
 7600 004e FA6B     		ldr	r2, [r7, #60]
 7601 0050 7A63     		str	r2, [r7, #52]
 7602 0052 3B63     		str	r3, [r7, #48]
 7603              	.LBB592:
 7604              	.LBB593:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7605              		.loc 2 1123 4 discriminator 1
 7606 0054 396B     		ldr	r1, [r7, #48]
 7607 0056 7A6B     		ldr	r2, [r7, #52]
 7608              		.syntax unified
 7609              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7610 0058 41E80023 		strex r3, r2, [r1]
 7611              	@ 0 "" 2
 7612              		.thumb
 7613              		.syntax unified
 7614 005c FB62     		str	r3, [r7, #44]
 7615              		.loc 2 1124 10 discriminator 1
 7616 005e FB6A     		ldr	r3, [r7, #44]
 7617              	.LBE593:
 7618              	.LBE592:
 7619              		.loc 1 3181 9 discriminator 1
 7620 0060 002B     		cmp	r3, #0
 7621 0062 E5D1     		bne	.L404
 7622              	.L407:
 7623              	.LBE589:
 7624              	.LBB594:
3182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7625              		.loc 1 3182 9 discriminator 1
 7626 0064 FB68     		ldr	r3, [r7, #12]
 7627 0066 1B68     		ldr	r3, [r3]
 7628 0068 1433     		adds	r3, r3, #20
 7629 006a 7B61     		str	r3, [r7, #20]
 7630              	.LBB595:
 7631              	.LBB596:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7632              		.loc 2 1072 4 discriminator 1
 7633 006c 7B69     		ldr	r3, [r7, #20]
 7634              		.syntax unified
 7635              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7636 006e 53E8003F 		ldrex r3, [r3]
 7637              	@ 0 "" 2
 7638              		.thumb
 7639              		.syntax unified
 7640 0072 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7641              		.loc 2 1073 10 discriminator 1
 7642 0074 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 212


 7643              	.LBE596:
 7644              	.LBE595:
 7645              		.loc 1 3182 9 discriminator 1
 7646 0076 23F00103 		bic	r3, r3, #1
 7647 007a BB63     		str	r3, [r7, #56]
 7648 007c FB68     		ldr	r3, [r7, #12]
 7649 007e 1B68     		ldr	r3, [r3]
 7650 0080 1433     		adds	r3, r3, #20
 7651 0082 BA6B     		ldr	r2, [r7, #56]
 7652 0084 3A62     		str	r2, [r7, #32]
 7653 0086 FB61     		str	r3, [r7, #28]
 7654              	.LBB597:
 7655              	.LBB598:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7656              		.loc 2 1123 4 discriminator 1
 7657 0088 F969     		ldr	r1, [r7, #28]
 7658 008a 3A6A     		ldr	r2, [r7, #32]
 7659              		.syntax unified
 7660              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7661 008c 41E80023 		strex r3, r2, [r1]
 7662              	@ 0 "" 2
 7663              		.thumb
 7664              		.syntax unified
 7665 0090 BB61     		str	r3, [r7, #24]
 7666              		.loc 2 1124 10 discriminator 1
 7667 0092 BB69     		ldr	r3, [r7, #24]
 7668              	.LBE598:
 7669              	.LBE597:
 7670              		.loc 1 3182 9 discriminator 1
 7671 0094 002B     		cmp	r3, #0
 7672 0096 E5D1     		bne	.L407
 7673              	.LBE594:
3183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->gState  = HAL_UART_STATE_READY;
 7674              		.loc 1 3184 24
 7675 0098 FB68     		ldr	r3, [r7, #12]
 7676 009a 2022     		movs	r2, #32
 7677 009c 83F83D20 		strb	r2, [r3, #61]
3185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxState = HAL_UART_STATE_READY;
 7678              		.loc 1 3185 24
 7679 00a0 FB68     		ldr	r3, [r7, #12]
 7680 00a2 2022     		movs	r2, #32
 7681 00a4 83F83E20 		strb	r2, [r3, #62]
3186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Process Unlocked */
3188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         __HAL_UNLOCK(huart);
 7682              		.loc 1 3188 9
 7683 00a8 FB68     		ldr	r3, [r7, #12]
 7684 00aa 0022     		movs	r2, #0
 7685 00ac 83F83C20 		strb	r2, [r3, #60]
3189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         return HAL_TIMEOUT;
 7686              		.loc 1 3190 16
 7687 00b0 0323     		movs	r3, #3
 7688 00b2 0FE0     		b	.L408
 7689              	.L400:
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 213


 7690              		.loc 1 3173 11
 7691 00b4 FB68     		ldr	r3, [r7, #12]
 7692 00b6 1B68     		ldr	r3, [r3]
 7693 00b8 1A68     		ldr	r2, [r3]
 7694 00ba BB68     		ldr	r3, [r7, #8]
 7695 00bc 1340     		ands	r3, r3, r2
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7696              		.loc 1 3173 50
 7697 00be BA68     		ldr	r2, [r7, #8]
 7698 00c0 9A42     		cmp	r2, r3
 7699 00c2 0CBF     		ite	eq
 7700 00c4 0123     		moveq	r3, #1
 7701 00c6 0023     		movne	r3, #0
 7702 00c8 DBB2     		uxtb	r3, r3
 7703 00ca 1A46     		mov	r2, r3
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7704              		.loc 1 3173 59
 7705 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
3173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
 7706              		.loc 1 3173 9
 7707 00ce 9A42     		cmp	r2, r3
 7708 00d0 9FD0     		beq	.L409
3191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7709              		.loc 1 3194 10
 7710 00d2 0023     		movs	r3, #0
 7711              	.L408:
3195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7712              		.loc 1 3195 1
 7713 00d4 1846     		mov	r0, r3
 7714 00d6 4037     		adds	r7, r7, #64
 7715              		.cfi_def_cfa_offset 8
 7716 00d8 BD46     		mov	sp, r7
 7717              		.cfi_def_cfa_register 13
 7718              		@ sp needed
 7719 00da 80BD     		pop	{r7, pc}
 7720              		.cfi_endproc
 7721              	.LFE177:
 7723              		.section	.text.UART_Start_Receive_IT,"ax",%progbits
 7724              		.align	1
 7725              		.global	UART_Start_Receive_IT
 7726              		.syntax unified
 7727              		.thumb
 7728              		.thumb_func
 7730              	UART_Start_Receive_IT:
 7731              	.LFB178:
3196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in interrupt mode.
3199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in Interrupt mode
3200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 214


3205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_IT(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7732              		.loc 1 3209 1
 7733              		.cfi_startproc
 7734              		@ args = 0, pretend = 0, frame = 16
 7735              		@ frame_needed = 1, uses_anonymous_args = 0
 7736              		@ link register save eliminated.
 7737 0000 80B4     		push	{r7}
 7738              		.cfi_def_cfa_offset 4
 7739              		.cfi_offset 7, -4
 7740 0002 85B0     		sub	sp, sp, #20
 7741              		.cfi_def_cfa_offset 24
 7742 0004 00AF     		add	r7, sp, #0
 7743              		.cfi_def_cfa_register 7
 7744 0006 F860     		str	r0, [r7, #12]
 7745 0008 B960     		str	r1, [r7, #8]
 7746 000a 1346     		mov	r3, r2
 7747 000c FB80     		strh	r3, [r7, #6]	@ movhi
3210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 7748              		.loc 1 3210 21
 7749 000e FB68     		ldr	r3, [r7, #12]
 7750 0010 BA68     		ldr	r2, [r7, #8]
 7751 0012 9A62     		str	r2, [r3, #40]
3211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 7752              		.loc 1 3211 21
 7753 0014 FB68     		ldr	r3, [r7, #12]
 7754 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 7755 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = Size;
 7756              		.loc 1 3212 22
 7757 001a FB68     		ldr	r3, [r7, #12]
 7758 001c FA88     		ldrh	r2, [r7, #6]	@ movhi
 7759 001e DA85     		strh	r2, [r3, #46]	@ movhi
3213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7760              		.loc 1 3214 20
 7761 0020 FB68     		ldr	r3, [r7, #12]
 7762 0022 0022     		movs	r2, #0
 7763 0024 1A64     		str	r2, [r3, #64]
3215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 7764              		.loc 1 3215 18
 7765 0026 FB68     		ldr	r3, [r7, #12]
 7766 0028 2222     		movs	r2, #34
 7767 002a 83F83E20 		strb	r2, [r3, #62]
3216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
3218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7768              		.loc 1 3218 3
 7769 002e FB68     		ldr	r3, [r7, #12]
 7770 0030 0022     		movs	r2, #0
 7771 0032 83F83C20 		strb	r2, [r3, #60]
3219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_PE);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 215


 7772              		.loc 1 3221 3
 7773 0036 FB68     		ldr	r3, [r7, #12]
 7774 0038 1B68     		ldr	r3, [r3]
 7775 003a DA68     		ldr	r2, [r3, #12]
 7776 003c FB68     		ldr	r3, [r7, #12]
 7777 003e 1B68     		ldr	r3, [r3]
 7778 0040 42F48072 		orr	r2, r2, #256
 7779 0044 DA60     		str	r2, [r3, #12]
3222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_ERR);
 7780              		.loc 1 3224 3
 7781 0046 FB68     		ldr	r3, [r7, #12]
 7782 0048 1B68     		ldr	r3, [r3]
 7783 004a 5A69     		ldr	r2, [r3, #20]
 7784 004c FB68     		ldr	r3, [r7, #12]
 7785 004e 1B68     		ldr	r3, [r3]
 7786 0050 42F00102 		orr	r2, r2, #1
 7787 0054 5A61     		str	r2, [r3, #20]
3225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Data Register not empty Interrupt */
3227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_ENABLE_IT(huart, UART_IT_RXNE);
 7788              		.loc 1 3227 3
 7789 0056 FB68     		ldr	r3, [r7, #12]
 7790 0058 1B68     		ldr	r3, [r3]
 7791 005a DA68     		ldr	r2, [r3, #12]
 7792 005c FB68     		ldr	r3, [r7, #12]
 7793 005e 1B68     		ldr	r3, [r3]
 7794 0060 42F02002 		orr	r2, r2, #32
 7795 0064 DA60     		str	r2, [r3, #12]
3228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 7796              		.loc 1 3229 10
 7797 0066 0023     		movs	r3, #0
3230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 7798              		.loc 1 3230 1
 7799 0068 1846     		mov	r0, r3
 7800 006a 1437     		adds	r7, r7, #20
 7801              		.cfi_def_cfa_offset 4
 7802 006c BD46     		mov	sp, r7
 7803              		.cfi_def_cfa_register 13
 7804              		@ sp needed
 7805 006e 5DF8047B 		ldr	r7, [sp], #4
 7806              		.cfi_restore 7
 7807              		.cfi_def_cfa_offset 0
 7808 0072 7047     		bx	lr
 7809              		.cfi_endproc
 7810              	.LFE178:
 7812              		.section	.text.UART_Start_Receive_DMA,"ax",%progbits
 7813              		.align	1
 7814              		.global	UART_Start_Receive_DMA
 7815              		.syntax unified
 7816              		.thumb
 7817              		.thumb_func
 7819              	UART_Start_Receive_DMA:
 7820              	.LFB179:
3231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 216


3232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Start Receive operation in DMA mode.
3234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   This function could be called by all HAL UART API providing reception in DMA mode.
3235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When calling this function, parameters validity is considered as already checked,
3236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         i.e. Rx State, buffer address, ...
3237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         UART Handle is assumed as Locked.
3238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  pData Pointer to data buffer (u8 or u16 data elements).
3240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  Size  Amount of data elements (u8 or u16) to be received.
3241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** HAL_StatusTypeDef UART_Start_Receive_DMA(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size)
3244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 7821              		.loc 1 3244 1
 7822              		.cfi_startproc
 7823              		@ args = 0, pretend = 0, frame = 96
 7824              		@ frame_needed = 1, uses_anonymous_args = 0
 7825 0000 80B5     		push	{r7, lr}
 7826              		.cfi_def_cfa_offset 8
 7827              		.cfi_offset 7, -8
 7828              		.cfi_offset 14, -4
 7829 0002 98B0     		sub	sp, sp, #96
 7830              		.cfi_def_cfa_offset 104
 7831 0004 00AF     		add	r7, sp, #0
 7832              		.cfi_def_cfa_register 7
 7833 0006 F860     		str	r0, [r7, #12]
 7834 0008 B960     		str	r1, [r7, #8]
 7835 000a 1346     		mov	r3, r2
 7836 000c FB80     		strh	r3, [r7, #6]	@ movhi
3245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t *tmp;
3246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->pRxBuffPtr = pData;
 7837              		.loc 1 3247 21
 7838 000e BA68     		ldr	r2, [r7, #8]
 7839 0010 FB68     		ldr	r3, [r7, #12]
 7840 0012 9A62     		str	r2, [r3, #40]
3248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferSize = Size;
 7841              		.loc 1 3248 21
 7842 0014 FB68     		ldr	r3, [r7, #12]
 7843 0016 FA88     		ldrh	r2, [r7, #6]	@ movhi
 7844 0018 9A85     		strh	r2, [r3, #44]	@ movhi
3249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 7845              		.loc 1 3250 20
 7846 001a FB68     		ldr	r3, [r7, #12]
 7847 001c 0022     		movs	r2, #0
 7848 001e 1A64     		str	r2, [r3, #64]
3251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_BUSY_RX;
 7849              		.loc 1 3251 18
 7850 0020 FB68     		ldr	r3, [r7, #12]
 7851 0022 2222     		movs	r2, #34
 7852 0024 83F83E20 		strb	r2, [r3, #62]
3252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA transfer complete callback */
3254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferCpltCallback = UART_DMAReceiveCplt;
 7853              		.loc 1 3254 8
 7854 0028 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 217


 7855 002a 9B6B     		ldr	r3, [r3, #56]
 7856              		.loc 1 3254 35
 7857 002c 3E4A     		ldr	r2, .L423
 7858 002e DA63     		str	r2, [r3, #60]
3255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the UART DMA Half transfer complete callback */
3257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferHalfCpltCallback = UART_DMARxHalfCplt;
 7859              		.loc 1 3257 8
 7860 0030 FB68     		ldr	r3, [r7, #12]
 7861 0032 9B6B     		ldr	r3, [r3, #56]
 7862              		.loc 1 3257 39
 7863 0034 3D4A     		ldr	r2, .L423+4
 7864 0036 1A64     		str	r2, [r3, #64]
3258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA error callback */
3260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferErrorCallback = UART_DMAError;
 7865              		.loc 1 3260 8
 7866 0038 FB68     		ldr	r3, [r7, #12]
 7867 003a 9B6B     		ldr	r3, [r3, #56]
 7868              		.loc 1 3260 36
 7869 003c 3C4A     		ldr	r2, .L423+8
 7870 003e DA64     		str	r2, [r3, #76]
3261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Set the DMA abort callback */
3263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 7871              		.loc 1 3263 8
 7872 0040 FB68     		ldr	r3, [r7, #12]
 7873 0042 9B6B     		ldr	r3, [r3, #56]
 7874              		.loc 1 3263 36
 7875 0044 0022     		movs	r2, #0
 7876 0046 1A65     		str	r2, [r3, #80]
3264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA stream */
3266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmp = (uint32_t *)&pData;
 7877              		.loc 1 3266 7
 7878 0048 07F10803 		add	r3, r7, #8
 7879 004c FB65     		str	r3, [r7, #92]
3267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_DMA_Start_IT(huart->hdmarx, (uint32_t)&huart->Instance->DR, *(uint32_t *)tmp, Size);
 7880              		.loc 1 3267 3
 7881 004e FB68     		ldr	r3, [r7, #12]
 7882 0050 986B     		ldr	r0, [r3, #56]
 7883              		.loc 1 3267 51
 7884 0052 FB68     		ldr	r3, [r7, #12]
 7885 0054 1B68     		ldr	r3, [r3]
 7886              		.loc 1 3267 45
 7887 0056 0433     		adds	r3, r3, #4
 7888              		.loc 1 3267 3
 7889 0058 1946     		mov	r1, r3
 7890 005a FB6D     		ldr	r3, [r7, #92]
 7891 005c 1A68     		ldr	r2, [r3]
 7892 005e FB88     		ldrh	r3, [r7, #6]
 7893 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7894              	.LBB599:
3268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Clear the Overrun flag just before enabling the DMA Rx request: can be mandatory for the secon
3270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_CLEAR_OREFLAG(huart);
 7895              		.loc 1 3270 3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 218


 7896 0064 0023     		movs	r3, #0
 7897 0066 3B61     		str	r3, [r7, #16]
 7898 0068 FB68     		ldr	r3, [r7, #12]
 7899 006a 1B68     		ldr	r3, [r3]
 7900 006c 1B68     		ldr	r3, [r3]
 7901 006e 3B61     		str	r3, [r7, #16]
 7902 0070 FB68     		ldr	r3, [r7, #12]
 7903 0072 1B68     		ldr	r3, [r3]
 7904 0074 5B68     		ldr	r3, [r3, #4]
 7905 0076 3B61     		str	r3, [r7, #16]
 7906 0078 3B69     		ldr	r3, [r7, #16]
 7907              	.LBE599:
3271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Process Unlocked */
3273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UNLOCK(huart);
 7908              		.loc 1 3273 3
 7909 007a FB68     		ldr	r3, [r7, #12]
 7910 007c 0022     		movs	r2, #0
 7911 007e 83F83C20 		strb	r2, [r3, #60]
 7912              	.L415:
 7913              	.LBB600:
3274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Parity Error Interrupt */
3276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR1, USART_CR1_PEIE);
 7914              		.loc 1 3276 3 discriminator 1
 7915 0082 FB68     		ldr	r3, [r7, #12]
 7916 0084 1B68     		ldr	r3, [r3]
 7917 0086 0C33     		adds	r3, r3, #12
 7918 0088 3B64     		str	r3, [r7, #64]
 7919              	.LBB601:
 7920              	.LBB602:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7921              		.loc 2 1072 4 discriminator 1
 7922 008a 3B6C     		ldr	r3, [r7, #64]
 7923              		.syntax unified
 7924              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7925 008c 53E8003F 		ldrex r3, [r3]
 7926              	@ 0 "" 2
 7927              		.thumb
 7928              		.syntax unified
 7929 0090 FB63     		str	r3, [r7, #60]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7930              		.loc 2 1073 10 discriminator 1
 7931 0092 FB6B     		ldr	r3, [r7, #60]
 7932              	.LBE602:
 7933              	.LBE601:
 7934              		.loc 1 3276 3 discriminator 1
 7935 0094 43F48073 		orr	r3, r3, #256
 7936 0098 BB65     		str	r3, [r7, #88]
 7937 009a FB68     		ldr	r3, [r7, #12]
 7938 009c 1B68     		ldr	r3, [r3]
 7939 009e 0C33     		adds	r3, r3, #12
 7940 00a0 BA6D     		ldr	r2, [r7, #88]
 7941 00a2 FA64     		str	r2, [r7, #76]
 7942 00a4 BB64     		str	r3, [r7, #72]
 7943              	.LBB603:
 7944              	.LBB604:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 219


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7945              		.loc 2 1123 4 discriminator 1
 7946 00a6 B96C     		ldr	r1, [r7, #72]
 7947 00a8 FA6C     		ldr	r2, [r7, #76]
 7948              		.syntax unified
 7949              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7950 00aa 41E80023 		strex r3, r2, [r1]
 7951              	@ 0 "" 2
 7952              		.thumb
 7953              		.syntax unified
 7954 00ae 7B64     		str	r3, [r7, #68]
 7955              		.loc 2 1124 10 discriminator 1
 7956 00b0 7B6C     		ldr	r3, [r7, #68]
 7957              	.LBE604:
 7958              	.LBE603:
 7959              		.loc 1 3276 3 discriminator 1
 7960 00b2 002B     		cmp	r3, #0
 7961 00b4 E5D1     		bne	.L415
 7962              	.L418:
 7963              	.LBE600:
 7964              	.LBB605:
3277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_EIE);
 7965              		.loc 1 3279 3 discriminator 1
 7966 00b6 FB68     		ldr	r3, [r7, #12]
 7967 00b8 1B68     		ldr	r3, [r3]
 7968 00ba 1433     		adds	r3, r3, #20
 7969 00bc FB62     		str	r3, [r7, #44]
 7970              	.LBB606:
 7971              	.LBB607:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7972              		.loc 2 1072 4 discriminator 1
 7973 00be FB6A     		ldr	r3, [r7, #44]
 7974              		.syntax unified
 7975              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 7976 00c0 53E8003F 		ldrex r3, [r3]
 7977              	@ 0 "" 2
 7978              		.thumb
 7979              		.syntax unified
 7980 00c4 BB62     		str	r3, [r7, #40]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 7981              		.loc 2 1073 10 discriminator 1
 7982 00c6 BB6A     		ldr	r3, [r7, #40]
 7983              	.LBE607:
 7984              	.LBE606:
 7985              		.loc 1 3279 3 discriminator 1
 7986 00c8 43F00103 		orr	r3, r3, #1
 7987 00cc 7B65     		str	r3, [r7, #84]
 7988 00ce FB68     		ldr	r3, [r7, #12]
 7989 00d0 1B68     		ldr	r3, [r3]
 7990 00d2 1433     		adds	r3, r3, #20
 7991 00d4 7A6D     		ldr	r2, [r7, #84]
 7992 00d6 BA63     		str	r2, [r7, #56]
 7993 00d8 7B63     		str	r3, [r7, #52]
 7994              	.LBB608:
 7995              	.LBB609:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 220


1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 7996              		.loc 2 1123 4 discriminator 1
 7997 00da 796B     		ldr	r1, [r7, #52]
 7998 00dc BA6B     		ldr	r2, [r7, #56]
 7999              		.syntax unified
 8000              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8001 00de 41E80023 		strex r3, r2, [r1]
 8002              	@ 0 "" 2
 8003              		.thumb
 8004              		.syntax unified
 8005 00e2 3B63     		str	r3, [r7, #48]
 8006              		.loc 2 1124 10 discriminator 1
 8007 00e4 3B6B     		ldr	r3, [r7, #48]
 8008              	.LBE609:
 8009              	.LBE608:
 8010              		.loc 1 3279 3 discriminator 1
 8011 00e6 002B     		cmp	r3, #0
 8012 00e8 E5D1     		bne	.L418
 8013              	.L421:
 8014              	.LBE605:
 8015              	.LBB610:
3280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Enable the DMA transfer for the receiver request by setting the DMAR bit
3282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   in the UART CR3 register */
3283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_SET_BIT(huart->Instance->CR3, USART_CR3_DMAR);
 8016              		.loc 1 3283 3 discriminator 1
 8017 00ea FB68     		ldr	r3, [r7, #12]
 8018 00ec 1B68     		ldr	r3, [r3]
 8019 00ee 1433     		adds	r3, r3, #20
 8020 00f0 BB61     		str	r3, [r7, #24]
 8021              	.LBB611:
 8022              	.LBB612:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8023              		.loc 2 1072 4 discriminator 1
 8024 00f2 BB69     		ldr	r3, [r7, #24]
 8025              		.syntax unified
 8026              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8027 00f4 53E8003F 		ldrex r3, [r3]
 8028              	@ 0 "" 2
 8029              		.thumb
 8030              		.syntax unified
 8031 00f8 7B61     		str	r3, [r7, #20]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8032              		.loc 2 1073 10 discriminator 1
 8033 00fa 7B69     		ldr	r3, [r7, #20]
 8034              	.LBE612:
 8035              	.LBE611:
 8036              		.loc 1 3283 3 discriminator 1
 8037 00fc 43F04003 		orr	r3, r3, #64
 8038 0100 3B65     		str	r3, [r7, #80]
 8039 0102 FB68     		ldr	r3, [r7, #12]
 8040 0104 1B68     		ldr	r3, [r3]
 8041 0106 1433     		adds	r3, r3, #20
 8042 0108 3A6D     		ldr	r2, [r7, #80]
 8043 010a 7A62     		str	r2, [r7, #36]
 8044 010c 3B62     		str	r3, [r7, #32]
 8045              	.LBB613:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 221


 8046              	.LBB614:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8047              		.loc 2 1123 4 discriminator 1
 8048 010e 396A     		ldr	r1, [r7, #32]
 8049 0110 7A6A     		ldr	r2, [r7, #36]
 8050              		.syntax unified
 8051              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8052 0112 41E80023 		strex r3, r2, [r1]
 8053              	@ 0 "" 2
 8054              		.thumb
 8055              		.syntax unified
 8056 0116 FB61     		str	r3, [r7, #28]
 8057              		.loc 2 1124 10 discriminator 1
 8058 0118 FB69     		ldr	r3, [r7, #28]
 8059              	.LBE614:
 8060              	.LBE613:
 8061              		.loc 1 3283 3 discriminator 1
 8062 011a 002B     		cmp	r3, #0
 8063 011c E5D1     		bne	.L421
 8064              	.LBE610:
3284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8065              		.loc 1 3285 10
 8066 011e 0023     		movs	r3, #0
3286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8067              		.loc 1 3286 1
 8068 0120 1846     		mov	r0, r3
 8069 0122 6037     		adds	r7, r7, #96
 8070              		.cfi_def_cfa_offset 8
 8071 0124 BD46     		mov	sp, r7
 8072              		.cfi_def_cfa_register 13
 8073              		@ sp needed
 8074 0126 80BD     		pop	{r7, pc}
 8075              	.L424:
 8076              		.align	2
 8077              	.L423:
 8078 0128 00000000 		.word	UART_DMAReceiveCplt
 8079 012c 00000000 		.word	UART_DMARxHalfCplt
 8080 0130 00000000 		.word	UART_DMAError
 8081              		.cfi_endproc
 8082              	.LFE179:
 8084              		.section	.text.UART_EndTxTransfer,"ax",%progbits
 8085              		.align	1
 8086              		.syntax unified
 8087              		.thumb
 8088              		.thumb_func
 8090              	UART_EndTxTransfer:
 8091              	.LFB180:
3287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Tx transfer on UART peripheral (following error detection or Transmit compl
3290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndTxTransfer(UART_HandleTypeDef *huart)
3294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8092              		.loc 1 3294 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 222


 8093              		.cfi_startproc
 8094              		@ args = 0, pretend = 0, frame = 32
 8095              		@ frame_needed = 1, uses_anonymous_args = 0
 8096              		@ link register save eliminated.
 8097 0000 80B4     		push	{r7}
 8098              		.cfi_def_cfa_offset 4
 8099              		.cfi_offset 7, -4
 8100 0002 89B0     		sub	sp, sp, #36
 8101              		.cfi_def_cfa_offset 40
 8102 0004 00AF     		add	r7, sp, #0
 8103              		.cfi_def_cfa_register 7
 8104 0006 7860     		str	r0, [r7, #4]
 8105              	.L428:
 8106              	.LBB615:
3295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable TXEIE and TCIE interrupts */
3296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_TXEIE | USART_CR1_TCIE));
 8107              		.loc 1 3296 3 discriminator 1
 8108 0008 7B68     		ldr	r3, [r7, #4]
 8109 000a 1B68     		ldr	r3, [r3]
 8110 000c 0C33     		adds	r3, r3, #12
 8111 000e FB60     		str	r3, [r7, #12]
 8112              	.LBB616:
 8113              	.LBB617:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8114              		.loc 2 1072 4 discriminator 1
 8115 0010 FB68     		ldr	r3, [r7, #12]
 8116              		.syntax unified
 8117              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8118 0012 53E8003F 		ldrex r3, [r3]
 8119              	@ 0 "" 2
 8120              		.thumb
 8121              		.syntax unified
 8122 0016 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8123              		.loc 2 1073 10 discriminator 1
 8124 0018 BB68     		ldr	r3, [r7, #8]
 8125              	.LBE617:
 8126              	.LBE616:
 8127              		.loc 1 3296 3 discriminator 1
 8128 001a 23F0C003 		bic	r3, r3, #192
 8129 001e FB61     		str	r3, [r7, #28]
 8130 0020 7B68     		ldr	r3, [r7, #4]
 8131 0022 1B68     		ldr	r3, [r3]
 8132 0024 0C33     		adds	r3, r3, #12
 8133 0026 FA69     		ldr	r2, [r7, #28]
 8134 0028 BA61     		str	r2, [r7, #24]
 8135 002a 7B61     		str	r3, [r7, #20]
 8136              	.LBB618:
 8137              	.LBB619:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8138              		.loc 2 1123 4 discriminator 1
 8139 002c 7969     		ldr	r1, [r7, #20]
 8140 002e BA69     		ldr	r2, [r7, #24]
 8141              		.syntax unified
 8142              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8143 0030 41E80023 		strex r3, r2, [r1]
 8144              	@ 0 "" 2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 223


 8145              		.thumb
 8146              		.syntax unified
 8147 0034 3B61     		str	r3, [r7, #16]
 8148              		.loc 2 1124 10 discriminator 1
 8149 0036 3B69     		ldr	r3, [r7, #16]
 8150              	.LBE619:
 8151              	.LBE618:
 8152              		.loc 1 3296 3 discriminator 1
 8153 0038 002B     		cmp	r3, #0
 8154 003a E5D1     		bne	.L428
 8155              	.LBE615:
3297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Tx process, restore huart->gState to Ready */
3299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8156              		.loc 1 3299 17
 8157 003c 7B68     		ldr	r3, [r7, #4]
 8158 003e 2022     		movs	r2, #32
 8159 0040 83F83D20 		strb	r2, [r3, #61]
3300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8160              		.loc 1 3300 1
 8161 0044 00BF     		nop
 8162 0046 2437     		adds	r7, r7, #36
 8163              		.cfi_def_cfa_offset 4
 8164 0048 BD46     		mov	sp, r7
 8165              		.cfi_def_cfa_register 13
 8166              		@ sp needed
 8167 004a 5DF8047B 		ldr	r7, [sp], #4
 8168              		.cfi_restore 7
 8169              		.cfi_def_cfa_offset 0
 8170 004e 7047     		bx	lr
 8171              		.cfi_endproc
 8172              	.LFE180:
 8174              		.section	.text.UART_EndRxTransfer,"ax",%progbits
 8175              		.align	1
 8176              		.syntax unified
 8177              		.thumb
 8178              		.thumb_func
 8180              	UART_EndRxTransfer:
 8181              	.LFB181:
3301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  End ongoing Rx transfer on UART peripheral (following error detection or Reception comp
3304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart UART handle.
3305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_EndRxTransfer(UART_HandleTypeDef *huart)
3308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8182              		.loc 1 3308 1
 8183              		.cfi_startproc
 8184              		@ args = 0, pretend = 0, frame = 80
 8185              		@ frame_needed = 1, uses_anonymous_args = 0
 8186              		@ link register save eliminated.
 8187 0000 80B4     		push	{r7}
 8188              		.cfi_def_cfa_offset 4
 8189              		.cfi_offset 7, -4
 8190 0002 95B0     		sub	sp, sp, #84
 8191              		.cfi_def_cfa_offset 88
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 224


 8192 0004 00AF     		add	r7, sp, #0
 8193              		.cfi_def_cfa_register 7
 8194 0006 7860     		str	r0, [r7, #4]
 8195              	.L432:
 8196              	.LBB620:
3309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts */
3310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE));
 8197              		.loc 1 3310 3 discriminator 1
 8198 0008 7B68     		ldr	r3, [r7, #4]
 8199 000a 1B68     		ldr	r3, [r3]
 8200 000c 0C33     		adds	r3, r3, #12
 8201 000e 7B63     		str	r3, [r7, #52]
 8202              	.LBB621:
 8203              	.LBB622:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8204              		.loc 2 1072 4 discriminator 1
 8205 0010 7B6B     		ldr	r3, [r7, #52]
 8206              		.syntax unified
 8207              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8208 0012 53E8003F 		ldrex r3, [r3]
 8209              	@ 0 "" 2
 8210              		.thumb
 8211              		.syntax unified
 8212 0016 3B63     		str	r3, [r7, #48]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8213              		.loc 2 1073 10 discriminator 1
 8214 0018 3B6B     		ldr	r3, [r7, #48]
 8215              	.LBE622:
 8216              	.LBE621:
 8217              		.loc 1 3310 3 discriminator 1
 8218 001a 23F49073 		bic	r3, r3, #288
 8219 001e FB64     		str	r3, [r7, #76]
 8220 0020 7B68     		ldr	r3, [r7, #4]
 8221 0022 1B68     		ldr	r3, [r3]
 8222 0024 0C33     		adds	r3, r3, #12
 8223 0026 FA6C     		ldr	r2, [r7, #76]
 8224 0028 3A64     		str	r2, [r7, #64]
 8225 002a FB63     		str	r3, [r7, #60]
 8226              	.LBB623:
 8227              	.LBB624:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8228              		.loc 2 1123 4 discriminator 1
 8229 002c F96B     		ldr	r1, [r7, #60]
 8230 002e 3A6C     		ldr	r2, [r7, #64]
 8231              		.syntax unified
 8232              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8233 0030 41E80023 		strex r3, r2, [r1]
 8234              	@ 0 "" 2
 8235              		.thumb
 8236              		.syntax unified
 8237 0034 BB63     		str	r3, [r7, #56]
 8238              		.loc 2 1124 10 discriminator 1
 8239 0036 BB6B     		ldr	r3, [r7, #56]
 8240              	.LBE624:
 8241              	.LBE623:
 8242              		.loc 1 3310 3 discriminator 1
 8243 0038 002B     		cmp	r3, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 225


 8244 003a E5D1     		bne	.L432
 8245              	.L435:
 8246              	.LBE620:
 8247              	.LBB625:
3311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8248              		.loc 1 3311 3 discriminator 1
 8249 003c 7B68     		ldr	r3, [r7, #4]
 8250 003e 1B68     		ldr	r3, [r3]
 8251 0040 1433     		adds	r3, r3, #20
 8252 0042 3B62     		str	r3, [r7, #32]
 8253              	.LBB626:
 8254              	.LBB627:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8255              		.loc 2 1072 4 discriminator 1
 8256 0044 3B6A     		ldr	r3, [r7, #32]
 8257              		.syntax unified
 8258              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8259 0046 53E8003F 		ldrex r3, [r3]
 8260              	@ 0 "" 2
 8261              		.thumb
 8262              		.syntax unified
 8263 004a FB61     		str	r3, [r7, #28]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8264              		.loc 2 1073 10 discriminator 1
 8265 004c FB69     		ldr	r3, [r7, #28]
 8266              	.LBE627:
 8267              	.LBE626:
 8268              		.loc 1 3311 3 discriminator 1
 8269 004e 23F00103 		bic	r3, r3, #1
 8270 0052 BB64     		str	r3, [r7, #72]
 8271 0054 7B68     		ldr	r3, [r7, #4]
 8272 0056 1B68     		ldr	r3, [r3]
 8273 0058 1433     		adds	r3, r3, #20
 8274 005a BA6C     		ldr	r2, [r7, #72]
 8275 005c FA62     		str	r2, [r7, #44]
 8276 005e BB62     		str	r3, [r7, #40]
 8277              	.LBB628:
 8278              	.LBB629:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8279              		.loc 2 1123 4 discriminator 1
 8280 0060 B96A     		ldr	r1, [r7, #40]
 8281 0062 FA6A     		ldr	r2, [r7, #44]
 8282              		.syntax unified
 8283              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8284 0064 41E80023 		strex r3, r2, [r1]
 8285              	@ 0 "" 2
 8286              		.thumb
 8287              		.syntax unified
 8288 0068 7B62     		str	r3, [r7, #36]
 8289              		.loc 2 1124 10 discriminator 1
 8290 006a 7B6A     		ldr	r3, [r7, #36]
 8291              	.LBE629:
 8292              	.LBE628:
 8293              		.loc 1 3311 3 discriminator 1
 8294 006c 002B     		cmp	r3, #0
 8295 006e E5D1     		bne	.L435
 8296              	.LBE625:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 226


3312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* In case of reception waiting for IDLE event, disable also the IDLE IE interrupt source */
3314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 8297              		.loc 1 3314 12
 8298 0070 7B68     		ldr	r3, [r7, #4]
 8299 0072 1B6B     		ldr	r3, [r3, #48]
 8300              		.loc 1 3314 6
 8301 0074 012B     		cmp	r3, #1
 8302 0076 19D1     		bne	.L436
 8303              	.L439:
 8304              	.LBB630:
3315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 8305              		.loc 1 3316 5 discriminator 1
 8306 0078 7B68     		ldr	r3, [r7, #4]
 8307 007a 1B68     		ldr	r3, [r3]
 8308 007c 0C33     		adds	r3, r3, #12
 8309 007e FB60     		str	r3, [r7, #12]
 8310              	.LBB631:
 8311              	.LBB632:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8312              		.loc 2 1072 4 discriminator 1
 8313 0080 FB68     		ldr	r3, [r7, #12]
 8314              		.syntax unified
 8315              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8316 0082 53E8003F 		ldrex r3, [r3]
 8317              	@ 0 "" 2
 8318              		.thumb
 8319              		.syntax unified
 8320 0086 BB60     		str	r3, [r7, #8]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 8321              		.loc 2 1073 10 discriminator 1
 8322 0088 BB68     		ldr	r3, [r7, #8]
 8323              	.LBE632:
 8324              	.LBE631:
 8325              		.loc 1 3316 5 discriminator 1
 8326 008a 23F01003 		bic	r3, r3, #16
 8327 008e 7B64     		str	r3, [r7, #68]
 8328 0090 7B68     		ldr	r3, [r7, #4]
 8329 0092 1B68     		ldr	r3, [r3]
 8330 0094 0C33     		adds	r3, r3, #12
 8331 0096 7A6C     		ldr	r2, [r7, #68]
 8332 0098 BA61     		str	r2, [r7, #24]
 8333 009a 7B61     		str	r3, [r7, #20]
 8334              	.LBB633:
 8335              	.LBB634:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 8336              		.loc 2 1123 4 discriminator 1
 8337 009c 7969     		ldr	r1, [r7, #20]
 8338 009e BA69     		ldr	r2, [r7, #24]
 8339              		.syntax unified
 8340              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 8341 00a0 41E80023 		strex r3, r2, [r1]
 8342              	@ 0 "" 2
 8343              		.thumb
 8344              		.syntax unified
 8345 00a4 3B61     		str	r3, [r7, #16]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 227


 8346              		.loc 2 1124 10 discriminator 1
 8347 00a6 3B69     		ldr	r3, [r7, #16]
 8348              	.LBE634:
 8349              	.LBE633:
 8350              		.loc 1 3316 5 discriminator 1
 8351 00a8 002B     		cmp	r3, #0
 8352 00aa E5D1     		bne	.L439
 8353              	.L436:
 8354              	.LBE630:
3317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* At end of Rx process, restore huart->RxState to Ready */
3320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8355              		.loc 1 3320 18
 8356 00ac 7B68     		ldr	r3, [r7, #4]
 8357 00ae 2022     		movs	r2, #32
 8358 00b0 83F83E20 		strb	r2, [r3, #62]
3321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8359              		.loc 1 3321 24
 8360 00b4 7B68     		ldr	r3, [r7, #4]
 8361 00b6 0022     		movs	r2, #0
 8362 00b8 1A63     		str	r2, [r3, #48]
3322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8363              		.loc 1 3322 1
 8364 00ba 00BF     		nop
 8365 00bc 5437     		adds	r7, r7, #84
 8366              		.cfi_def_cfa_offset 4
 8367 00be BD46     		mov	sp, r7
 8368              		.cfi_def_cfa_register 13
 8369              		@ sp needed
 8370 00c0 5DF8047B 		ldr	r7, [sp], #4
 8371              		.cfi_restore 7
 8372              		.cfi_def_cfa_offset 0
 8373 00c4 7047     		bx	lr
 8374              		.cfi_endproc
 8375              	.LFE181:
 8377              		.section	.text.UART_DMAAbortOnError,"ax",%progbits
 8378              		.align	1
 8379              		.syntax unified
 8380              		.thumb
 8381              		.thumb_func
 8383              	UART_DMAAbortOnError:
 8384              	.LFB182:
3323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART communication abort callback, when initiated by HAL services on Error
3326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Abort procedure following error occurrence).
3327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMAAbortOnError(DMA_HandleTypeDef *hdma)
3332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8385              		.loc 1 3332 1
 8386              		.cfi_startproc
 8387              		@ args = 0, pretend = 0, frame = 16
 8388              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 228


 8389 0000 80B5     		push	{r7, lr}
 8390              		.cfi_def_cfa_offset 8
 8391              		.cfi_offset 7, -8
 8392              		.cfi_offset 14, -4
 8393 0002 84B0     		sub	sp, sp, #16
 8394              		.cfi_def_cfa_offset 24
 8395 0004 00AF     		add	r7, sp, #0
 8396              		.cfi_def_cfa_register 7
 8397 0006 7860     		str	r0, [r7, #4]
3333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8398              		.loc 1 3333 23
 8399 0008 7B68     		ldr	r3, [r7, #4]
 8400 000a 9B6B     		ldr	r3, [r3, #56]
 8401 000c FB60     		str	r3, [r7, #12]
3334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8402              		.loc 1 3334 22
 8403 000e FB68     		ldr	r3, [r7, #12]
 8404 0010 0022     		movs	r2, #0
 8405 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8406              		.loc 1 3335 22
 8407 0014 FB68     		ldr	r3, [r7, #12]
 8408 0016 0022     		movs	r2, #0
 8409 0018 DA84     		strh	r2, [r3, #38]	@ movhi
3336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered error callback*/
3339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCallback(huart);
3340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak error callback*/
3342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_ErrorCallback(huart);
 8410              		.loc 1 3342 3
 8411 001a F868     		ldr	r0, [r7, #12]
 8412 001c FFF7FEFF 		bl	HAL_UART_ErrorCallback
3343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8413              		.loc 1 3344 1
 8414 0020 00BF     		nop
 8415 0022 1037     		adds	r7, r7, #16
 8416              		.cfi_def_cfa_offset 8
 8417 0024 BD46     		mov	sp, r7
 8418              		.cfi_def_cfa_register 13
 8419              		@ sp needed
 8420 0026 80BD     		pop	{r7, pc}
 8421              		.cfi_endproc
 8422              	.LFE182:
 8424              		.section	.text.UART_DMATxAbortCallback,"ax",%progbits
 8425              		.align	1
 8426              		.syntax unified
 8427              		.thumb
 8428              		.thumb_func
 8430              	UART_DMATxAbortCallback:
 8431              	.LFB183:
3345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user
3348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Tx Abort procedure following user abort request).
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 229


3349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Rx DMA Handle.
3351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxAbortCallback(DMA_HandleTypeDef *hdma)
3356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8432              		.loc 1 3356 1
 8433              		.cfi_startproc
 8434              		@ args = 0, pretend = 0, frame = 16
 8435              		@ frame_needed = 1, uses_anonymous_args = 0
 8436 0000 80B5     		push	{r7, lr}
 8437              		.cfi_def_cfa_offset 8
 8438              		.cfi_offset 7, -8
 8439              		.cfi_offset 14, -4
 8440 0002 84B0     		sub	sp, sp, #16
 8441              		.cfi_def_cfa_offset 24
 8442 0004 00AF     		add	r7, sp, #0
 8443              		.cfi_def_cfa_register 7
 8444 0006 7860     		str	r0, [r7, #4]
3357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8445              		.loc 1 3357 23
 8446 0008 7B68     		ldr	r3, [r7, #4]
 8447 000a 9B6B     		ldr	r3, [r3, #56]
 8448 000c FB60     		str	r3, [r7, #12]
3358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmatx->XferAbortCallback = NULL;
 8449              		.loc 1 3359 8
 8450 000e FB68     		ldr	r3, [r7, #12]
 8451 0010 5B6B     		ldr	r3, [r3, #52]
 8452              		.loc 1 3359 36
 8453 0012 0022     		movs	r2, #0
 8454 0014 1A65     		str	r2, [r3, #80]
3360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmarx != NULL)
 8455              		.loc 1 3362 12
 8456 0016 FB68     		ldr	r3, [r7, #12]
 8457 0018 9B6B     		ldr	r3, [r3, #56]
 8458              		.loc 1 3362 6
 8459 001a 002B     		cmp	r3, #0
 8460 001c 04D0     		beq	.L442
3363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmarx->XferAbortCallback != NULL)
 8461              		.loc 1 3364 14
 8462 001e FB68     		ldr	r3, [r7, #12]
 8463 0020 9B6B     		ldr	r3, [r3, #56]
 8464              		.loc 1 3364 22
 8465 0022 1B6D     		ldr	r3, [r3, #80]
 8466              		.loc 1 3364 8
 8467 0024 002B     		cmp	r3, #0
 8468 0026 17D1     		bne	.L444
 8469              	.L442:
3365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 230


3368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8470              		.loc 1 3371 22
 8471 0028 FB68     		ldr	r3, [r7, #12]
 8472 002a 0022     		movs	r2, #0
 8473 002c DA84     		strh	r2, [r3, #38]	@ movhi
3372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8474              		.loc 1 3372 22
 8475 002e FB68     		ldr	r3, [r7, #12]
 8476 0030 0022     		movs	r2, #0
 8477 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8478              		.loc 1 3375 20
 8479 0034 FB68     		ldr	r3, [r7, #12]
 8480 0036 0022     		movs	r2, #0
 8481 0038 1A64     		str	r2, [r3, #64]
3376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8482              		.loc 1 3378 18
 8483 003a FB68     		ldr	r3, [r7, #12]
 8484 003c 2022     		movs	r2, #32
 8485 003e 83F83D20 		strb	r2, [r3, #61]
3379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8486              		.loc 1 3379 18
 8487 0042 FB68     		ldr	r3, [r7, #12]
 8488 0044 2022     		movs	r2, #32
 8489 0046 83F83E20 		strb	r2, [r3, #62]
3380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8490              		.loc 1 3380 24
 8491 004a FB68     		ldr	r3, [r7, #12]
 8492 004c 0022     		movs	r2, #0
 8493 004e 1A63     		str	r2, [r3, #48]
3381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8494              		.loc 1 3388 3
 8495 0050 F868     		ldr	r0, [r7, #12]
 8496 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8497 0056 00E0     		b	.L441
 8498              	.L444:
3366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8499              		.loc 1 3366 7
 8500 0058 00BF     		nop
 8501              	.L441:
3389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8502              		.loc 1 3390 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 231


 8503 005a 1037     		adds	r7, r7, #16
 8504              		.cfi_def_cfa_offset 8
 8505 005c BD46     		mov	sp, r7
 8506              		.cfi_def_cfa_register 13
 8507              		@ sp needed
 8508 005e 80BD     		pop	{r7, pc}
 8509              		.cfi_endproc
 8510              	.LFE183:
 8512              		.section	.text.UART_DMARxAbortCallback,"ax",%progbits
 8513              		.align	1
 8514              		.syntax unified
 8515              		.thumb
 8516              		.thumb_func
 8518              	UART_DMARxAbortCallback:
 8519              	.LFB184:
3391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user
3394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (To be called at end of DMA Rx Abort procedure following user abort request).
3395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @note   When this callback is executed, User Abort complete call back is called only if no
3396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         Abort still ongoing for Tx DMA Handle.
3397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxAbortCallback(DMA_HandleTypeDef *hdma)
3402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8520              		.loc 1 3402 1
 8521              		.cfi_startproc
 8522              		@ args = 0, pretend = 0, frame = 16
 8523              		@ frame_needed = 1, uses_anonymous_args = 0
 8524 0000 80B5     		push	{r7, lr}
 8525              		.cfi_def_cfa_offset 8
 8526              		.cfi_offset 7, -8
 8527              		.cfi_offset 14, -4
 8528 0002 84B0     		sub	sp, sp, #16
 8529              		.cfi_def_cfa_offset 24
 8530 0004 00AF     		add	r7, sp, #0
 8531              		.cfi_def_cfa_register 7
 8532 0006 7860     		str	r0, [r7, #4]
3403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8533              		.loc 1 3403 23
 8534 0008 7B68     		ldr	r3, [r7, #4]
 8535 000a 9B6B     		ldr	r3, [r3, #56]
 8536 000c FB60     		str	r3, [r7, #12]
3404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->hdmarx->XferAbortCallback = NULL;
 8537              		.loc 1 3405 8
 8538 000e FB68     		ldr	r3, [r7, #12]
 8539 0010 9B6B     		ldr	r3, [r3, #56]
 8540              		.loc 1 3405 36
 8541 0012 0022     		movs	r2, #0
 8542 0014 1A65     		str	r2, [r3, #80]
3406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check if an Abort process is still ongoing */
3408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->hdmatx != NULL)
 8543              		.loc 1 3408 12
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 232


 8544 0016 FB68     		ldr	r3, [r7, #12]
 8545 0018 5B6B     		ldr	r3, [r3, #52]
 8546              		.loc 1 3408 6
 8547 001a 002B     		cmp	r3, #0
 8548 001c 04D0     		beq	.L446
3409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->hdmatx->XferAbortCallback != NULL)
 8549              		.loc 1 3410 14
 8550 001e FB68     		ldr	r3, [r7, #12]
 8551 0020 5B6B     		ldr	r3, [r3, #52]
 8552              		.loc 1 3410 22
 8553 0022 1B6D     		ldr	r3, [r3, #80]
 8554              		.loc 1 3410 8
 8555 0024 002B     		cmp	r3, #0
 8556 0026 17D1     		bne	.L448
 8557              	.L446:
3411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return;
3413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* No Abort process still ongoing : All DMA channels are aborted, call user Abort Complete callba
3417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8558              		.loc 1 3417 22
 8559 0028 FB68     		ldr	r3, [r7, #12]
 8560 002a 0022     		movs	r2, #0
 8561 002c DA84     		strh	r2, [r3, #38]	@ movhi
3418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8562              		.loc 1 3418 22
 8563 002e FB68     		ldr	r3, [r7, #12]
 8564 0030 0022     		movs	r2, #0
 8565 0032 DA85     		strh	r2, [r3, #46]	@ movhi
3419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Reset ErrorCode */
3421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ErrorCode = HAL_UART_ERROR_NONE;
 8566              		.loc 1 3421 20
 8567 0034 FB68     		ldr	r3, [r7, #12]
 8568 0036 0022     		movs	r2, #0
 8569 0038 1A64     		str	r2, [r3, #64]
3422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState and huart->RxState to Ready */
3424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState  = HAL_UART_STATE_READY;
 8570              		.loc 1 3424 18
 8571 003a FB68     		ldr	r3, [r7, #12]
 8572 003c 2022     		movs	r2, #32
 8573 003e 83F83D20 		strb	r2, [r3, #61]
3425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8574              		.loc 1 3425 18
 8575 0042 FB68     		ldr	r3, [r7, #12]
 8576 0044 2022     		movs	r2, #32
 8577 0046 83F83E20 		strb	r2, [r3, #62]
3426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8578              		.loc 1 3426 24
 8579 004a FB68     		ldr	r3, [r7, #12]
 8580 004c 0022     		movs	r2, #0
 8581 004e 1A63     		str	r2, [r3, #48]
3427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 233


3428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort complete callback */
3431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortCpltCallback(huart);
3432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort complete callback */
3434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortCpltCallback(huart);
 8582              		.loc 1 3434 3
 8583 0050 F868     		ldr	r0, [r7, #12]
 8584 0052 FFF7FEFF 		bl	HAL_UART_AbortCpltCallback
 8585 0056 00E0     		b	.L445
 8586              	.L448:
3412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
 8587              		.loc 1 3412 7
 8588 0058 00BF     		nop
 8589              	.L445:
3435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8590              		.loc 1 3436 1
 8591 005a 1037     		adds	r7, r7, #16
 8592              		.cfi_def_cfa_offset 8
 8593 005c BD46     		mov	sp, r7
 8594              		.cfi_def_cfa_register 13
 8595              		@ sp needed
 8596 005e 80BD     		pop	{r7, pc}
 8597              		.cfi_endproc
 8598              	.LFE184:
 8600              		.section	.text.UART_DMATxOnlyAbortCallback,"ax",%progbits
 8601              		.align	1
 8602              		.syntax unified
 8603              		.thumb
 8604              		.thumb_func
 8606              	UART_DMATxOnlyAbortCallback:
 8607              	.LFB185:
3437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Tx communication abort callback, when initiated by user by a call to
3440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortTransmit_IT API (Abort only Tx transfer)
3441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Tx Abort procedure following user abort reques
3442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Tx Abort Complete callback execution).
3443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
3444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMATxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8608              		.loc 1 3448 1
 8609              		.cfi_startproc
 8610              		@ args = 0, pretend = 0, frame = 16
 8611              		@ frame_needed = 1, uses_anonymous_args = 0
 8612 0000 80B5     		push	{r7, lr}
 8613              		.cfi_def_cfa_offset 8
 8614              		.cfi_offset 7, -8
 8615              		.cfi_offset 14, -4
 8616 0002 84B0     		sub	sp, sp, #16
 8617              		.cfi_def_cfa_offset 24
 8618 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 234


 8619              		.cfi_def_cfa_register 7
 8620 0006 7860     		str	r0, [r7, #4]
3449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8621              		.loc 1 3449 23
 8622 0008 7B68     		ldr	r3, [r7, #4]
 8623 000a 9B6B     		ldr	r3, [r3, #56]
 8624 000c FB60     		str	r3, [r7, #12]
3450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxXferCount = 0x00U;
 8625              		.loc 1 3451 22
 8626 000e FB68     		ldr	r3, [r7, #12]
 8627 0010 0022     		movs	r2, #0
 8628 0012 DA84     		strh	r2, [r3, #38]	@ movhi
3452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->gState to Ready */
3454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8629              		.loc 1 3454 17
 8630 0014 FB68     		ldr	r3, [r7, #12]
 8631 0016 2022     		movs	r2, #32
 8632 0018 83F83D20 		strb	r2, [r3, #61]
3455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Transmit Complete Callback */
3459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortTransmitCpltCallback(huart);
3460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Transmit Complete Callback */
3462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortTransmitCpltCallback(huart);
 8633              		.loc 1 3462 3
 8634 001c F868     		ldr	r0, [r7, #12]
 8635 001e FFF7FEFF 		bl	HAL_UART_AbortTransmitCpltCallback
3463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8636              		.loc 1 3464 1
 8637 0022 00BF     		nop
 8638 0024 1037     		adds	r7, r7, #16
 8639              		.cfi_def_cfa_offset 8
 8640 0026 BD46     		mov	sp, r7
 8641              		.cfi_def_cfa_register 13
 8642              		@ sp needed
 8643 0028 80BD     		pop	{r7, pc}
 8644              		.cfi_endproc
 8645              	.LFE185:
 8647              		.section	.text.UART_DMARxOnlyAbortCallback,"ax",%progbits
 8648              		.align	1
 8649              		.syntax unified
 8650              		.thumb
 8651              		.thumb_func
 8653              	UART_DMARxOnlyAbortCallback:
 8654              	.LFB186:
3465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  DMA UART Rx communication abort callback, when initiated by user by a call to
3468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         HAL_UART_AbortReceive_IT API (Abort only Rx transfer)
3469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         (This callback is executed at end of DMA Rx Abort procedure following user abort reques
3470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *         and leads to user Rx Abort Complete callback execution).
3471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  hdma  Pointer to a DMA_HandleTypeDef structure that contains
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 235


3472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *               the configuration information for the specified DMA module.
3473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_DMARxOnlyAbortCallback(DMA_HandleTypeDef *hdma)
3476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8655              		.loc 1 3476 1
 8656              		.cfi_startproc
 8657              		@ args = 0, pretend = 0, frame = 16
 8658              		@ frame_needed = 1, uses_anonymous_args = 0
 8659 0000 80B5     		push	{r7, lr}
 8660              		.cfi_def_cfa_offset 8
 8661              		.cfi_offset 7, -8
 8662              		.cfi_offset 14, -4
 8663 0002 84B0     		sub	sp, sp, #16
 8664              		.cfi_def_cfa_offset 24
 8665 0004 00AF     		add	r7, sp, #0
 8666              		.cfi_def_cfa_register 7
 8667 0006 7860     		str	r0, [r7, #4]
3477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   UART_HandleTypeDef *huart = (UART_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8668              		.loc 1 3477 23
 8669 0008 7B68     		ldr	r3, [r7, #4]
 8670 000a 9B6B     		ldr	r3, [r3, #56]
 8671 000c FB60     		str	r3, [r7, #12]
3478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxXferCount = 0x00U;
 8672              		.loc 1 3479 22
 8673 000e FB68     		ldr	r3, [r7, #12]
 8674 0010 0022     		movs	r2, #0
 8675 0012 DA85     		strh	r2, [r3, #46]	@ movhi
3480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Restore huart->RxState to Ready */
3482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->RxState = HAL_UART_STATE_READY;
 8676              		.loc 1 3482 18
 8677 0014 FB68     		ldr	r3, [r7, #12]
 8678 0016 2022     		movs	r2, #32
 8679 0018 83F83E20 		strb	r2, [r3, #62]
3483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8680              		.loc 1 3483 24
 8681 001c FB68     		ldr	r3, [r7, #12]
 8682 001e 0022     		movs	r2, #0
 8683 0020 1A63     		str	r2, [r3, #48]
3484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call user Abort complete callback */
3486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call registered Abort Receive Complete Callback */
3488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->AbortReceiveCpltCallback(huart);
3489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Call legacy weak Abort Receive Complete Callback */
3491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_AbortReceiveCpltCallback(huart);
 8684              		.loc 1 3491 3
 8685 0022 F868     		ldr	r0, [r7, #12]
 8686 0024 FFF7FEFF 		bl	HAL_UART_AbortReceiveCpltCallback
3492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8687              		.loc 1 3493 1
 8688 0028 00BF     		nop
 8689 002a 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 236


 8690              		.cfi_def_cfa_offset 8
 8691 002c BD46     		mov	sp, r7
 8692              		.cfi_def_cfa_register 13
 8693              		@ sp needed
 8694 002e 80BD     		pop	{r7, pc}
 8695              		.cfi_endproc
 8696              	.LFE186:
 8698              		.section	.text.UART_Transmit_IT,"ax",%progbits
 8699              		.align	1
 8700              		.syntax unified
 8701              		.thumb
 8702              		.thumb_func
 8704              	UART_Transmit_IT:
 8705              	.LFB187:
3494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Sends an amount of data in non blocking mode.
3497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Transmit_IT(UART_HandleTypeDef *huart)
3502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8706              		.loc 1 3502 1
 8707              		.cfi_startproc
 8708              		@ args = 0, pretend = 0, frame = 16
 8709              		@ frame_needed = 1, uses_anonymous_args = 0
 8710              		@ link register save eliminated.
 8711 0000 80B4     		push	{r7}
 8712              		.cfi_def_cfa_offset 4
 8713              		.cfi_offset 7, -4
 8714 0002 85B0     		sub	sp, sp, #20
 8715              		.cfi_def_cfa_offset 24
 8716 0004 00AF     		add	r7, sp, #0
 8717              		.cfi_def_cfa_register 7
 8718 0006 7860     		str	r0, [r7, #4]
3503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *tmp;
3504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Tx process is ongoing */
3506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->gState == HAL_UART_STATE_BUSY_TX)
 8719              		.loc 1 3506 12
 8720 0008 7B68     		ldr	r3, [r7, #4]
 8721 000a 93F83D30 		ldrb	r3, [r3, #61]
 8722 000e DBB2     		uxtb	r3, r3
 8723              		.loc 1 3506 6
 8724 0010 212B     		cmp	r3, #33
 8725 0012 3ED1     		bne	.L452
3507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8726              		.loc 1 3508 21
 8727 0014 7B68     		ldr	r3, [r7, #4]
 8728 0016 9B68     		ldr	r3, [r3, #8]
 8729              		.loc 1 3508 8
 8730 0018 B3F5805F 		cmp	r3, #4096
 8731 001c 14D1     		bne	.L453
 8732              		.loc 1 3508 71 discriminator 1
 8733 001e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 237


 8734 0020 1B69     		ldr	r3, [r3, #16]
 8735              		.loc 1 3508 56 discriminator 1
 8736 0022 002B     		cmp	r3, #0
 8737 0024 10D1     		bne	.L453
3509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       tmp = (uint16_t *) huart->pTxBuffPtr;
 8738              		.loc 1 3510 11
 8739 0026 7B68     		ldr	r3, [r7, #4]
 8740 0028 1B6A     		ldr	r3, [r3, #32]
 8741 002a FB60     		str	r3, [r7, #12]
3511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint16_t)(*tmp & (uint16_t)0x01FF);
 8742              		.loc 1 3511 40
 8743 002c FB68     		ldr	r3, [r7, #12]
 8744 002e 1B88     		ldrh	r3, [r3]
 8745              		.loc 1 3511 29
 8746 0030 1A46     		mov	r2, r3
 8747              		.loc 1 3511 12
 8748 0032 7B68     		ldr	r3, [r7, #4]
 8749 0034 1B68     		ldr	r3, [r3]
 8750              		.loc 1 3511 29
 8751 0036 C2F30802 		ubfx	r2, r2, #0, #9
 8752              		.loc 1 3511 27
 8753 003a 5A60     		str	r2, [r3, #4]
3512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pTxBuffPtr += 2U;
 8754              		.loc 1 3512 25
 8755 003c 7B68     		ldr	r3, [r7, #4]
 8756 003e 1B6A     		ldr	r3, [r3, #32]
 8757 0040 9A1C     		adds	r2, r3, #2
 8758 0042 7B68     		ldr	r3, [r7, #4]
 8759 0044 1A62     		str	r2, [r3, #32]
 8760 0046 08E0     		b	.L454
 8761              	.L453:
3513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->Instance->DR = (uint8_t)(*huart->pTxBuffPtr++ & (uint8_t)0x00FF);
 8762              		.loc 1 3516 45
 8763 0048 7B68     		ldr	r3, [r7, #4]
 8764 004a 1B6A     		ldr	r3, [r3, #32]
 8765              		.loc 1 3516 57
 8766 004c 591C     		adds	r1, r3, #1
 8767 004e 7A68     		ldr	r2, [r7, #4]
 8768 0050 1162     		str	r1, [r2, #32]
 8769              		.loc 1 3516 39
 8770 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8771              		.loc 1 3516 12
 8772 0054 7B68     		ldr	r3, [r7, #4]
 8773 0056 1B68     		ldr	r3, [r3]
 8774              		.loc 1 3516 27
 8775 0058 5A60     		str	r2, [r3, #4]
 8776              	.L454:
3517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->TxXferCount == 0U)
 8777              		.loc 1 3519 16
 8778 005a 7B68     		ldr	r3, [r7, #4]
 8779 005c DB8C     		ldrh	r3, [r3, #38]	@ movhi
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 238


 8780 005e 9BB2     		uxth	r3, r3
 8781              		.loc 1 3519 9
 8782 0060 013B     		subs	r3, r3, #1
 8783 0062 9BB2     		uxth	r3, r3
 8784              		.loc 1 3519 8
 8785 0064 7A68     		ldr	r2, [r7, #4]
 8786 0066 1946     		mov	r1, r3	@ movhi
 8787 0068 D184     		strh	r1, [r2, #38]	@ movhi
 8788 006a 002B     		cmp	r3, #0
 8789 006c 0FD1     		bne	.L455
3520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Transmit Complete Interrupt */
3522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_TXE);
 8790              		.loc 1 3522 7
 8791 006e 7B68     		ldr	r3, [r7, #4]
 8792 0070 1B68     		ldr	r3, [r3]
 8793 0072 DA68     		ldr	r2, [r3, #12]
 8794 0074 7B68     		ldr	r3, [r7, #4]
 8795 0076 1B68     		ldr	r3, [r3]
 8796 0078 22F08002 		bic	r2, r2, #128
 8797 007c DA60     		str	r2, [r3, #12]
3523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Enable the UART Transmit Complete Interrupt */
3525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_ENABLE_IT(huart, UART_IT_TC);
 8798              		.loc 1 3525 7
 8799 007e 7B68     		ldr	r3, [r7, #4]
 8800 0080 1B68     		ldr	r3, [r3]
 8801 0082 DA68     		ldr	r2, [r3, #12]
 8802 0084 7B68     		ldr	r3, [r7, #4]
 8803 0086 1B68     		ldr	r3, [r3]
 8804 0088 42F04002 		orr	r2, r2, #64
 8805 008c DA60     		str	r2, [r3, #12]
 8806              	.L455:
3526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 8807              		.loc 1 3527 12
 8808 008e 0023     		movs	r3, #0
 8809 0090 00E0     		b	.L456
 8810              	.L452:
3528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 8811              		.loc 1 3531 12
 8812 0092 0223     		movs	r3, #2
 8813              	.L456:
3532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8814              		.loc 1 3533 1
 8815 0094 1846     		mov	r0, r3
 8816 0096 1437     		adds	r7, r7, #20
 8817              		.cfi_def_cfa_offset 4
 8818 0098 BD46     		mov	sp, r7
 8819              		.cfi_def_cfa_register 13
 8820              		@ sp needed
 8821 009a 5DF8047B 		ldr	r7, [sp], #4
 8822              		.cfi_restore 7
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 239


 8823              		.cfi_def_cfa_offset 0
 8824 009e 7047     		bx	lr
 8825              		.cfi_endproc
 8826              	.LFE187:
 8828              		.section	.text.UART_EndTransmit_IT,"ax",%progbits
 8829              		.align	1
 8830              		.syntax unified
 8831              		.thumb
 8832              		.thumb_func
 8834              	UART_EndTransmit_IT:
 8835              	.LFB188:
3534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Wraps up transmission in non blocking mode.
3537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_EndTransmit_IT(UART_HandleTypeDef *huart)
3542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8836              		.loc 1 3542 1
 8837              		.cfi_startproc
 8838              		@ args = 0, pretend = 0, frame = 8
 8839              		@ frame_needed = 1, uses_anonymous_args = 0
 8840 0000 80B5     		push	{r7, lr}
 8841              		.cfi_def_cfa_offset 8
 8842              		.cfi_offset 7, -8
 8843              		.cfi_offset 14, -4
 8844 0002 82B0     		sub	sp, sp, #8
 8845              		.cfi_def_cfa_offset 16
 8846 0004 00AF     		add	r7, sp, #0
 8847              		.cfi_def_cfa_register 7
 8848 0006 7860     		str	r0, [r7, #4]
3543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Disable the UART Transmit Complete Interrupt */
3544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   __HAL_UART_DISABLE_IT(huart, UART_IT_TC);
 8849              		.loc 1 3544 3
 8850 0008 7B68     		ldr	r3, [r7, #4]
 8851 000a 1B68     		ldr	r3, [r3]
 8852 000c DA68     		ldr	r2, [r3, #12]
 8853 000e 7B68     		ldr	r3, [r7, #4]
 8854 0010 1B68     		ldr	r3, [r3]
 8855 0012 22F04002 		bic	r2, r2, #64
 8856 0016 DA60     		str	r2, [r3, #12]
3545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Tx process is ended, restore huart->gState to Ready */
3547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->gState = HAL_UART_STATE_READY;
 8857              		.loc 1 3547 17
 8858 0018 7B68     		ldr	r3, [r7, #4]
 8859 001a 2022     		movs	r2, #32
 8860 001c 83F83D20 		strb	r2, [r3, #61]
3548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call registered Tx complete callback*/
3551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   huart->TxCpltCallback(huart);
3552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*Call legacy weak Tx complete callback*/
3554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   HAL_UART_TxCpltCallback(huart);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 240


 8861              		.loc 1 3554 3
 8862 0020 7868     		ldr	r0, [r7, #4]
 8863 0022 FFF7FEFF 		bl	HAL_UART_TxCpltCallback
3555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   return HAL_OK;
 8864              		.loc 1 3557 10
 8865 0026 0023     		movs	r3, #0
3558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 8866              		.loc 1 3558 1
 8867 0028 1846     		mov	r0, r3
 8868 002a 0837     		adds	r7, r7, #8
 8869              		.cfi_def_cfa_offset 8
 8870 002c BD46     		mov	sp, r7
 8871              		.cfi_def_cfa_register 13
 8872              		@ sp needed
 8873 002e 80BD     		pop	{r7, pc}
 8874              		.cfi_endproc
 8875              	.LFE188:
 8877              		.section	.text.UART_Receive_IT,"ax",%progbits
 8878              		.align	1
 8879              		.syntax unified
 8880              		.thumb
 8881              		.thumb_func
 8883              	UART_Receive_IT:
 8884              	.LFB189:
3559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Receives an amount of data in non blocking mode
3562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval HAL status
3565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3566:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static HAL_StatusTypeDef UART_Receive_IT(UART_HandleTypeDef *huart)
3567:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 8885              		.loc 1 3567 1
 8886              		.cfi_startproc
 8887              		@ args = 0, pretend = 0, frame = 48
 8888              		@ frame_needed = 1, uses_anonymous_args = 0
 8889 0000 80B5     		push	{r7, lr}
 8890              		.cfi_def_cfa_offset 8
 8891              		.cfi_offset 7, -8
 8892              		.cfi_offset 14, -4
 8893 0002 8CB0     		sub	sp, sp, #48
 8894              		.cfi_def_cfa_offset 56
 8895 0004 00AF     		add	r7, sp, #0
 8896              		.cfi_def_cfa_register 7
 8897 0006 7860     		str	r0, [r7, #4]
3568:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint8_t  *pdata8bits;
3569:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint16_t *pdata16bits;
3570:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3571:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check that a Rx process is ongoing */
3572:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->RxState == HAL_UART_STATE_BUSY_RX)
 8898              		.loc 1 3572 12
 8899 0008 7B68     		ldr	r3, [r7, #4]
 8900 000a 93F83E30 		ldrb	r3, [r3, #62]
 8901 000e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 241


 8902              		.loc 1 3572 6
 8903 0010 222B     		cmp	r3, #34
 8904 0012 40F0AB80 		bne	.L460
3573:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3574:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8905              		.loc 1 3574 21
 8906 0016 7B68     		ldr	r3, [r7, #4]
 8907 0018 9B68     		ldr	r3, [r3, #8]
 8908              		.loc 1 3574 8
 8909 001a B3F5805F 		cmp	r3, #4096
 8910 001e 17D1     		bne	.L461
 8911              		.loc 1 3574 71 discriminator 1
 8912 0020 7B68     		ldr	r3, [r7, #4]
 8913 0022 1B69     		ldr	r3, [r3, #16]
 8914              		.loc 1 3574 56 discriminator 1
 8915 0024 002B     		cmp	r3, #0
 8916 0026 13D1     		bne	.L461
3575:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3576:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits  = NULL;
 8917              		.loc 1 3576 19
 8918 0028 0023     		movs	r3, #0
 8919 002a FB62     		str	r3, [r7, #44]
3577:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits = (uint16_t *) huart->pRxBuffPtr;
 8920              		.loc 1 3577 19
 8921 002c 7B68     		ldr	r3, [r7, #4]
 8922 002e 9B6A     		ldr	r3, [r3, #40]
 8923 0030 BB62     		str	r3, [r7, #40]
3578:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       *pdata16bits = (uint16_t)(huart->Instance->DR & (uint16_t)0x01FF);
 8924              		.loc 1 3578 38
 8925 0032 7B68     		ldr	r3, [r7, #4]
 8926 0034 1B68     		ldr	r3, [r3]
 8927              		.loc 1 3578 48
 8928 0036 5B68     		ldr	r3, [r3, #4]
 8929              		.loc 1 3578 22
 8930 0038 9BB2     		uxth	r3, r3
 8931 003a C3F30803 		ubfx	r3, r3, #0, #9
 8932 003e 9AB2     		uxth	r2, r3
 8933              		.loc 1 3578 20
 8934 0040 BB6A     		ldr	r3, [r7, #40]
 8935 0042 1A80     		strh	r2, [r3]	@ movhi
3579:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 2U;
 8936              		.loc 1 3579 25
 8937 0044 7B68     		ldr	r3, [r7, #4]
 8938 0046 9B6A     		ldr	r3, [r3, #40]
 8939 0048 9A1C     		adds	r2, r3, #2
 8940 004a 7B68     		ldr	r3, [r7, #4]
 8941 004c 9A62     		str	r2, [r3, #40]
 8942 004e 26E0     		b	.L462
 8943              	.L461:
3580:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3581:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3582:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3583:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata8bits = (uint8_t *) huart->pRxBuffPtr;
 8944              		.loc 1 3583 18
 8945 0050 7B68     		ldr	r3, [r7, #4]
 8946 0052 9B6A     		ldr	r3, [r3, #40]
 8947 0054 FB62     		str	r3, [r7, #44]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 242


3584:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pdata16bits  = NULL;
 8948              		.loc 1 3584 20
 8949 0056 0023     		movs	r3, #0
 8950 0058 BB62     		str	r3, [r7, #40]
3585:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3586:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLE
 8951              		.loc 1 3586 23
 8952 005a 7B68     		ldr	r3, [r7, #4]
 8953 005c 9B68     		ldr	r3, [r3, #8]
 8954              		.loc 1 3586 10
 8955 005e B3F5805F 		cmp	r3, #4096
 8956 0062 07D0     		beq	.L463
 8957              		.loc 1 3586 74 discriminator 1
 8958 0064 7B68     		ldr	r3, [r7, #4]
 8959 0066 9B68     		ldr	r3, [r3, #8]
 8960              		.loc 1 3586 58 discriminator 1
 8961 0068 002B     		cmp	r3, #0
 8962 006a 0AD1     		bne	.L464
 8963              		.loc 1 3586 124 discriminator 2
 8964 006c 7B68     		ldr	r3, [r7, #4]
 8965 006e 1B69     		ldr	r3, [r3, #16]
 8966              		.loc 1 3586 109 discriminator 2
 8967 0070 002B     		cmp	r3, #0
 8968 0072 06D1     		bne	.L464
 8969              	.L463:
3587:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3588:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8970              		.loc 1 3588 38
 8971 0074 7B68     		ldr	r3, [r7, #4]
 8972 0076 1B68     		ldr	r3, [r3]
 8973              		.loc 1 3588 48
 8974 0078 5B68     		ldr	r3, [r3, #4]
 8975              		.loc 1 3588 23
 8976 007a DAB2     		uxtb	r2, r3
 8977              		.loc 1 3588 21
 8978 007c FB6A     		ldr	r3, [r7, #44]
 8979 007e 1A70     		strb	r2, [r3]
 8980 0080 08E0     		b	.L465
 8981              	.L464:
3589:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3590:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3591:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3592:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8982              		.loc 1 3592 38
 8983 0082 7B68     		ldr	r3, [r7, #4]
 8984 0084 1B68     		ldr	r3, [r3]
 8985              		.loc 1 3592 48
 8986 0086 5B68     		ldr	r3, [r3, #4]
 8987              		.loc 1 3592 23
 8988 0088 DBB2     		uxtb	r3, r3
 8989 008a 03F07F03 		and	r3, r3, #127
 8990 008e DAB2     		uxtb	r2, r3
 8991              		.loc 1 3592 21
 8992 0090 FB6A     		ldr	r3, [r7, #44]
 8993 0092 1A70     		strb	r2, [r3]
 8994              	.L465:
3593:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 243


3594:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->pRxBuffPtr += 1U;
 8995              		.loc 1 3594 25
 8996 0094 7B68     		ldr	r3, [r7, #4]
 8997 0096 9B6A     		ldr	r3, [r3, #40]
 8998 0098 5A1C     		adds	r2, r3, #1
 8999 009a 7B68     		ldr	r3, [r7, #4]
 9000 009c 9A62     		str	r2, [r3, #40]
 9001              	.L462:
3595:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3596:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3597:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (--huart->RxXferCount == 0U)
 9002              		.loc 1 3597 16
 9003 009e 7B68     		ldr	r3, [r7, #4]
 9004 00a0 DB8D     		ldrh	r3, [r3, #46]	@ movhi
 9005 00a2 9BB2     		uxth	r3, r3
 9006              		.loc 1 3597 9
 9007 00a4 013B     		subs	r3, r3, #1
 9008 00a6 9BB2     		uxth	r3, r3
 9009              		.loc 1 3597 8
 9010 00a8 7A68     		ldr	r2, [r7, #4]
 9011 00aa 1946     		mov	r1, r3	@ movhi
 9012 00ac D185     		strh	r1, [r2, #46]	@ movhi
 9013 00ae 002B     		cmp	r3, #0
 9014 00b0 5AD1     		bne	.L466
3598:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3599:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Data Register not empty Interrupt */
3600:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_RXNE);
 9015              		.loc 1 3600 7
 9016 00b2 7B68     		ldr	r3, [r7, #4]
 9017 00b4 1B68     		ldr	r3, [r3]
 9018 00b6 DA68     		ldr	r2, [r3, #12]
 9019 00b8 7B68     		ldr	r3, [r7, #4]
 9020 00ba 1B68     		ldr	r3, [r3]
 9021 00bc 22F02002 		bic	r2, r2, #32
 9022 00c0 DA60     		str	r2, [r3, #12]
3601:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3602:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Parity Error Interrupt */
3603:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_PE);
 9023              		.loc 1 3603 7
 9024 00c2 7B68     		ldr	r3, [r7, #4]
 9025 00c4 1B68     		ldr	r3, [r3]
 9026 00c6 DA68     		ldr	r2, [r3, #12]
 9027 00c8 7B68     		ldr	r3, [r7, #4]
 9028 00ca 1B68     		ldr	r3, [r3]
 9029 00cc 22F48072 		bic	r2, r2, #256
 9030 00d0 DA60     		str	r2, [r3, #12]
3604:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3605:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Disable the UART Error Interrupt: (Frame error, noise error, overrun error) */
3606:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       __HAL_UART_DISABLE_IT(huart, UART_IT_ERR);
 9031              		.loc 1 3606 7
 9032 00d2 7B68     		ldr	r3, [r7, #4]
 9033 00d4 1B68     		ldr	r3, [r3]
 9034 00d6 5A69     		ldr	r2, [r3, #20]
 9035 00d8 7B68     		ldr	r3, [r7, #4]
 9036 00da 1B68     		ldr	r3, [r3]
 9037 00dc 22F00102 		bic	r2, r2, #1
 9038 00e0 5A61     		str	r2, [r3, #20]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 244


3607:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3608:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Rx process is completed, restore huart->RxState to Ready */
3609:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       huart->RxState = HAL_UART_STATE_READY;
 9039              		.loc 1 3609 22
 9040 00e2 7B68     		ldr	r3, [r7, #4]
 9041 00e4 2022     		movs	r2, #32
 9042 00e6 83F83E20 		strb	r2, [r3, #62]
3610:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3611:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       /* Check current reception Mode :
3612:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****          If Reception till IDLE event has been selected : */
3613:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       if (huart->ReceptionType == HAL_UART_RECEPTION_TOIDLE)
 9043              		.loc 1 3613 16
 9044 00ea 7B68     		ldr	r3, [r7, #4]
 9045 00ec 1B6B     		ldr	r3, [r3, #48]
 9046              		.loc 1 3613 10
 9047 00ee 012B     		cmp	r3, #1
 9048 00f0 35D1     		bne	.L467
3614:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3615:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Set reception type to Standard */
3616:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 9049              		.loc 1 3616 30
 9050 00f2 7B68     		ldr	r3, [r7, #4]
 9051 00f4 0022     		movs	r2, #0
 9052 00f6 1A63     		str	r2, [r3, #48]
 9053              	.L470:
 9054              	.LBB635:
3617:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3618:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Disable IDLE interrupt */
3619:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         ATOMIC_CLEAR_BIT(huart->Instance->CR1, USART_CR1_IDLEIE);
 9055              		.loc 1 3619 9 discriminator 1
 9056 00f8 7B68     		ldr	r3, [r7, #4]
 9057 00fa 1B68     		ldr	r3, [r3]
 9058 00fc 0C33     		adds	r3, r3, #12
 9059 00fe 7B61     		str	r3, [r7, #20]
 9060              	.LBB636:
 9061              	.LBB637:
1072:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9062              		.loc 2 1072 4 discriminator 1
 9063 0100 7B69     		ldr	r3, [r7, #20]
 9064              		.syntax unified
 9065              	@ 1072 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9066 0102 53E8003F 		ldrex r3, [r3]
 9067              	@ 0 "" 2
 9068              		.thumb
 9069              		.syntax unified
 9070 0106 3B61     		str	r3, [r7, #16]
1073:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 9071              		.loc 2 1073 10 discriminator 1
 9072 0108 3B69     		ldr	r3, [r7, #16]
 9073              	.LBE637:
 9074              	.LBE636:
 9075              		.loc 1 3619 9 discriminator 1
 9076 010a 23F01003 		bic	r3, r3, #16
 9077 010e 7B62     		str	r3, [r7, #36]
 9078 0110 7B68     		ldr	r3, [r7, #4]
 9079 0112 1B68     		ldr	r3, [r3]
 9080 0114 0C33     		adds	r3, r3, #12
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 245


 9081 0116 7A6A     		ldr	r2, [r7, #36]
 9082 0118 3A62     		str	r2, [r7, #32]
 9083 011a FB61     		str	r3, [r7, #28]
 9084              	.LBB638:
 9085              	.LBB639:
1123:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 9086              		.loc 2 1123 4 discriminator 1
 9087 011c F969     		ldr	r1, [r7, #28]
 9088 011e 3A6A     		ldr	r2, [r7, #32]
 9089              		.syntax unified
 9090              	@ 1123 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 9091 0120 41E80023 		strex r3, r2, [r1]
 9092              	@ 0 "" 2
 9093              		.thumb
 9094              		.syntax unified
 9095 0124 BB61     		str	r3, [r7, #24]
 9096              		.loc 2 1124 10 discriminator 1
 9097 0126 BB69     		ldr	r3, [r7, #24]
 9098              	.LBE639:
 9099              	.LBE638:
 9100              		.loc 1 3619 9 discriminator 1
 9101 0128 002B     		cmp	r3, #0
 9102 012a E5D1     		bne	.L470
 9103              	.LBE635:
3620:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3621:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Check if IDLE flag is set */
3622:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         if (__HAL_UART_GET_FLAG(huart, UART_FLAG_IDLE))
 9104              		.loc 1 3622 13
 9105 012c 7B68     		ldr	r3, [r7, #4]
 9106 012e 1B68     		ldr	r3, [r3]
 9107 0130 1B68     		ldr	r3, [r3]
 9108 0132 03F01003 		and	r3, r3, #16
 9109              		.loc 1 3622 12
 9110 0136 102B     		cmp	r3, #16
 9111 0138 0AD1     		bne	.L471
 9112              	.LBB640:
3623:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         {
3624:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           /* Clear IDLE flag in ISR */
3625:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****           __HAL_UART_CLEAR_IDLEFLAG(huart);
 9113              		.loc 1 3625 11
 9114 013a 0023     		movs	r3, #0
 9115 013c FB60     		str	r3, [r7, #12]
 9116 013e 7B68     		ldr	r3, [r7, #4]
 9117 0140 1B68     		ldr	r3, [r3]
 9118 0142 1B68     		ldr	r3, [r3]
 9119 0144 FB60     		str	r3, [r7, #12]
 9120 0146 7B68     		ldr	r3, [r7, #4]
 9121 0148 1B68     		ldr	r3, [r3]
 9122 014a 5B68     		ldr	r3, [r3, #4]
 9123 014c FB60     		str	r3, [r7, #12]
 9124 014e FB68     		ldr	r3, [r7, #12]
 9125              	.L471:
 9126              	.LBE640:
3626:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         }
3627:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3628:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3629:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx Event callback*/
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 246


3630:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxEventCallback(huart, huart->RxXferSize);
3631:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3632:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx Event callback*/
3633:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UARTEx_RxEventCallback(huart, huart->RxXferSize);
 9127              		.loc 1 3633 9
 9128 0150 7B68     		ldr	r3, [r7, #4]
 9129 0152 9B8D     		ldrh	r3, [r3, #44]
 9130 0154 1946     		mov	r1, r3
 9131 0156 7868     		ldr	r0, [r7, #4]
 9132 0158 FFF7FEFF 		bl	HAL_UARTEx_RxEventCallback
 9133 015c 02E0     		b	.L472
 9134              	.L467:
3634:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3635:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3636:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       else
3637:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       {
3638:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /* Standard reception API called */
3639:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if (USE_HAL_UART_REGISTER_CALLBACKS == 1)
3640:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call registered Rx complete callback*/
3641:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         huart->RxCpltCallback(huart);
3642:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3643:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         /*Call legacy weak Rx complete callback*/
3644:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****         HAL_UART_RxCpltCallback(huart);
 9135              		.loc 1 3644 9
 9136 015e 7868     		ldr	r0, [r7, #4]
 9137 0160 FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 9138              	.L472:
3645:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USE_HAL_UART_REGISTER_CALLBACKS */
3646:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       }
3647:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3648:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       return HAL_OK;
 9139              		.loc 1 3648 14
 9140 0164 0023     		movs	r3, #0
 9141 0166 02E0     		b	.L473
 9142              	.L466:
3649:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3650:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_OK;
 9143              		.loc 1 3650 12
 9144 0168 0023     		movs	r3, #0
 9145 016a 00E0     		b	.L473
 9146              	.L460:
3651:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3652:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3653:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3654:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     return HAL_BUSY;
 9147              		.loc 1 3654 12
 9148 016c 0223     		movs	r3, #2
 9149              	.L473:
3655:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3656:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9150              		.loc 1 3656 1
 9151 016e 1846     		mov	r0, r3
 9152 0170 3037     		adds	r7, r7, #48
 9153              		.cfi_def_cfa_offset 8
 9154 0172 BD46     		mov	sp, r7
 9155              		.cfi_def_cfa_register 13
 9156              		@ sp needed
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 247


 9157 0174 80BD     		pop	{r7, pc}
 9158              		.cfi_endproc
 9159              	.LFE189:
 9161              		.global	__aeabi_uldivmod
 9162              		.section	.text.UART_SetConfig,"ax",%progbits
 9163              		.align	1
 9164              		.syntax unified
 9165              		.thumb
 9166              		.thumb_func
 9168              	UART_SetConfig:
 9169              	.LFB190:
3657:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3658:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** /**
3659:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @brief  Configures the UART peripheral.
3660:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
3661:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   *                the configuration information for the specified UART module.
3662:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   * @retval None
3663:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   */
3664:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** static void UART_SetConfig(UART_HandleTypeDef *huart)
3665:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** {
 9170              		.loc 1 3665 1
 9171              		.cfi_startproc
 9172              		@ args = 0, pretend = 0, frame = 256
 9173              		@ frame_needed = 1, uses_anonymous_args = 0
 9174 0000 2DE9B04F 		push	{r4, r5, r7, r8, r9, r10, fp, lr}
 9175              		.cfi_def_cfa_offset 32
 9176              		.cfi_offset 4, -32
 9177              		.cfi_offset 5, -28
 9178              		.cfi_offset 7, -24
 9179              		.cfi_offset 8, -20
 9180              		.cfi_offset 9, -16
 9181              		.cfi_offset 10, -12
 9182              		.cfi_offset 11, -8
 9183              		.cfi_offset 14, -4
 9184 0004 C0B0     		sub	sp, sp, #256
 9185              		.cfi_def_cfa_offset 288
 9186 0006 00AF     		add	r7, sp, #0
 9187              		.cfi_def_cfa_register 7
 9188 0008 C7F8F400 		str	r0, [r7, #244]
3666:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t tmpreg;
3667:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   uint32_t pclk;
3668:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3669:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Check the parameters */
3670:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_BAUDRATE(huart->Init.BaudRate));
3671:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_STOPBITS(huart->Init.StopBits));
3672:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_PARITY(huart->Init.Parity));
3673:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   assert_param(IS_UART_MODE(huart->Init.Mode));
3674:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3675:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR2 Configuration -----------------------*/
3676:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Stop Bits: Set STOP[13:12] bits
3677:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      according to huart->Init.StopBits value */
3678:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 9189              		.loc 1 3678 3
 9190 000c D7F8F430 		ldr	r3, [r7, #244]
 9191 0010 1B68     		ldr	r3, [r3]
 9192 0012 1B69     		ldr	r3, [r3, #16]
 9193 0014 23F44050 		bic	r0, r3, #12288
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 248


 9194 0018 D7F8F430 		ldr	r3, [r7, #244]
 9195 001c D968     		ldr	r1, [r3, #12]
 9196 001e D7F8F430 		ldr	r3, [r7, #244]
 9197 0022 1A68     		ldr	r2, [r3]
 9198 0024 40EA0103 		orr	r3, r0, r1
 9199 0028 1361     		str	r3, [r2, #16]
3679:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3680:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR1 Configuration -----------------------*/
3681:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART Word Length, Parity and mode:
3682:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set the M bits according to huart->Init.WordLength value
3683:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set PCE and PS bits according to huart->Init.Parity value
3684:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set TE and RE bits according to huart->Init.Mode value
3685:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****      Set OVER8 bit according to huart->Init.OverSampling value */
3686:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3687:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.O
 9200              		.loc 1 3687 33
 9201 002a D7F8F430 		ldr	r3, [r7, #244]
 9202 002e 9A68     		ldr	r2, [r3, #8]
 9203              		.loc 1 3687 58
 9204 0030 D7F8F430 		ldr	r3, [r7, #244]
 9205 0034 1B69     		ldr	r3, [r3, #16]
 9206              		.loc 1 3687 45
 9207 0036 1A43     		orrs	r2, r2, r3
 9208              		.loc 1 3687 79
 9209 0038 D7F8F430 		ldr	r3, [r7, #244]
 9210 003c 5B69     		ldr	r3, [r3, #20]
 9211              		.loc 1 3687 66
 9212 003e 1A43     		orrs	r2, r2, r3
 9213              		.loc 1 3687 98
 9214 0040 D7F8F430 		ldr	r3, [r7, #244]
 9215 0044 DB69     		ldr	r3, [r3, #28]
 9216              		.loc 1 3687 10
 9217 0046 1343     		orrs	r3, r3, r2
 9218 0048 C7F8F830 		str	r3, [r7, #248]
3688:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR1,
 9219              		.loc 1 3688 3
 9220 004c D7F8F430 		ldr	r3, [r7, #244]
 9221 0050 1B68     		ldr	r3, [r3]
 9222 0052 DB68     		ldr	r3, [r3, #12]
 9223 0054 23F41641 		bic	r1, r3, #38400
 9224 0058 21F00C01 		bic	r1, r1, #12
 9225 005c D7F8F430 		ldr	r3, [r7, #244]
 9226 0060 1A68     		ldr	r2, [r3]
 9227 0062 D7F8F830 		ldr	r3, [r7, #248]
 9228 0066 0B43     		orrs	r3, r3, r1
 9229 0068 D360     		str	r3, [r2, #12]
3689:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | 
3690:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****              tmpreg);
3691:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3692:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART CR3 Configuration -----------------------*/
3693:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
3694:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 9230              		.loc 1 3694 3
 9231 006a D7F8F430 		ldr	r3, [r7, #244]
 9232 006e 1B68     		ldr	r3, [r3]
 9233 0070 5B69     		ldr	r3, [r3, #20]
 9234 0072 23F44070 		bic	r0, r3, #768
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 249


 9235 0076 D7F8F430 		ldr	r3, [r7, #244]
 9236 007a 9969     		ldr	r1, [r3, #24]
 9237 007c D7F8F430 		ldr	r3, [r7, #244]
 9238 0080 1A68     		ldr	r2, [r3]
 9239 0082 40EA0103 		orr	r3, r0, r1
 9240 0086 5361     		str	r3, [r2, #20]
3695:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3696:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** 
3697:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #if defined(USART6) && defined(UART9) && defined(UART10)
3698:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) ||
3699:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3700:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3701:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3702:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #elif defined(USART6)
3703:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if ((huart->Instance == USART1) || (huart->Instance == USART6))
 9241              		.loc 1 3703 15
 9242 0088 D7F8F430 		ldr	r3, [r7, #244]
 9243 008c 1A68     		ldr	r2, [r3]
 9244              		.loc 1 3703 8
 9245 008e 8F4B     		ldr	r3, .L481
 9246 0090 9A42     		cmp	r2, r3
 9247 0092 05D0     		beq	.L475
 9248              		.loc 1 3703 46 discriminator 1
 9249 0094 D7F8F430 		ldr	r3, [r7, #244]
 9250 0098 1A68     		ldr	r2, [r3]
 9251              		.loc 1 3703 37 discriminator 1
 9252 009a 8D4B     		ldr	r3, .L481+4
 9253 009c 9A42     		cmp	r2, r3
 9254 009e 04D1     		bne	.L476
 9255              	.L475:
3704:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3705:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
 9256              		.loc 1 3705 14
 9257 00a0 FFF7FEFF 		bl	HAL_RCC_GetPCLK2Freq
 9258 00a4 C7F8FC00 		str	r0, [r7, #252]
 9259              		.loc 1 3705 12
 9260 00a8 03E0     		b	.L477
 9261              	.L476:
3706:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3707:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #else
3708:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     if (huart->Instance == USART1)
3709:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3710:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK2Freq();
3711:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3712:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** #endif /* USART6 */
3713:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     else
3714:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     {
3715:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****       pclk = HAL_RCC_GetPCLK1Freq();
 9262              		.loc 1 3715 14
 9263 00aa FFF7FEFF 		bl	HAL_RCC_GetPCLK1Freq
 9264 00ae C7F8FC00 		str	r0, [r7, #252]
 9265              	.L477:
3716:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     }
3717:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   /*-------------------------- USART BRR Configuration ---------------------*/
3718:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 9266              		.loc 1 3718 18
 9267 00b2 D7F8F430 		ldr	r3, [r7, #244]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 250


 9268 00b6 DB69     		ldr	r3, [r3, #28]
 9269              		.loc 1 3718 6
 9270 00b8 B3F5004F 		cmp	r3, #32768
 9271 00bc 40F00C81 		bne	.L478
3719:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3720:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 9272              		.loc 1 3720 28
 9273 00c0 D7F8FC30 		ldr	r3, [r7, #252]
 9274 00c4 0022     		movs	r2, #0
 9275 00c6 C7F8E830 		str	r3, [r7, #232]
 9276 00ca C7F8EC20 		str	r2, [r7, #236]
 9277 00ce D7E93A45 		ldrd	r4, [r7, #232]
 9278 00d2 2246     		mov	r2, r4
 9279 00d4 2B46     		mov	r3, r5
 9280 00d6 9118     		adds	r1, r2, r2
 9281 00d8 B965     		str	r1, [r7, #88]
 9282 00da 5B41     		adcs	r3, r3, r3
 9283 00dc FB65     		str	r3, [r7, #92]
 9284 00de D7E91623 		ldrd	r2, [r7, #88]
 9285 00e2 2146     		mov	r1, r4
 9286 00e4 12EB0108 		adds	r8, r2, r1
 9287 00e8 2946     		mov	r1, r5
 9288 00ea 43EB0109 		adc	r9, r3, r1
 9289 00ee 4FF00002 		mov	r2, #0
 9290 00f2 4FF00003 		mov	r3, #0
 9291 00f6 4FEAC903 		lsl	r3, r9, #3
 9292 00fa 43EA5873 		orr	r3, r3, r8, lsr #29
 9293 00fe 4FEAC802 		lsl	r2, r8, #3
 9294 0102 9046     		mov	r8, r2
 9295 0104 9946     		mov	r9, r3
 9296 0106 2346     		mov	r3, r4
 9297 0108 18EB0303 		adds	r3, r8, r3
 9298 010c C7F8E030 		str	r3, [r7, #224]
 9299 0110 2B46     		mov	r3, r5
 9300 0112 49EB0303 		adc	r3, r9, r3
 9301 0116 C7F8E430 		str	r3, [r7, #228]
 9302 011a D7F8F430 		ldr	r3, [r7, #244]
 9303 011e 5B68     		ldr	r3, [r3, #4]
 9304 0120 0022     		movs	r2, #0
 9305 0122 C7F8D830 		str	r3, [r7, #216]
 9306 0126 C7F8DC20 		str	r2, [r7, #220]
 9307 012a D7E93612 		ldrd	r1, [r7, #216]
 9308 012e 0B46     		mov	r3, r1
 9309 0130 DB18     		adds	r3, r3, r3
 9310 0132 3B65     		str	r3, [r7, #80]
 9311 0134 1346     		mov	r3, r2
 9312 0136 42EB0303 		adc	r3, r2, r3
 9313 013a 7B65     		str	r3, [r7, #84]
 9314 013c D7E91423 		ldrd	r2, [r7, #80]
 9315 0140 D7E93801 		ldrd	r0, [r7, #224]
 9316 0144 FFF7FEFF 		bl	__aeabi_uldivmod
 9317 0148 0246     		mov	r2, r0
 9318 014a 0B46     		mov	r3, r1
 9319 014c 614B     		ldr	r3, .L481+8
 9320 014e A3FB0223 		umull	r2, r3, r3, r2
 9321 0152 5B09     		lsrs	r3, r3, #5
 9322 0154 1C01     		lsls	r4, r3, #4
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 251


 9323 0156 D7F8FC30 		ldr	r3, [r7, #252]
 9324 015a 0022     		movs	r2, #0
 9325 015c C7F8D030 		str	r3, [r7, #208]
 9326 0160 C7F8D420 		str	r2, [r7, #212]
 9327 0164 D7E93489 		ldrd	r8, [r7, #208]
 9328 0168 4246     		mov	r2, r8
 9329 016a 4B46     		mov	r3, r9
 9330 016c 9118     		adds	r1, r2, r2
 9331 016e B964     		str	r1, [r7, #72]
 9332 0170 5B41     		adcs	r3, r3, r3
 9333 0172 FB64     		str	r3, [r7, #76]
 9334 0174 D7E91223 		ldrd	r2, [r7, #72]
 9335 0178 4146     		mov	r1, r8
 9336 017a 12EB010A 		adds	r10, r2, r1
 9337 017e 4946     		mov	r1, r9
 9338 0180 43EB010B 		adc	fp, r3, r1
 9339 0184 4FF00002 		mov	r2, #0
 9340 0188 4FF00003 		mov	r3, #0
 9341 018c 4FEACB03 		lsl	r3, fp, #3
 9342 0190 43EA5A73 		orr	r3, r3, r10, lsr #29
 9343 0194 4FEACA02 		lsl	r2, r10, #3
 9344 0198 9246     		mov	r10, r2
 9345 019a 9B46     		mov	fp, r3
 9346 019c 4346     		mov	r3, r8
 9347 019e 1AEB0303 		adds	r3, r10, r3
 9348 01a2 C7F8C830 		str	r3, [r7, #200]
 9349 01a6 4B46     		mov	r3, r9
 9350 01a8 4BEB0303 		adc	r3, fp, r3
 9351 01ac C7F8CC30 		str	r3, [r7, #204]
 9352 01b0 D7F8F430 		ldr	r3, [r7, #244]
 9353 01b4 5B68     		ldr	r3, [r3, #4]
 9354 01b6 0022     		movs	r2, #0
 9355 01b8 C7F8C030 		str	r3, [r7, #192]
 9356 01bc C7F8C420 		str	r2, [r7, #196]
 9357 01c0 D7E93012 		ldrd	r1, [r7, #192]
 9358 01c4 0B46     		mov	r3, r1
 9359 01c6 DB18     		adds	r3, r3, r3
 9360 01c8 3B64     		str	r3, [r7, #64]
 9361 01ca 1346     		mov	r3, r2
 9362 01cc 42EB0303 		adc	r3, r2, r3
 9363 01d0 7B64     		str	r3, [r7, #68]
 9364 01d2 D7E91023 		ldrd	r2, [r7, #64]
 9365 01d6 D7E93201 		ldrd	r0, [r7, #200]
 9366 01da FFF7FEFF 		bl	__aeabi_uldivmod
 9367 01de 0246     		mov	r2, r0
 9368 01e0 0B46     		mov	r3, r1
 9369 01e2 1146     		mov	r1, r2
 9370 01e4 3B4B     		ldr	r3, .L481+8
 9371 01e6 A3FB0123 		umull	r2, r3, r3, r1
 9372 01ea 5B09     		lsrs	r3, r3, #5
 9373 01ec 6422     		movs	r2, #100
 9374 01ee 02FB03F3 		mul	r3, r2, r3
 9375 01f2 CB1A     		subs	r3, r1, r3
 9376 01f4 DB00     		lsls	r3, r3, #3
 9377 01f6 03F13202 		add	r2, r3, #50
 9378 01fa 364B     		ldr	r3, .L481+8
 9379 01fc A3FB0223 		umull	r2, r3, r3, r2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 252


 9380 0200 5B09     		lsrs	r3, r3, #5
 9381 0202 5B00     		lsls	r3, r3, #1
 9382 0204 03F4F873 		and	r3, r3, #496
 9383 0208 1C44     		add	r4, r4, r3
 9384 020a D7F8FC30 		ldr	r3, [r7, #252]
 9385 020e 0022     		movs	r2, #0
 9386 0210 C7F8B830 		str	r3, [r7, #184]
 9387 0214 C7F8BC20 		str	r2, [r7, #188]
 9388 0218 D7E92E89 		ldrd	r8, [r7, #184]
 9389 021c 4246     		mov	r2, r8
 9390 021e 4B46     		mov	r3, r9
 9391 0220 9118     		adds	r1, r2, r2
 9392 0222 B963     		str	r1, [r7, #56]
 9393 0224 5B41     		adcs	r3, r3, r3
 9394 0226 FB63     		str	r3, [r7, #60]
 9395 0228 D7E90E23 		ldrd	r2, [r7, #56]
 9396 022c 4146     		mov	r1, r8
 9397 022e 5118     		adds	r1, r2, r1
 9398 0230 3963     		str	r1, [r7, #48]
 9399 0232 4946     		mov	r1, r9
 9400 0234 4B41     		adcs	r3, r3, r1
 9401 0236 7B63     		str	r3, [r7, #52]
 9402 0238 4FF00002 		mov	r2, #0
 9403 023c 4FF00003 		mov	r3, #0
 9404 0240 D7E90CAB 		ldrd	r10, [r7, #48]
 9405 0244 5946     		mov	r1, fp
 9406 0246 CB00     		lsls	r3, r1, #3
 9407 0248 5146     		mov	r1, r10
 9408 024a 43EA5173 		orr	r3, r3, r1, lsr #29
 9409 024e 5146     		mov	r1, r10
 9410 0250 CA00     		lsls	r2, r1, #3
 9411 0252 1046     		mov	r0, r2
 9412 0254 1946     		mov	r1, r3
 9413 0256 0346     		mov	r3, r0
 9414 0258 4246     		mov	r2, r8
 9415 025a 9B18     		adds	r3, r3, r2
 9416 025c C7F8B030 		str	r3, [r7, #176]
 9417 0260 4B46     		mov	r3, r9
 9418 0262 0A46     		mov	r2, r1
 9419 0264 42EB0303 		adc	r3, r2, r3
 9420 0268 C7F8B430 		str	r3, [r7, #180]
 9421 026c D7F8F430 		ldr	r3, [r7, #244]
 9422 0270 5B68     		ldr	r3, [r3, #4]
 9423 0272 0022     		movs	r2, #0
 9424 0274 C7F8A830 		str	r3, [r7, #168]
 9425 0278 C7F8AC20 		str	r2, [r7, #172]
 9426 027c D7E92A12 		ldrd	r1, [r7, #168]
 9427 0280 0B46     		mov	r3, r1
 9428 0282 DB18     		adds	r3, r3, r3
 9429 0284 BB62     		str	r3, [r7, #40]
 9430 0286 1346     		mov	r3, r2
 9431 0288 42EB0303 		adc	r3, r2, r3
 9432 028c FB62     		str	r3, [r7, #44]
 9433 028e D7E90A23 		ldrd	r2, [r7, #40]
 9434 0292 D7E92C01 		ldrd	r0, [r7, #176]
 9435 0296 FFF7FEFF 		bl	__aeabi_uldivmod
 9436 029a 0246     		mov	r2, r0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 253


 9437 029c 0B46     		mov	r3, r1
 9438 029e 0D4B     		ldr	r3, .L481+8
 9439 02a0 A3FB0213 		umull	r1, r3, r3, r2
 9440 02a4 5B09     		lsrs	r3, r3, #5
 9441 02a6 6421     		movs	r1, #100
 9442 02a8 01FB03F3 		mul	r3, r1, r3
 9443 02ac D31A     		subs	r3, r2, r3
 9444 02ae DB00     		lsls	r3, r3, #3
 9445 02b0 3233     		adds	r3, r3, #50
 9446 02b2 084A     		ldr	r2, .L481+8
 9447 02b4 A2FB0323 		umull	r2, r3, r2, r3
 9448 02b8 5B09     		lsrs	r3, r3, #5
 9449 02ba 03F00702 		and	r2, r3, #7
 9450              		.loc 1 3720 10
 9451 02be D7F8F430 		ldr	r3, [r7, #244]
 9452 02c2 1B68     		ldr	r3, [r3]
 9453              		.loc 1 3720 28
 9454 02c4 2244     		add	r2, r2, r4
 9455              		.loc 1 3720 26
 9456 02c6 9A60     		str	r2, [r3, #8]
3721:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3722:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   else
3723:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   {
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****     huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
3725:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
3726:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c **** }
 9457              		.loc 1 3726 1
 9458 02c8 05E1     		b	.L480
 9459              	.L482:
 9460 02ca 00BF     		.align	2
 9461              	.L481:
 9462 02cc 00100140 		.word	1073811456
 9463 02d0 00140140 		.word	1073812480
 9464 02d4 1F85EB51 		.word	1374389535
 9465              	.L478:
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9466              		.loc 1 3724 28
 9467 02d8 D7F8FC30 		ldr	r3, [r7, #252]
 9468 02dc 0022     		movs	r2, #0
 9469 02de C7F8A030 		str	r3, [r7, #160]
 9470 02e2 C7F8A420 		str	r2, [r7, #164]
 9471 02e6 D7E92889 		ldrd	r8, [r7, #160]
 9472 02ea 4246     		mov	r2, r8
 9473 02ec 4B46     		mov	r3, r9
 9474 02ee 9118     		adds	r1, r2, r2
 9475 02f0 3962     		str	r1, [r7, #32]
 9476 02f2 5B41     		adcs	r3, r3, r3
 9477 02f4 7B62     		str	r3, [r7, #36]
 9478 02f6 D7E90823 		ldrd	r2, [r7, #32]
 9479 02fa 4146     		mov	r1, r8
 9480 02fc 5418     		adds	r4, r2, r1
 9481 02fe 4946     		mov	r1, r9
 9482 0300 43EB0105 		adc	r5, r3, r1
 9483 0304 4FF00002 		mov	r2, #0
 9484 0308 4FF00003 		mov	r3, #0
 9485 030c EB00     		lsls	r3, r5, #3
 9486 030e 43EA5473 		orr	r3, r3, r4, lsr #29
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 254


 9487 0312 E200     		lsls	r2, r4, #3
 9488 0314 1446     		mov	r4, r2
 9489 0316 1D46     		mov	r5, r3
 9490 0318 4346     		mov	r3, r8
 9491 031a E318     		adds	r3, r4, r3
 9492 031c C7F89830 		str	r3, [r7, #152]
 9493 0320 4B46     		mov	r3, r9
 9494 0322 45EB0303 		adc	r3, r5, r3
 9495 0326 C7F89C30 		str	r3, [r7, #156]
 9496 032a D7F8F430 		ldr	r3, [r7, #244]
 9497 032e 5B68     		ldr	r3, [r3, #4]
 9498 0330 0022     		movs	r2, #0
 9499 0332 C7F89030 		str	r3, [r7, #144]
 9500 0336 C7F89420 		str	r2, [r7, #148]
 9501 033a 4FF00002 		mov	r2, #0
 9502 033e 4FF00003 		mov	r3, #0
 9503 0342 D7E92445 		ldrd	r4, [r7, #144]
 9504 0346 2946     		mov	r1, r5
 9505 0348 8B00     		lsls	r3, r1, #2
 9506 034a 2146     		mov	r1, r4
 9507 034c 43EA9173 		orr	r3, r3, r1, lsr #30
 9508 0350 2146     		mov	r1, r4
 9509 0352 8A00     		lsls	r2, r1, #2
 9510 0354 D7E92601 		ldrd	r0, [r7, #152]
 9511 0358 FFF7FEFF 		bl	__aeabi_uldivmod
 9512 035c 0246     		mov	r2, r0
 9513 035e 0B46     		mov	r3, r1
 9514 0360 604B     		ldr	r3, .L483
 9515 0362 A3FB0223 		umull	r2, r3, r3, r2
 9516 0366 5B09     		lsrs	r3, r3, #5
 9517 0368 1C01     		lsls	r4, r3, #4
 9518 036a D7F8FC30 		ldr	r3, [r7, #252]
 9519 036e 0022     		movs	r2, #0
 9520 0370 C7F88830 		str	r3, [r7, #136]
 9521 0374 C7F88C20 		str	r2, [r7, #140]
 9522 0378 D7E92289 		ldrd	r8, [r7, #136]
 9523 037c 4246     		mov	r2, r8
 9524 037e 4B46     		mov	r3, r9
 9525 0380 9118     		adds	r1, r2, r2
 9526 0382 B961     		str	r1, [r7, #24]
 9527 0384 5B41     		adcs	r3, r3, r3
 9528 0386 FB61     		str	r3, [r7, #28]
 9529 0388 D7E90623 		ldrd	r2, [r7, #24]
 9530 038c 4146     		mov	r1, r8
 9531 038e 5118     		adds	r1, r2, r1
 9532 0390 3961     		str	r1, [r7, #16]
 9533 0392 4946     		mov	r1, r9
 9534 0394 4B41     		adcs	r3, r3, r1
 9535 0396 7B61     		str	r3, [r7, #20]
 9536 0398 4FF00002 		mov	r2, #0
 9537 039c 4FF00003 		mov	r3, #0
 9538 03a0 D7E904AB 		ldrd	r10, [r7, #16]
 9539 03a4 5946     		mov	r1, fp
 9540 03a6 CB00     		lsls	r3, r1, #3
 9541 03a8 5146     		mov	r1, r10
 9542 03aa 43EA5173 		orr	r3, r3, r1, lsr #29
 9543 03ae 5146     		mov	r1, r10
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 255


 9544 03b0 CA00     		lsls	r2, r1, #3
 9545 03b2 1046     		mov	r0, r2
 9546 03b4 1946     		mov	r1, r3
 9547 03b6 0346     		mov	r3, r0
 9548 03b8 4246     		mov	r2, r8
 9549 03ba 9B18     		adds	r3, r3, r2
 9550 03bc C7F88030 		str	r3, [r7, #128]
 9551 03c0 4B46     		mov	r3, r9
 9552 03c2 0A46     		mov	r2, r1
 9553 03c4 42EB0303 		adc	r3, r2, r3
 9554 03c8 C7F88430 		str	r3, [r7, #132]
 9555 03cc D7F8F430 		ldr	r3, [r7, #244]
 9556 03d0 5B68     		ldr	r3, [r3, #4]
 9557 03d2 0022     		movs	r2, #0
 9558 03d4 BB67     		str	r3, [r7, #120]
 9559 03d6 FA67     		str	r2, [r7, #124]
 9560 03d8 4FF00002 		mov	r2, #0
 9561 03dc 4FF00003 		mov	r3, #0
 9562 03e0 D7E91E89 		ldrd	r8, [r7, #120]
 9563 03e4 4946     		mov	r1, r9
 9564 03e6 8B00     		lsls	r3, r1, #2
 9565 03e8 4146     		mov	r1, r8
 9566 03ea 43EA9173 		orr	r3, r3, r1, lsr #30
 9567 03ee 4146     		mov	r1, r8
 9568 03f0 8A00     		lsls	r2, r1, #2
 9569 03f2 D7E92001 		ldrd	r0, [r7, #128]
 9570 03f6 FFF7FEFF 		bl	__aeabi_uldivmod
 9571 03fa 0246     		mov	r2, r0
 9572 03fc 0B46     		mov	r3, r1
 9573 03fe 394B     		ldr	r3, .L483
 9574 0400 A3FB0213 		umull	r1, r3, r3, r2
 9575 0404 5B09     		lsrs	r3, r3, #5
 9576 0406 6421     		movs	r1, #100
 9577 0408 01FB03F3 		mul	r3, r1, r3
 9578 040c D31A     		subs	r3, r2, r3
 9579 040e 1B01     		lsls	r3, r3, #4
 9580 0410 3233     		adds	r3, r3, #50
 9581 0412 344A     		ldr	r2, .L483
 9582 0414 A2FB0323 		umull	r2, r3, r2, r3
 9583 0418 5B09     		lsrs	r3, r3, #5
 9584 041a 03F0F003 		and	r3, r3, #240
 9585 041e 1C44     		add	r4, r4, r3
 9586 0420 D7F8FC30 		ldr	r3, [r7, #252]
 9587 0424 0022     		movs	r2, #0
 9588 0426 3B67     		str	r3, [r7, #112]
 9589 0428 7A67     		str	r2, [r7, #116]
 9590 042a D7E91C89 		ldrd	r8, [r7, #112]
 9591 042e 4246     		mov	r2, r8
 9592 0430 4B46     		mov	r3, r9
 9593 0432 9118     		adds	r1, r2, r2
 9594 0434 B960     		str	r1, [r7, #8]
 9595 0436 5B41     		adcs	r3, r3, r3
 9596 0438 FB60     		str	r3, [r7, #12]
 9597 043a D7E90223 		ldrd	r2, [r7, #8]
 9598 043e 4146     		mov	r1, r8
 9599 0440 5118     		adds	r1, r2, r1
 9600 0442 3960     		str	r1, [r7]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 256


 9601 0444 4946     		mov	r1, r9
 9602 0446 4B41     		adcs	r3, r3, r1
 9603 0448 7B60     		str	r3, [r7, #4]
 9604 044a 4FF00002 		mov	r2, #0
 9605 044e 4FF00003 		mov	r3, #0
 9606 0452 D7E900AB 		ldrd	r10, [r7]
 9607 0456 5946     		mov	r1, fp
 9608 0458 CB00     		lsls	r3, r1, #3
 9609 045a 5146     		mov	r1, r10
 9610 045c 43EA5173 		orr	r3, r3, r1, lsr #29
 9611 0460 5146     		mov	r1, r10
 9612 0462 CA00     		lsls	r2, r1, #3
 9613 0464 1046     		mov	r0, r2
 9614 0466 1946     		mov	r1, r3
 9615 0468 0346     		mov	r3, r0
 9616 046a 4246     		mov	r2, r8
 9617 046c 9B18     		adds	r3, r3, r2
 9618 046e BB66     		str	r3, [r7, #104]
 9619 0470 4B46     		mov	r3, r9
 9620 0472 0A46     		mov	r2, r1
 9621 0474 42EB0303 		adc	r3, r2, r3
 9622 0478 FB66     		str	r3, [r7, #108]
 9623 047a D7F8F430 		ldr	r3, [r7, #244]
 9624 047e 5B68     		ldr	r3, [r3, #4]
 9625 0480 0022     		movs	r2, #0
 9626 0482 3B66     		str	r3, [r7, #96]
 9627 0484 7A66     		str	r2, [r7, #100]
 9628 0486 4FF00002 		mov	r2, #0
 9629 048a 4FF00003 		mov	r3, #0
 9630 048e D7E91889 		ldrd	r8, [r7, #96]
 9631 0492 4946     		mov	r1, r9
 9632 0494 8B00     		lsls	r3, r1, #2
 9633 0496 4146     		mov	r1, r8
 9634 0498 43EA9173 		orr	r3, r3, r1, lsr #30
 9635 049c 4146     		mov	r1, r8
 9636 049e 8A00     		lsls	r2, r1, #2
 9637 04a0 D7E91A01 		ldrd	r0, [r7, #104]
 9638 04a4 FFF7FEFF 		bl	__aeabi_uldivmod
 9639 04a8 0246     		mov	r2, r0
 9640 04aa 0B46     		mov	r3, r1
 9641 04ac 0D4B     		ldr	r3, .L483
 9642 04ae A3FB0213 		umull	r1, r3, r3, r2
 9643 04b2 5B09     		lsrs	r3, r3, #5
 9644 04b4 6421     		movs	r1, #100
 9645 04b6 01FB03F3 		mul	r3, r1, r3
 9646 04ba D31A     		subs	r3, r2, r3
 9647 04bc 1B01     		lsls	r3, r3, #4
 9648 04be 3233     		adds	r3, r3, #50
 9649 04c0 084A     		ldr	r2, .L483
 9650 04c2 A2FB0323 		umull	r2, r3, r2, r3
 9651 04c6 5B09     		lsrs	r3, r3, #5
 9652 04c8 03F00F02 		and	r2, r3, #15
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9653              		.loc 1 3724 10
 9654 04cc D7F8F430 		ldr	r3, [r7, #244]
 9655 04d0 1B68     		ldr	r3, [r3]
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 257


 9656              		.loc 1 3724 28
 9657 04d2 2244     		add	r2, r2, r4
3724:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal_uart.c ****   }
 9658              		.loc 1 3724 26
 9659 04d4 9A60     		str	r2, [r3, #8]
 9660              	.L480:
 9661              		.loc 1 3726 1
 9662 04d6 00BF     		nop
 9663 04d8 07F58077 		add	r7, r7, #256
 9664              		.cfi_def_cfa_offset 32
 9665 04dc BD46     		mov	sp, r7
 9666              		.cfi_def_cfa_register 13
 9667              		@ sp needed
 9668 04de BDE8B08F 		pop	{r4, r5, r7, r8, r9, r10, fp, pc}
 9669              	.L484:
 9670 04e2 00BF     		.align	2
 9671              	.L483:
 9672 04e4 1F85EB51 		.word	1374389535
 9673              		.cfi_endproc
 9674              	.LFE190:
 9676              		.text
 9677              	.Letext0:
 9678              		.file 3 "c:\\st\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_
 9679              		.file 4 "c:\\st\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 9680              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 9681              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 9682              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 9683              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 9684              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 258


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_hal_uart.c
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:20     .text.HAL_UART_Init:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:26     .text.HAL_UART_Init:00000000 HAL_UART_Init
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:617    .text.HAL_UART_MspInit:00000000 HAL_UART_MspInit
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:9168   .text.UART_SetConfig:00000000 UART_SetConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:131    .text.HAL_HalfDuplex_Init:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:137    .text.HAL_HalfDuplex_Init:00000000 HAL_HalfDuplex_Init
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:249    .text.HAL_LIN_Init:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:255    .text.HAL_LIN_Init:00000000 HAL_LIN_Init
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:385    .text.HAL_MultiProcessor_Init:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:391    .text.HAL_MultiProcessor_Init:00000000 HAL_MultiProcessor_Init
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:532    .text.HAL_UART_DeInit:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:538    .text.HAL_UART_DeInit:00000000 HAL_UART_DeInit
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:653    .text.HAL_UART_MspDeInit:00000000 HAL_UART_MspDeInit
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:611    .text.HAL_UART_MspInit:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:647    .text.HAL_UART_MspDeInit:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:683    .text.HAL_UART_Transmit:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:689    .text.HAL_UART_Transmit:00000000 HAL_UART_Transmit
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7532   .text.UART_WaitOnFlagUntilTimeout:00000000 UART_WaitOnFlagUntilTimeout
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:904    .text.HAL_UART_Receive:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:910    .text.HAL_UART_Receive:00000000 HAL_UART_Receive
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1149   .text.HAL_UART_Transmit_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1155   .text.HAL_UART_Transmit_IT:00000000 HAL_UART_Transmit_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1260   .text.HAL_UART_Receive_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1266   .text.HAL_UART_Receive_IT:00000000 HAL_UART_Receive_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7730   .text.UART_Start_Receive_IT:00000000 UART_Start_Receive_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1345   .text.HAL_UART_Transmit_DMA:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1351   .text.HAL_UART_Transmit_DMA:00000000 HAL_UART_Transmit_DMA
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1543   .text.HAL_UART_Transmit_DMA:000000f0 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6882   .text.UART_DMATransmitCplt:00000000 UART_DMATransmitCplt
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7041   .text.UART_DMATxHalfCplt:00000000 UART_DMATxHalfCplt
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7422   .text.UART_DMAError:00000000 UART_DMAError
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1550   .text.HAL_UART_Receive_DMA:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1556   .text.HAL_UART_Receive_DMA:00000000 HAL_UART_Receive_DMA
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7819   .text.UART_Start_Receive_DMA:00000000 UART_Start_Receive_DMA
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1635   .text.HAL_UART_DMAPause:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1641   .text.HAL_UART_DMAPause:00000000 HAL_UART_DMAPause
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1946   .text.HAL_UART_DMAResume:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:1952   .text.HAL_UART_DMAResume:00000000 HAL_UART_DMAResume
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2236   .text.HAL_UART_DMAStop:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2242   .text.HAL_UART_DMAStop:00000000 HAL_UART_DMAStop
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8090   .text.UART_EndTxTransfer:00000000 UART_EndTxTransfer
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8180   .text.UART_EndRxTransfer:00000000 UART_EndRxTransfer
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2454   .text.HAL_UARTEx_ReceiveToIdle:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2460   .text.HAL_UARTEx_ReceiveToIdle:00000000 HAL_UARTEx_ReceiveToIdle
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2775   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2781   .text.HAL_UARTEx_ReceiveToIdle_IT:00000000 HAL_UARTEx_ReceiveToIdle_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2944   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:2950   .text.HAL_UARTEx_ReceiveToIdle_DMA:00000000 HAL_UARTEx_ReceiveToIdle_DMA
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:3113   .text.HAL_UART_Abort:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:3119   .text.HAL_UART_Abort:00000000 HAL_UART_Abort
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:3527   .text.HAL_UART_AbortTransmit:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:3533   .text.HAL_UART_AbortTransmit:00000000 HAL_UART_AbortTransmit
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:3719   .text.HAL_UART_AbortReceive:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:3725   .text.HAL_UART_AbortReceive:00000000 HAL_UART_AbortReceive
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4024   .text.HAL_UART_Abort_IT:00000000 $t
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 259


C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4030   .text.HAL_UART_Abort_IT:00000000 HAL_UART_Abort_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6120   .text.HAL_UART_AbortCpltCallback:00000000 HAL_UART_AbortCpltCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4486   .text.HAL_UART_Abort_IT:00000220 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8430   .text.UART_DMATxAbortCallback:00000000 UART_DMATxAbortCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8518   .text.UART_DMARxAbortCallback:00000000 UART_DMARxAbortCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4492   .text.HAL_UART_AbortTransmit_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4498   .text.HAL_UART_AbortTransmit_IT:00000000 HAL_UART_AbortTransmit_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6156   .text.HAL_UART_AbortTransmitCpltCallback:00000000 HAL_UART_AbortTransmitCpltCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4696   .text.HAL_UART_AbortTransmit_IT:000000e4 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8606   .text.UART_DMATxOnlyAbortCallback:00000000 UART_DMATxOnlyAbortCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4701   .text.HAL_UART_AbortReceive_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:4707   .text.HAL_UART_AbortReceive_IT:00000000 HAL_UART_AbortReceive_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6192   .text.HAL_UART_AbortReceiveCpltCallback:00000000 HAL_UART_AbortReceiveCpltCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5022   .text.HAL_UART_AbortReceive_IT:00000160 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8653   .text.UART_DMARxOnlyAbortCallback:00000000 UART_DMARxOnlyAbortCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5027   .text.HAL_UART_IRQHandler:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5033   .text.HAL_UART_IRQHandler:00000000 HAL_UART_IRQHandler
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8883   .text.UART_Receive_IT:00000000 UART_Receive_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6084   .text.HAL_UART_ErrorCallback:00000000 HAL_UART_ErrorCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6228   .text.HAL_UARTEx_RxEventCallback:00000000 HAL_UARTEx_RxEventCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5677   .text.HAL_UART_IRQHandler:000003dc $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8383   .text.UART_DMAAbortOnError:00000000 UART_DMAAbortOnError
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5682   .text.HAL_UART_IRQHandler:000003e0 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8704   .text.UART_Transmit_IT:00000000 UART_Transmit_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8834   .text.UART_EndTransmit_IT:00000000 UART_EndTransmit_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5934   .text.HAL_UART_TxCpltCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5940   .text.HAL_UART_TxCpltCallback:00000000 HAL_UART_TxCpltCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5970   .text.HAL_UART_TxHalfCpltCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:5976   .text.HAL_UART_TxHalfCpltCallback:00000000 HAL_UART_TxHalfCpltCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6006   .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6012   .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6042   .text.HAL_UART_RxHalfCpltCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6048   .text.HAL_UART_RxHalfCpltCallback:00000000 HAL_UART_RxHalfCpltCallback
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6078   .text.HAL_UART_ErrorCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6114   .text.HAL_UART_AbortCpltCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6150   .text.HAL_UART_AbortTransmitCpltCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6186   .text.HAL_UART_AbortReceiveCpltCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6222   .text.HAL_UARTEx_RxEventCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6260   .text.HAL_LIN_SendBreak:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6266   .text.HAL_LIN_SendBreak:00000000 HAL_LIN_SendBreak
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6375   .text.HAL_MultiProcessor_EnterMuteMode:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6381   .text.HAL_MultiProcessor_EnterMuteMode:00000000 HAL_MultiProcessor_EnterMuteMode
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6490   .text.HAL_MultiProcessor_ExitMuteMode:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6496   .text.HAL_MultiProcessor_ExitMuteMode:00000000 HAL_MultiProcessor_ExitMuteMode
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6605   .text.HAL_HalfDuplex_EnableTransmitter:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6611   .text.HAL_HalfDuplex_EnableTransmitter:00000000 HAL_HalfDuplex_EnableTransmitter
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6691   .text.HAL_HalfDuplex_EnableReceiver:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6697   .text.HAL_HalfDuplex_EnableReceiver:00000000 HAL_HalfDuplex_EnableReceiver
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6777   .text.HAL_UART_GetState:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6783   .text.HAL_UART_GetState:00000000 HAL_UART_GetState
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6838   .text.HAL_UART_GetError:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6844   .text.HAL_UART_GetError:00000000 HAL_UART_GetError
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:6877   .text.UART_DMATransmitCplt:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7036   .text.UART_DMATxHalfCplt:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7075   .text.UART_DMAReceiveCplt:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7080   .text.UART_DMAReceiveCplt:00000000 UART_DMAReceiveCplt
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7359   .text.UART_DMARxHalfCplt:00000000 $t
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 260


C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7364   .text.UART_DMARxHalfCplt:00000000 UART_DMARxHalfCplt
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7417   .text.UART_DMAError:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7527   .text.UART_WaitOnFlagUntilTimeout:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7724   .text.UART_Start_Receive_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:7813   .text.UART_Start_Receive_DMA:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8078   .text.UART_Start_Receive_DMA:00000128 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8085   .text.UART_EndTxTransfer:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8175   .text.UART_EndRxTransfer:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8378   .text.UART_DMAAbortOnError:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8425   .text.UART_DMATxAbortCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8513   .text.UART_DMARxAbortCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8601   .text.UART_DMATxOnlyAbortCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8648   .text.UART_DMARxOnlyAbortCallback:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8699   .text.UART_Transmit_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8829   .text.UART_EndTransmit_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:8878   .text.UART_Receive_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:9163   .text.UART_SetConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:9462   .text.UART_SetConfig:000002cc $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:9467   .text.UART_SetConfig:000002d8 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s:9672   .text.UART_SetConfig:000004e4 $d
                           .group:00000000 wm4.0.3f0a1ce06f5181ce1e459e863b34cfe2
                           .group:00000000 wm4.stm32f4xx_hal_conf.h.24.cf658e84b370a79d74d698f3596005c8
                           .group:00000000 wm4.stm32f4xx.h.39.163e65267b4f964a08764289722b975f
                           .group:00000000 wm4.stm32f411xe.h.35.cd95d7dd18e2bcbd243b87f30f907448
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm4.h.66.e4ff136c4a17abc46741866f64f8e729
                           .group:00000000 wm4.cmsis_gcc.h.26.6774fe91202d65f4d5ffcff60e00da34
                           .group:00000000 wm4.core_cm4.h.174.059a5e001a9e729091d1407208e93224
                           .group:00000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:00000000 wm4.stm32f411xe.h.637.23266af44350a3b17e44f737eb041fcc
                           .group:00000000 wm4.stm32f4xx.h.196.0b21137cf6c6923d8fd1f4d94a3bfdd4
                           .group:00000000 wm4.stm32_hal_legacy.h.23.e2601123cf1b2a3b6d11d949644ddf87
                           .group:00000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:00000000 wm4.stm32f4xx_hal_def.h.58.f614308b482cecea9bcc0016240ac0fc
                           .group:00000000 wm4.stm32f4xx_hal_rcc_ex.h.22.279815e0741daf6badf72c0892228ec2
                           .group:00000000 wm4.stm32f4xx_hal_rcc.h.108.b82c8c670b41d96b2920e2f63661be15
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.22.e47df9f0f5be4ddc2ed2d14042c5e680
                           .group:00000000 wm4.stm32f4xx_hal_gpio_ex.h.22.07bba510ffde2028a7018ee98a87799d
                           .group:00000000 wm4.stm32f4xx_hal_gpio.h.255.5b948d47ad1357d6d2213e5e5ca4755c
                           .group:00000000 wm4.stm32f4xx_hal_exti.h.22.1f47767199c5bf749c04088e5c61c9c8
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.22.fffce20ac9119c50557659c75e75ab1c
                           .group:00000000 wm4.stm32f4xx_hal_dma.h.721.a1e57ffbc615f926e6509c5acc65e492
                           .group:00000000 wm4.stm32f4xx_hal_cortex.h.22.e6aa3b847b5388be63c32d1f9e696ef7
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.22.31b301be2655c3eb8583e51c8231544a
                           .group:00000000 wm4.stm32f4xx_hal_flash_ex.h.22.bdc1f651ef1384763525e869ecf4379e
                           .group:00000000 wm4.stm32f4xx_hal_flash.h.363.51efdf0f6c88f683efb89d7cc95cc1be
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.22.2c27d93ae187efe3a73816f03a329970
                           .group:00000000 wm4.stm32f4xx_hal_pwr_ex.h.22.04eb3957e13ca6e5ed8952d2d168bdc0
                           .group:00000000 wm4.stm32f4xx_hal_pwr.h.337.60b43975c84527a23cb6994b23165a5e
                           .group:00000000 wm4.stm32f4xx_hal_uart.h.22.591b491756a19342b0bf79eea5b33e1b
                           .group:00000000 wm4.stm32f4xx_hal.h.72.a5a58188aa461a0614f1e58e159c7840
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccd3E6G2.s 			page 261



UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
HAL_DMA_GetError
HAL_DMA_Abort_IT
__aeabi_uldivmod
HAL_RCC_GetPCLK2Freq
HAL_RCC_GetPCLK1Freq

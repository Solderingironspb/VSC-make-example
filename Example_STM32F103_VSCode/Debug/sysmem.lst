ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"sysmem.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.bss.__sbrk_heap_end,"aw",%nobits
  18              		.align	2
  21              	__sbrk_heap_end:
  22 0000 00000000 		.space	4
  23              		.section	.text._sbrk,"ax",%progbits
  24              		.align	1
  25              		.global	_sbrk
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  30              	_sbrk:
  31              	.LFB0:
  32              		.file 1 "Core/Src/sysmem.c"
   1:Core/Src/sysmem.c **** /**
   2:Core/Src/sysmem.c ****  ******************************************************************************
   3:Core/Src/sysmem.c ****  * @file      sysmem.c
   4:Core/Src/sysmem.c ****  * @author    Generated by STM32CubeIDE
   5:Core/Src/sysmem.c ****  * @brief     STM32CubeIDE System Memory calls file
   6:Core/Src/sysmem.c ****  *
   7:Core/Src/sysmem.c ****  *            For more information about which C functions
   8:Core/Src/sysmem.c ****  *            need which of these lowlevel functions
   9:Core/Src/sysmem.c ****  *            please consult the newlib libc manual
  10:Core/Src/sysmem.c ****  ******************************************************************************
  11:Core/Src/sysmem.c ****  * @attention
  12:Core/Src/sysmem.c ****  *
  13:Core/Src/sysmem.c ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  14:Core/Src/sysmem.c ****  * All rights reserved.</center></h2>
  15:Core/Src/sysmem.c ****  *
  16:Core/Src/sysmem.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  17:Core/Src/sysmem.c ****  * the "License"; You may not use this file except in compliance with the
  18:Core/Src/sysmem.c ****  * License. You may obtain a copy of the License at:
  19:Core/Src/sysmem.c ****  *                        opensource.org/licenses/BSD-3-Clause
  20:Core/Src/sysmem.c ****  *
  21:Core/Src/sysmem.c ****  ******************************************************************************
  22:Core/Src/sysmem.c ****  */
  23:Core/Src/sysmem.c **** 
  24:Core/Src/sysmem.c **** /* Includes */
  25:Core/Src/sysmem.c **** #include <errno.h>
  26:Core/Src/sysmem.c **** #include <stdint.h>
  27:Core/Src/sysmem.c **** 
  28:Core/Src/sysmem.c **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s 			page 2


  29:Core/Src/sysmem.c ****  * Pointer to the current high watermark of the heap usage
  30:Core/Src/sysmem.c ****  */
  31:Core/Src/sysmem.c **** static uint8_t *__sbrk_heap_end = NULL;
  32:Core/Src/sysmem.c **** 
  33:Core/Src/sysmem.c **** /**
  34:Core/Src/sysmem.c ****  * @brief _sbrk() allocates memory to the newlib heap and is used by malloc
  35:Core/Src/sysmem.c ****  *        and others from the C library
  36:Core/Src/sysmem.c ****  *
  37:Core/Src/sysmem.c ****  * @verbatim
  38:Core/Src/sysmem.c ****  * ############################################################################
  39:Core/Src/sysmem.c ****  * #  .data  #  .bss  #       newlib heap       #          MSP stack          #
  40:Core/Src/sysmem.c ****  * #         #        #                         # Reserved by _Min_Stack_Size #
  41:Core/Src/sysmem.c ****  * ############################################################################
  42:Core/Src/sysmem.c ****  * ^-- RAM start      ^-- _end                             _estack, RAM end --^
  43:Core/Src/sysmem.c ****  * @endverbatim
  44:Core/Src/sysmem.c ****  *
  45:Core/Src/sysmem.c ****  * This implementation starts allocating at the '_end' linker symbol
  46:Core/Src/sysmem.c ****  * The '_Min_Stack_Size' linker symbol reserves a memory for the MSP stack
  47:Core/Src/sysmem.c ****  * The implementation considers '_estack' linker symbol to be RAM end
  48:Core/Src/sysmem.c ****  * NOTE: If the MSP stack, at any point during execution, grows larger than the
  49:Core/Src/sysmem.c ****  * reserved size, please increase the '_Min_Stack_Size'.
  50:Core/Src/sysmem.c ****  *
  51:Core/Src/sysmem.c ****  * @param incr Memory size
  52:Core/Src/sysmem.c ****  * @return Pointer to allocated memory
  53:Core/Src/sysmem.c ****  */
  54:Core/Src/sysmem.c **** void *_sbrk(ptrdiff_t incr)
  55:Core/Src/sysmem.c **** {
  33              		.loc 1 55 1
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 24
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              	.LCFI0:
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
  42 0002 86B0     		sub	sp, sp, #24
  43              	.LCFI1:
  44              		.cfi_def_cfa_offset 32
  45 0004 00AF     		add	r7, sp, #0
  46              	.LCFI2:
  47              		.cfi_def_cfa_register 7
  48 0006 7860     		str	r0, [r7, #4]
  56:Core/Src/sysmem.c ****   extern uint8_t _end; /* Symbol defined in the linker script */
  57:Core/Src/sysmem.c ****   extern uint8_t _estack; /* Symbol defined in the linker script */
  58:Core/Src/sysmem.c ****   extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  59:Core/Src/sysmem.c ****   const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
  49              		.loc 1 59 32
  50 0008 144A     		ldr	r2, .L5
  51              		.loc 1 59 53
  52 000a 154B     		ldr	r3, .L5+4
  53              		.loc 1 59 18
  54 000c D31A     		subs	r3, r2, r3
  55 000e 7B61     		str	r3, [r7, #20]
  60:Core/Src/sysmem.c ****   const uint8_t *max_heap = (uint8_t *)stack_limit;
  56              		.loc 1 60 18
  57 0010 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s 			page 3


  58 0012 3B61     		str	r3, [r7, #16]
  61:Core/Src/sysmem.c ****   uint8_t *prev_heap_end;
  62:Core/Src/sysmem.c **** 
  63:Core/Src/sysmem.c ****   /* Initialize heap end at first call */
  64:Core/Src/sysmem.c ****   if (NULL == __sbrk_heap_end)
  59              		.loc 1 64 12
  60 0014 134B     		ldr	r3, .L5+8
  61 0016 1B68     		ldr	r3, [r3]
  62              		.loc 1 64 6
  63 0018 002B     		cmp	r3, #0
  64 001a 02D1     		bne	.L2
  65:Core/Src/sysmem.c ****   {
  66:Core/Src/sysmem.c ****     __sbrk_heap_end = &_end;
  65              		.loc 1 66 21
  66 001c 114B     		ldr	r3, .L5+8
  67 001e 124A     		ldr	r2, .L5+12
  68 0020 1A60     		str	r2, [r3]
  69              	.L2:
  67:Core/Src/sysmem.c ****   }
  68:Core/Src/sysmem.c **** 
  69:Core/Src/sysmem.c ****   /* Protect heap from growing into the reserved MSP stack */
  70:Core/Src/sysmem.c ****   if (__sbrk_heap_end + incr > max_heap)
  70              		.loc 1 70 23
  71 0022 104B     		ldr	r3, .L5+8
  72 0024 1A68     		ldr	r2, [r3]
  73 0026 7B68     		ldr	r3, [r7, #4]
  74 0028 1344     		add	r3, r3, r2
  75              		.loc 1 70 6
  76 002a 3A69     		ldr	r2, [r7, #16]
  77 002c 9A42     		cmp	r2, r3
  78 002e 07D2     		bcs	.L3
  71:Core/Src/sysmem.c ****   {
  72:Core/Src/sysmem.c ****     errno = ENOMEM;
  79              		.loc 1 72 5
  80 0030 FFF7FEFF 		bl	__errno
  81 0034 0346     		mov	r3, r0
  82              		.loc 1 72 11
  83 0036 0C22     		movs	r2, #12
  84 0038 1A60     		str	r2, [r3]
  73:Core/Src/sysmem.c ****     return (void *)-1;
  85              		.loc 1 73 12
  86 003a 4FF0FF33 		mov	r3, #-1
  87 003e 09E0     		b	.L4
  88              	.L3:
  74:Core/Src/sysmem.c ****   }
  75:Core/Src/sysmem.c **** 
  76:Core/Src/sysmem.c ****   prev_heap_end = __sbrk_heap_end;
  89              		.loc 1 76 17
  90 0040 084B     		ldr	r3, .L5+8
  91 0042 1B68     		ldr	r3, [r3]
  92 0044 FB60     		str	r3, [r7, #12]
  77:Core/Src/sysmem.c ****   __sbrk_heap_end += incr;
  93              		.loc 1 77 19
  94 0046 074B     		ldr	r3, .L5+8
  95 0048 1A68     		ldr	r2, [r3]
  96 004a 7B68     		ldr	r3, [r7, #4]
  97 004c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s 			page 4


  98 004e 054A     		ldr	r2, .L5+8
  99 0050 1360     		str	r3, [r2]
  78:Core/Src/sysmem.c **** 
  79:Core/Src/sysmem.c ****   return (void *)prev_heap_end;
 100              		.loc 1 79 10
 101 0052 FB68     		ldr	r3, [r7, #12]
 102              	.L4:
  80:Core/Src/sysmem.c **** }
 103              		.loc 1 80 1
 104 0054 1846     		mov	r0, r3
 105 0056 1837     		adds	r7, r7, #24
 106              	.LCFI3:
 107              		.cfi_def_cfa_offset 8
 108 0058 BD46     		mov	sp, r7
 109              	.LCFI4:
 110              		.cfi_def_cfa_register 13
 111              		@ sp needed
 112 005a 80BD     		pop	{r7, pc}
 113              	.L6:
 114              		.align	2
 115              	.L5:
 116 005c 00000000 		.word	_estack
 117 0060 00000000 		.word	_Min_Stack_Size
 118 0064 00000000 		.word	__sbrk_heap_end
 119 0068 00000000 		.word	_end
 120              		.cfi_endproc
 121              	.LFE0:
 123              		.text
 124              	.Letext0:
 125              		.file 2 "c:\\st\\tools\\gcc-arm-none-eabi-10.3-2021.10\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\
 126              		.file 3 "c:\\st\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_
 127              		.file 4 "c:\\st\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s 			page 5


DEFINED SYMBOLS
                            *ABS*:00000000 sysmem.c
C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s:18     .bss.__sbrk_heap_end:00000000 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s:21     .bss.__sbrk_heap_end:00000000 __sbrk_heap_end
C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s:24     .text._sbrk:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s:30     .text._sbrk:00000000 _sbrk
C:\Users\SOLDER~1\AppData\Local\Temp\ccNCcE7f.s:116    .text._sbrk:0000005c $d
                           .group:00000000 wm4.0.d9432509ec5305882a7a94b501b92427
                           .group:00000000 wm4.errno.h.2.ba016d646105af6cad23be83630b6a3f
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.newlib.h.18.1c9fedb6b3cd797cff253cc0fd593ef2
                           .group:00000000 wm4.ieeefp.h.77.25247dc27dbe3b23bfe98c2dc18f6ac5
                           .group:00000000 wm4.features.h.22.fad1cec3bc7ff06488171438dbdcfd02
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._default_types.h.6.959254cf5f09734ea7516c89e8bb21bd
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.errno.h.14.6a5939d3ae7434a1e97991a97123b12d
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed

UNDEFINED SYMBOLS
__errno
_estack
_Min_Stack_Size
_end

ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32l1xx_hal_flash_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
  18              		.align	1
  19              		.global	HAL_FLASHEx_Erase
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_FLASHEx_Erase:
  25              	.LFB72:
  26              		.file 1 "Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c"
   1:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
   2:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ******************************************************************************
   3:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @file    stm32l1xx_hal_flash_ex.c
   4:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   6:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
   7:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following
   8:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *          functionalities of the internal FLASH memory:
   9:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            + FLASH Interface configuration
  10:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            + FLASH Memory Erasing
  11:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            + DATA EEPROM Programming/Erasing
  12:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            + Option Bytes Programming
  13:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            + Interrupts management
  14:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
  15:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   @verbatim
  16:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ==============================================================================
  17:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                ##### Flash peripheral Extended features  #####
  18:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ==============================================================================
  19:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  20:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   [..] Comparing to other products, the FLASH interface for STM32L1xx
  21:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        devices contains the following additional features
  22:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (+) Erase functions
  23:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (+) DATA_EEPROM memory management
  24:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (+) BOOT option bit configuration
  25:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (+) PCROP protection for all sectors
  26:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  27:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  28:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ==============================================================================
  29:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory
  30:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        of all STM32L1xx. It includes:
  31:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (+) Full DATA_EEPROM erase and program management
  32:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (+) Boot activation
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 2


  33:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (+) PCROP protection configuration and control for all pages
  34:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  35:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   @endverbatim
  36:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ******************************************************************************
  37:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @attention
  38:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
  39:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  40:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * All rights reserved.</center></h2>
  41:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
  42:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  43:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * the "License"; You may not use this file except in compliance with the
  44:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * License. You may obtain a copy of the License at:
  45:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *                        opensource.org/licenses/BSD-3-Clause
  46:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
  47:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ******************************************************************************
  48:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  49:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  50:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  51:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #include "stm32l1xx_hal.h"
  52:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  53:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @addtogroup STM32L1xx_HAL_Driver
  54:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
  55:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  56:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  57:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  58:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @addtogroup FLASH
  59:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
  60:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  61:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Variables
  62:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  * @{
  63:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  */
  64:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Variables used for Erase pages under interruption*/
  65:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  66:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
  67:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
  68:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  69:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  70:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
  71:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
  72:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  73:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  74:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  75:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  76:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
  77:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  78:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  79:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
  80:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  81:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Constants FLASHEx Private Constants
  82:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  * @{
  83:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  */
  84:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
  85:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
  86:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  87:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  88:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
  89:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Macros FLASHEx Private Macros
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 3


  90:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
  91:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  92:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
  93:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
  94:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
  95:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
  96:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
  97:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
  98:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Functions FLASHEx Private Functions
  99:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  * @{
 100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  */
 101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** void                      FLASH_PageErase(uint32_t PageAddress);
 102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_WRPConfig(FLASH_OBProgramInitTypeDef *pOBInit, FunctionalState N
 103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void               FLASH_OB_WRPConfigWRP1OrPCROP1(uint32_t WRP1OrPCROP1, FunctionalState New
 104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xC) || defined(STM32L151xC) || defined(STM32L152xC) || defined(STM32L162xC)   
 105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L151xCA) || defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xCA)
 106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xD) || defined(STM32L152xDX) || defined(STM32L162xCA) || defined(STM32L162xD) 
 107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE)
 108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void               FLASH_OB_WRPConfigWRP2OrPCROP2(uint32_t WRP2OrPCROP2, FunctionalState New
 109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xC || STM32L151xC || STM32L152xC || (...) || STM32L151xE || STM32L152xE || STM32
 110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xD) || defined(STM32L152xDX) 
 111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xD) || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE)  
 112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xE)
 113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void               FLASH_OB_WRPConfigWRP3(uint32_t WRP3, FunctionalState NewState);
 114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xD || STM32L152xD || STM32L162xD || STM32L151xE || STM32L152xE || STM32L162xE */
 115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE) || defined(STM32L151xDX) \
 116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xDX) || defined(STM32L162xDX)
 117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void               FLASH_OB_WRPConfigWRP4(uint32_t WRP4, FunctionalState NewState);
 118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xE || STM32L152xE || STM32L151xDX || ... */
 119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_SPRMOD)
 120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_PCROPConfig(FLASH_AdvOBProgramInitTypeDef *pAdvOBInit, Functiona
 121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_SPRMOD */
 122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_nRST_BFB2)
 123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BootConfig(uint8_t OB_BOOT);
 124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_nRST_BFB2 */
 125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_RDPConfig(uint8_t OB_RDP);
 126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY);
 127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_OB_BORConfig(uint8_t OB_BOR);
 128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetRDP(void);
 129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetUser(void);
 130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static uint8_t            FLASH_OB_GetBOR(void);
 131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_DATAEEPROM_FastProgramByte(uint32_t Address, uint8_t Data);
 132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_DATAEEPROM_FastProgramHalfWord(uint32_t Address, uint16_t Data);
 133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_DATAEEPROM_FastProgramWord(uint32_t Address, uint32_t Data);
 134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_DATAEEPROM_ProgramWord(uint32_t Address, uint32_t Data);
 135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_DATAEEPROM_ProgramHalfWord(uint32_t Address, uint16_t Data);
 136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef  FLASH_DATAEEPROM_ProgramByte(uint32_t Address, uint8_t Data);
 137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
 139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /* Exported functions ---------------------------------------------------------*/
 142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
 143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
 144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 FLASHEx Memory Erasing functions
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 4


 147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  *  @brief   FLASH Memory Erasing functions
 148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  *
 149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** @verbatim
 150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ==============================================================================
 151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                 ##### FLASH Erasing Programming functions #####
 152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ==============================================================================
 153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     [..] The FLASH Memory Erasing functions, includes the following functions:
 155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase: return only when erase has been done
 156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase_IT: end of erase is done when @ref HAL_FLASH_EndOfOperationCallback
 157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         is called with parameter 0xFFFFFFFF
 158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     [..] Any operation of erase should follow these steps:
 160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Unlock() function to enable the flash control register and
 161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         program memory access.
 162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the desired function to erase page.
 163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Lock() to disable the flash program memory access
 164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****        (recommended to protect the FLASH memory against possible unwanted operation).
 165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** @endverbatim
 167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
 168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory Pages
 172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         must be called before.
 174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access
 175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   For STM32L151xDX/STM32L152xDX/STM32L162xDX, as memory is not continuous between
 177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         2 banks, user should perform pages erase by bank only.
 178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param[out]  PageError pointer to variable  that
 182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains the configuration information on faulty page in case of error
 183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the pages have been correctly erased)
 184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *PageError)
 188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
  27              		.loc 1 188 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 16
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 84B0     		sub	sp, sp, #16
  36              		.cfi_def_cfa_offset 24
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  40 0008 3960     		str	r1, [r7]
 189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 5


  41              		.loc 1 189 21
  42 000a 0123     		movs	r3, #1
  43 000c FB73     		strb	r3, [r7, #15]
 190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t address = 0U;
  44              		.loc 1 190 12
  45 000e 0023     		movs	r3, #0
  46 0010 BB60     		str	r3, [r7, #8]
 191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Process Locked */
 193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
  47              		.loc 1 193 3
  48 0012 254B     		ldr	r3, .L8
  49 0014 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
  50 0016 012B     		cmp	r3, #1
  51 0018 01D1     		bne	.L2
  52              		.loc 1 193 3 is_stmt 0 discriminator 1
  53 001a 0223     		movs	r3, #2
  54 001c 40E0     		b	.L3
  55              	.L2:
  56              		.loc 1 193 3 discriminator 2
  57 001e 224B     		ldr	r3, .L8
  58 0020 0122     		movs	r2, #1
  59 0022 1A74     		strb	r2, [r3, #16]
 194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
  60              		.loc 1 196 12 is_stmt 1 discriminator 2
  61 0024 4CF25030 		movw	r0, #50000
  62 0028 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  63 002c 0346     		mov	r3, r0
  64 002e FB73     		strb	r3, [r7, #15]
 197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (status == HAL_OK)
  65              		.loc 1 198 6 discriminator 2
  66 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
  67 0032 002B     		cmp	r3, #0
  68 0034 30D1     		bne	.L4
 199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /*Initialization of PageError variable*/
 201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     *PageError = 0xFFFFFFFFU;
  69              		.loc 1 201 16
  70 0036 3B68     		ldr	r3, [r7]
  71 0038 4FF0FF32 		mov	r2, #-1
  72 003c 1A60     		str	r2, [r3]
 202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Check the parameters */
 204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     assert_param(IS_NBPAGES(pEraseInit->NbPages));
 205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1U)) + pEr
 208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xDX) || defined(STM32L152xDX) || defined(STM32L162xDX)
 210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Check on which bank belongs the 1st address to erase */
 211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pEraseInit->PageAddress < FLASH_BANK2_BASE)
 212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* BANK1 */
 214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Check that last page to erase still belongs to BANK1 */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 6


 215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if (((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1U)) + pEraseInit->NbPages * FLASH_PAGE_S
 216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
 217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /*  Last page does not belong to BANK1, erase procedure cannot be performed because memory 
 218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****             continuous */
 219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /* Process Unlocked */
 220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         __HAL_UNLOCK(&pFlash);
 221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         return HAL_ERROR;
 222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
 223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
 225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* BANK2 */
 227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Check that last page to erase still belongs to BANK2 */
 228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if (((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1U)) + pEraseInit->NbPages * FLASH_PAGE_S
 229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
 230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /*  Last page does not belong to BANK2, erase procedure cannot be performed because memory 
 231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****             continuous */
 232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /* Process Unlocked */
 233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         __HAL_UNLOCK(&pFlash);
 234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         return HAL_ERROR;
 235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
 236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xDX || STM32L152xDX || STM32L162xDX */
 238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Erase page by page to be done*/
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     for(address = pEraseInit->PageAddress;
  73              		.loc 1 240 17
  74 003e 7B68     		ldr	r3, [r7, #4]
  75 0040 5B68     		ldr	r3, [r3, #4]
  76 0042 BB60     		str	r3, [r7, #8]
  77              		.loc 1 240 5
  78 0044 1FE0     		b	.L5
  79              	.L7:
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       FLASH_PageErase(address);
  80              		.loc 1 244 7
  81 0046 B868     		ldr	r0, [r7, #8]
  82 0048 FFF7FEFF 		bl	FLASH_PageErase
 245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
  83              		.loc 1 247 16
  84 004c 4CF25030 		movw	r0, #50000
  85 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
  86 0054 0346     		mov	r3, r0
  87 0056 FB73     		strb	r3, [r7, #15]
 248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* If the erase operation is completed, disable the ERASE Bit */
 250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->PECR, FLASH_PECR_PROG);
  88              		.loc 1 250 7
  89 0058 144B     		ldr	r3, .L8+4
  90 005a 5B68     		ldr	r3, [r3, #4]
  91 005c 134A     		ldr	r2, .L8+4
  92 005e 23F00803 		bic	r3, r3, #8
  93 0062 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 7


 251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->PECR, FLASH_PECR_ERASE);
  94              		.loc 1 251 7
  95 0064 114B     		ldr	r3, .L8+4
  96 0066 5B68     		ldr	r3, [r3, #4]
  97 0068 104A     		ldr	r2, .L8+4
  98 006a 23F40073 		bic	r3, r3, #512
  99 006e 5360     		str	r3, [r2, #4]
 252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if (status != HAL_OK)
 100              		.loc 1 253 10
 101 0070 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 102 0072 002B     		cmp	r3, #0
 103 0074 03D0     		beq	.L6
 254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
 255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /* In case of error, stop erase procedure and return the faulty address */
 256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         *PageError = address;
 104              		.loc 1 256 20
 105 0076 3B68     		ldr	r3, [r7]
 106 0078 BA68     		ldr	r2, [r7, #8]
 107 007a 1A60     		str	r2, [r3]
 257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         break;
 108              		.loc 1 257 9
 109 007c 0CE0     		b	.L4
 110              	.L6:
 242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 111              		.loc 1 242 17
 112 007e BB68     		ldr	r3, [r7, #8]
 113 0080 03F58073 		add	r3, r3, #256
 114 0084 BB60     		str	r3, [r7, #8]
 115              	.L5:
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 116              		.loc 1 241 31 discriminator 1
 117 0086 7B68     		ldr	r3, [r7, #4]
 118 0088 9B68     		ldr	r3, [r3, #8]
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 119              		.loc 1 241 41 discriminator 1
 120 008a 1A02     		lsls	r2, r3, #8
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 121              		.loc 1 241 72 discriminator 1
 122 008c 7B68     		ldr	r3, [r7, #4]
 123 008e 5B68     		ldr	r3, [r3, #4]
 241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         address += FLASH_PAGE_SIZE)
 124              		.loc 1 241 60 discriminator 1
 125 0090 1344     		add	r3, r3, r2
 240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 126              		.loc 1 240 5 discriminator 1
 127 0092 BA68     		ldr	r2, [r7, #8]
 128 0094 9A42     		cmp	r2, r3
 129 0096 D6D3     		bcc	.L7
 130              	.L4:
 258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
 259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Process Unlocked */
 263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 131              		.loc 1 263 3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 8


 132 0098 034B     		ldr	r3, .L8
 133 009a 0022     		movs	r2, #0
 134 009c 1A74     		strb	r2, [r3, #16]
 264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 135              		.loc 1 265 10
 136 009e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 137              	.L3:
 266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 138              		.loc 1 266 1
 139 00a0 1846     		mov	r0, r3
 140 00a2 1037     		adds	r7, r7, #16
 141              		.cfi_def_cfa_offset 8
 142 00a4 BD46     		mov	sp, r7
 143              		.cfi_def_cfa_register 13
 144              		@ sp needed
 145 00a6 80BD     		pop	{r7, pc}
 146              	.L9:
 147              		.align	2
 148              	.L8:
 149 00a8 00000000 		.word	pFlash
 150 00ac 003C0240 		.word	1073888256
 151              		.cfi_endproc
 152              	.LFE72:
 154              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 155              		.align	1
 156              		.global	HAL_FLASHEx_Erase_IT
 157              		.syntax unified
 158              		.thumb
 159              		.thumb_func
 161              	HAL_FLASHEx_Erase_IT:
 162              	.LFB73:
 267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Perform a page erase of the specified FLASH memory pages  with interrupt enabled
 270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         must be called before.
 272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access
 273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *          End of erase is done when @ref HAL_FLASH_EndOfOperationCallback is called with paramet
 275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *          0xFFFFFFFF
 276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   For STM32L151xDX/STM32L152xDX/STM32L162xDX, as memory is not continuous between
 277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         2 banks, user should perform pages erase by bank only.
 278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 163              		.loc 1 284 1
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 16
 166              		@ frame_needed = 1, uses_anonymous_args = 0
 167 0000 80B5     		push	{r7, lr}
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 7, -8
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 9


 170              		.cfi_offset 14, -4
 171 0002 84B0     		sub	sp, sp, #16
 172              		.cfi_def_cfa_offset 24
 173 0004 00AF     		add	r7, sp, #0
 174              		.cfi_def_cfa_register 7
 175 0006 7860     		str	r0, [r7, #4]
 285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 176              		.loc 1 285 21
 177 0008 0123     		movs	r3, #1
 178 000a FB73     		strb	r3, [r7, #15]
 286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* If procedure already ongoing, reject the next one */
 288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (pFlash.ProcedureOnGoing != FLASH_PROC_NONE)
 179              		.loc 1 288 13
 180 000c 1B4B     		ldr	r3, .L16
 181 000e 1B78     		ldrb	r3, [r3]
 182 0010 DBB2     		uxtb	r3, r3
 183              		.loc 1 288 6
 184 0012 002B     		cmp	r3, #0
 185 0014 01D0     		beq	.L11
 289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     return HAL_ERROR;
 186              		.loc 1 290 12
 187 0016 0123     		movs	r3, #1
 188 0018 2CE0     		b	.L12
 189              	.L11:
 291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
 294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_NBPAGES(pEraseInit->NbPages));
 295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_PROGRAM_ADDRESS((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1U)) + pEras
 298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Process Locked */
 300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 190              		.loc 1 300 3
 191 001a 184B     		ldr	r3, .L16
 192 001c 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 193 001e 012B     		cmp	r3, #1
 194 0020 01D1     		bne	.L13
 195              		.loc 1 300 3 is_stmt 0 discriminator 1
 196 0022 0223     		movs	r3, #2
 197 0024 26E0     		b	.L12
 198              	.L13:
 199              		.loc 1 300 3 discriminator 2
 200 0026 154B     		ldr	r3, .L16
 201 0028 0122     		movs	r2, #1
 202 002a 1A74     		strb	r2, [r3, #16]
 301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xDX) || defined(STM32L152xDX) || defined(STM32L162xDX)
 303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Check on which bank belongs the 1st address to erase */
 304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pEraseInit->PageAddress < FLASH_BANK2_BASE)
 305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* BANK1 */
 307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Check that last page to erase still belongs to BANK1 */
 308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if (((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1U)) + pEraseInit->NbPages * FLASH_PAGE_S
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 10


 309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
 310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /*  Last page does not belong to BANK1, erase procedure cannot be performed because memory 
 311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****             continuous */
 312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /* Process Unlocked */
 313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         __HAL_UNLOCK(&pFlash);
 314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         return HAL_ERROR;
 315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
 316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
 318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* BANK2 */
 320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Check that last page to erase still belongs to BANK2 */
 321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if (((pEraseInit->PageAddress & ~(FLASH_PAGE_SIZE - 1U)) + pEraseInit->NbPages * FLASH_PAGE_S
 322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
 323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /*  Last page does not belong to BANK2, erase procedure cannot be performed because memory 
 324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****             continuous */
 325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         /* Process Unlocked */
 326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         __HAL_UNLOCK(&pFlash);
 327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         return HAL_ERROR;
 328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
 329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xDX || STM32L152xDX || STM32L162xDX */
 331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 203              		.loc 1 333 12 is_stmt 1 discriminator 2
 204 002c 4CF25030 		movw	r0, #50000
 205 0030 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 206 0034 0346     		mov	r3, r0
 207 0036 FB73     		strb	r3, [r7, #15]
 334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (status == HAL_OK)
 208              		.loc 1 335 6 discriminator 2
 209 0038 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 210 003a 002B     		cmp	r3, #0
 211 003c 16D1     		bne	.L14
 336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Enable End of FLASH Operation and Error source interrupts */
 338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_ERR);
 212              		.loc 1 338 5
 213 003e 104B     		ldr	r3, .L16+4
 214 0040 5B68     		ldr	r3, [r3, #4]
 215 0042 0F4A     		ldr	r2, .L16+4
 216 0044 43F44033 		orr	r3, r3, #196608
 217 0048 5360     		str	r3, [r2, #4]
 339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PAGEERASE;
 218              		.loc 1 340 29
 219 004a 0C4B     		ldr	r3, .L16
 220 004c 0122     		movs	r2, #1
 221 004e 1A70     		strb	r2, [r3]
 341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.NbPagesToErase = pEraseInit->NbPages;
 222              		.loc 1 341 39
 223 0050 7B68     		ldr	r3, [r7, #4]
 224 0052 9B68     		ldr	r3, [r3, #8]
 225              		.loc 1 341 27
 226 0054 094A     		ldr	r2, .L16
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 11


 227 0056 5360     		str	r3, [r2, #4]
 342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.Page = pEraseInit->PageAddress;
 228              		.loc 1 342 29
 229 0058 7B68     		ldr	r3, [r7, #4]
 230 005a 5B68     		ldr	r3, [r3, #4]
 231              		.loc 1 342 17
 232 005c 074A     		ldr	r2, .L16
 233 005e D360     		str	r3, [r2, #12]
 343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /*Erase 1st page and wait for IT*/
 345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     FLASH_PageErase(pEraseInit->PageAddress);
 234              		.loc 1 345 5
 235 0060 7B68     		ldr	r3, [r7, #4]
 236 0062 5B68     		ldr	r3, [r3, #4]
 237 0064 1846     		mov	r0, r3
 238 0066 FFF7FEFF 		bl	FLASH_PageErase
 239 006a 02E0     		b	.L15
 240              	.L14:
 346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
 348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Process Unlocked */
 350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     __HAL_UNLOCK(&pFlash);
 241              		.loc 1 350 5
 242 006c 034B     		ldr	r3, .L16
 243 006e 0022     		movs	r2, #0
 244 0070 1A74     		strb	r2, [r3, #16]
 245              	.L15:
 351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 246              		.loc 1 353 10
 247 0072 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 248              	.L12:
 354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 249              		.loc 1 354 1
 250 0074 1846     		mov	r0, r3
 251 0076 1037     		adds	r7, r7, #16
 252              		.cfi_def_cfa_offset 8
 253 0078 BD46     		mov	sp, r7
 254              		.cfi_def_cfa_register 13
 255              		@ sp needed
 256 007a 80BD     		pop	{r7, pc}
 257              	.L17:
 258              		.align	2
 259              	.L16:
 260 007c 00000000 		.word	pFlash
 261 0080 003C0240 		.word	1073888256
 262              		.cfi_endproc
 263              	.LFE73:
 265              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 266              		.align	1
 267              		.global	HAL_FLASHEx_OBProgram
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	HAL_FLASHEx_OBProgram:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 12


 273              	.LFB74:
 355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
 358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group2 Option Bytes Programming functions
 361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  *  @brief   Option Bytes Programming functions
 362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  *
 363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** @verbatim
 364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ==============================================================================
 365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                 ##### Option Bytes Programming functions #####
 366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   ==============================================================================
 367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     [..] Any operation of erase or program should follow these steps:
 369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_OB_Unlock() function to enable the Flash option control
 370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         register access.
 371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call following function to program the desired option bytes.
 372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         (++) @ref HAL_FLASHEx_OBProgram:
 373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****          - To Enable/Disable the desired sector write protection.
 374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****          - To set the desired read Protection Level.
 375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****          - To configure the user option Bytes: IWDG, STOP and the Standby.
 376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****          - To Set the BOR level.
 377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Once all needed option bytes to be programmed are correctly written, call the
 378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         @ref HAL_FLASH_OB_Launch(void) function to launch the Option Bytes programming process.
 379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_OB_Lock() to disable the Flash option control register access (reco
 380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         to protect the option Bytes against possible unwanted operations).
 381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     [..] Proprietary code Read Out Protection (PcROP):
 383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) The PcROP sector is selected by using the same option bytes as the Write
 384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         protection (nWRPi bits). As a result, these 2 options are exclusive each other.
 385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) In order to activate the PcROP (change the function of the nWRPi option bits),
 386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         the SPRMOD option bit must be activated.
 387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) The active value of nWRPi bits is inverted when PCROP mode is active, this
 388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         means: if SPRMOD = 1 and nWRPi = 1 (default value), then the user sector "i"
 389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         is read/write protected.
 390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) To activate PCROP mode for Flash sector(s), you need to call the following function:
 391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         (++) @ref HAL_FLASHEx_AdvOBProgram in selecting sectors to be read/write protected
 392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         (++) @ref HAL_FLASHEx_OB_SelectPCROP to enable the read/write protection
 393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) PcROP is available only in STM32L151xBA, STM32L152xBA, STM32L151xC, STM32L152xC & STM32L162
 394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** @endverbatim
 396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
 397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Program option bytes
 401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 274              		.loc 1 407 1
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 13


 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 80B5     		push	{r7, lr}
 279              		.cfi_def_cfa_offset 8
 280              		.cfi_offset 7, -8
 281              		.cfi_offset 14, -4
 282 0002 84B0     		sub	sp, sp, #16
 283              		.cfi_def_cfa_offset 24
 284 0004 00AF     		add	r7, sp, #0
 285              		.cfi_def_cfa_register 7
 286 0006 7860     		str	r0, [r7, #4]
 408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 287              		.loc 1 408 21
 288 0008 0123     		movs	r3, #1
 289 000a FB73     		strb	r3, [r7, #15]
 409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Process Locked */
 411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 290              		.loc 1 411 3
 291 000c 3D4B     		ldr	r3, .L27
 292 000e 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 293 0010 012B     		cmp	r3, #1
 294 0012 01D1     		bne	.L19
 295              		.loc 1 411 3 is_stmt 0 discriminator 1
 296 0014 0223     		movs	r3, #2
 297 0016 71E0     		b	.L20
 298              	.L19:
 299              		.loc 1 411 3 discriminator 2
 300 0018 3A4B     		ldr	r3, .L27
 301 001a 0122     		movs	r2, #1
 302 001c 1A74     		strb	r2, [r3, #16]
 412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
 414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Write protection configuration*/
 417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 303              		.loc 1 417 14 is_stmt 1 discriminator 2
 304 001e 7B68     		ldr	r3, [r7, #4]
 305 0020 1B68     		ldr	r3, [r3]
 306              		.loc 1 417 27 discriminator 2
 307 0022 03F00103 		and	r3, r3, #1
 308              		.loc 1 417 5 discriminator 2
 309 0026 002B     		cmp	r3, #0
 310 0028 18D0     		beq	.L21
 418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 311              		.loc 1 420 16
 312 002a 7B68     		ldr	r3, [r7, #4]
 313 002c 5B68     		ldr	r3, [r3, #4]
 314              		.loc 1 420 8
 315 002e 012B     		cmp	r3, #1
 316 0030 06D1     		bne	.L22
 421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Enable of Write protection on the selected Sector*/
 423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_OB_WRPConfig(pOBInit, ENABLE);
 317              		.loc 1 423 16
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 14


 318 0032 0121     		movs	r1, #1
 319 0034 7868     		ldr	r0, [r7, #4]
 320 0036 FFF7FEFF 		bl	FLASH_OB_WRPConfig
 321 003a 0346     		mov	r3, r0
 322 003c FB73     		strb	r3, [r7, #15]
 323 003e 05E0     		b	.L23
 324              	.L22:
 424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
 426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Disable of Write protection on the selected Sector*/
 428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_OB_WRPConfig(pOBInit, DISABLE);
 325              		.loc 1 428 16
 326 0040 0021     		movs	r1, #0
 327 0042 7868     		ldr	r0, [r7, #4]
 328 0044 FFF7FEFF 		bl	FLASH_OB_WRPConfig
 329 0048 0346     		mov	r3, r0
 330 004a FB73     		strb	r3, [r7, #15]
 331              	.L23:
 429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 332              		.loc 1 430 8
 333 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 334 004e 002B     		cmp	r3, #0
 335 0050 04D0     		beq	.L21
 431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
 433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 336              		.loc 1 433 7
 337 0052 2C4B     		ldr	r3, .L27
 338 0054 0022     		movs	r2, #0
 339 0056 1A74     		strb	r2, [r3, #16]
 434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       return status;
 340              		.loc 1 434 14
 341 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 342 005a 4FE0     		b	.L20
 343              	.L21:
 435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Read protection configuration*/
 439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 344              		.loc 1 439 14
 345 005c 7B68     		ldr	r3, [r7, #4]
 346 005e 1B68     		ldr	r3, [r3]
 347              		.loc 1 439 27
 348 0060 03F00203 		and	r3, r3, #2
 349              		.loc 1 439 5
 350 0064 002B     		cmp	r3, #0
 351 0066 0ED0     		beq	.L24
 440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_OB_RDPConfig(pOBInit->RDPLevel);
 352              		.loc 1 441 14
 353 0068 7B68     		ldr	r3, [r7, #4]
 354 006a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 355 006c 1846     		mov	r0, r3
 356 006e FFF7FEFF 		bl	FLASH_OB_RDPConfig
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 15


 357 0072 0346     		mov	r3, r0
 358 0074 FB73     		strb	r3, [r7, #15]
 442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 359              		.loc 1 442 8
 360 0076 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 361 0078 002B     		cmp	r3, #0
 362 007a 04D0     		beq	.L24
 443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
 445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 363              		.loc 1 445 7
 364 007c 214B     		ldr	r3, .L27
 365 007e 0022     		movs	r2, #0
 366 0080 1A74     		strb	r2, [r3, #16]
 446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       return status;
 367              		.loc 1 446 14
 368 0082 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 369 0084 3AE0     		b	.L20
 370              	.L24:
 447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* USER  configuration*/
 451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 371              		.loc 1 451 14
 372 0086 7B68     		ldr	r3, [r7, #4]
 373 0088 1B68     		ldr	r3, [r3]
 374              		.loc 1 451 27
 375 008a 03F00403 		and	r3, r3, #4
 376              		.loc 1 451 5
 377 008e 002B     		cmp	r3, #0
 378 0090 1BD0     		beq	.L25
 452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig & OB_IWDG_SW,
 379              		.loc 1 453 41
 380 0092 7B68     		ldr	r3, [r7, #4]
 381 0094 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 382              		.loc 1 453 14
 383 0096 03F01003 		and	r3, r3, #16
 384 009a D8B2     		uxtb	r0, r3
 454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NORST,
 385              		.loc 1 454 41
 386 009c 7B68     		ldr	r3, [r7, #4]
 387 009e 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NORST,
 388              		.loc 1 453 14
 389 00a0 03F02003 		and	r3, r3, #32
 390 00a4 D9B2     		uxtb	r1, r3
 455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STDBY_NORST);
 391              		.loc 1 455 41
 392 00a6 7B68     		ldr	r3, [r7, #4]
 393 00a8 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                                  pOBInit->USERConfig & OB_STOP_NORST,
 394              		.loc 1 453 14
 395 00aa 03F04003 		and	r3, r3, #64
 396 00ae DBB2     		uxtb	r3, r3
 397 00b0 1A46     		mov	r2, r3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 16


 398 00b2 FFF7FEFF 		bl	FLASH_OB_UserConfig
 399 00b6 0346     		mov	r3, r0
 400 00b8 FB73     		strb	r3, [r7, #15]
 456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 401              		.loc 1 456 8
 402 00ba FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 403 00bc 002B     		cmp	r3, #0
 404 00be 04D0     		beq	.L25
 457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
 459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 405              		.loc 1 459 7
 406 00c0 104B     		ldr	r3, .L27
 407 00c2 0022     		movs	r2, #0
 408 00c4 1A74     		strb	r2, [r3, #16]
 460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       return status;
 409              		.loc 1 460 14
 410 00c6 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 411 00c8 18E0     		b	.L20
 412              	.L25:
 461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* BOR Level  configuration*/
 465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_BOR) == OPTIONBYTE_BOR)
 413              		.loc 1 465 14
 414 00ca 7B68     		ldr	r3, [r7, #4]
 415 00cc 1B68     		ldr	r3, [r3]
 416              		.loc 1 465 27
 417 00ce 03F00803 		and	r3, r3, #8
 418              		.loc 1 465 5
 419 00d2 002B     		cmp	r3, #0
 420 00d4 0ED0     		beq	.L26
 466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_OB_BORConfig(pOBInit->BORLevel);
 421              		.loc 1 467 14
 422 00d6 7B68     		ldr	r3, [r7, #4]
 423 00d8 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 424 00da 1846     		mov	r0, r3
 425 00dc FFF7FEFF 		bl	FLASH_OB_BORConfig
 426 00e0 0346     		mov	r3, r0
 427 00e2 FB73     		strb	r3, [r7, #15]
 468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 428              		.loc 1 468 8
 429 00e4 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 430 00e6 002B     		cmp	r3, #0
 431 00e8 04D0     		beq	.L26
 469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
 471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 432              		.loc 1 471 7
 433 00ea 064B     		ldr	r3, .L27
 434 00ec 0022     		movs	r2, #0
 435 00ee 1A74     		strb	r2, [r3, #16]
 472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       return status;
 436              		.loc 1 472 14
 437 00f0 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 17


 438 00f2 03E0     		b	.L20
 439              	.L26:
 473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Process Unlocked */
 476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 440              		.loc 1 476 3
 441 00f4 034B     		ldr	r3, .L27
 442 00f6 0022     		movs	r2, #0
 443 00f8 1A74     		strb	r2, [r3, #16]
 477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 444              		.loc 1 478 10
 445 00fa FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 446              	.L20:
 479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 447              		.loc 1 479 1
 448 00fc 1846     		mov	r0, r3
 449 00fe 1037     		adds	r7, r7, #16
 450              		.cfi_def_cfa_offset 8
 451 0100 BD46     		mov	sp, r7
 452              		.cfi_def_cfa_register 13
 453              		@ sp needed
 454 0102 80BD     		pop	{r7, pc}
 455              	.L28:
 456              		.align	2
 457              	.L27:
 458 0104 00000000 		.word	pFlash
 459              		.cfi_endproc
 460              	.LFE74:
 462              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 463              		.align	1
 464              		.global	HAL_FLASHEx_OBGetConfig
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	HAL_FLASHEx_OBGetConfig:
 470              	.LFB75:
 480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief   Get the Option byte configuration
 483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
 487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 471              		.loc 1 489 1
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 8
 474              		@ frame_needed = 1, uses_anonymous_args = 0
 475 0000 80B5     		push	{r7, lr}
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 7, -8
 478              		.cfi_offset 14, -4
 479 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 18


 480              		.cfi_def_cfa_offset 16
 481 0004 00AF     		add	r7, sp, #0
 482              		.cfi_def_cfa_register 7
 483 0006 7860     		str	r0, [r7, #4]
 490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER | OPTIONBYTE_BOR;
 484              		.loc 1 490 23
 485 0008 7B68     		ldr	r3, [r7, #4]
 486 000a 0F22     		movs	r2, #15
 487 000c 1A60     		str	r2, [r3]
 491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get WRP1*/
 493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->WRPSector0To31 = (uint32_t)(FLASH->WRPR1);
 488              		.loc 1 493 45
 489 000e 0D4B     		ldr	r3, .L30
 490 0010 1A6A     		ldr	r2, [r3, #32]
 491              		.loc 1 493 27
 492 0012 7B68     		ldr	r3, [r7, #4]
 493 0014 9A60     		str	r2, [r3, #8]
 494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xC) || defined(STM32L151xC) || defined(STM32L152xC) || defined(STM32L162xC)   
 496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L151xCA) || defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xCA)
 497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xD) || defined(STM32L152xDX) || defined(STM32L162xCA) || defined(STM32L162xD) 
 498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE)
 499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get WRP2*/
 501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->WRPSector32To63 = (uint32_t)(FLASH->WRPR2);
 502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xC || STM32L151xC || STM32L152xC || (...) || STM32L151xE || STM32L152xE || STM32
 504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xD) || defined(STM32L152xDX) 
 506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xD) || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE)  
 507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xE)
 508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get WRP3*/
 510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->WRPSector64To95 = (uint32_t)(FLASH->WRPR3);
 511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xD || STM32L152xD || STM32L162xD || STM32L151xE || STM32L152xE || STM32L162xE */
 513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE) || defined(STM32L151xDX) \
 515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xDX) || defined(STM32L162xDX)
 516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get WRP4*/
 518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->WRPSector96To127 = (uint32_t)(FLASH->WRPR4);
 519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xE || STM32L152xE || STM32L162xE || STM32L151xDX || ... */
 521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get RDP Level*/
 523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->RDPLevel   = FLASH_OB_GetRDP();
 494              		.loc 1 523 25
 495 0016 FFF7FEFF 		bl	FLASH_OB_GetRDP
 496 001a 0346     		mov	r3, r0
 497 001c 1A46     		mov	r2, r3
 498              		.loc 1 523 23
 499 001e 7B68     		ldr	r3, [r7, #4]
 500 0020 1A73     		strb	r2, [r3, #12]
 524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get USER*/
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 19


 526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->USERConfig = FLASH_OB_GetUser();
 501              		.loc 1 526 25
 502 0022 FFF7FEFF 		bl	FLASH_OB_GetUser
 503 0026 0346     		mov	r3, r0
 504 0028 1A46     		mov	r2, r3
 505              		.loc 1 526 23
 506 002a 7B68     		ldr	r3, [r7, #4]
 507 002c 9A73     		strb	r2, [r3, #14]
 527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get BOR Level*/
 529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pOBInit->BORLevel   = FLASH_OB_GetBOR();
 508              		.loc 1 529 25
 509 002e FFF7FEFF 		bl	FLASH_OB_GetBOR
 510 0032 0346     		mov	r3, r0
 511 0034 1A46     		mov	r2, r3
 512              		.loc 1 529 23
 513 0036 7B68     		ldr	r3, [r7, #4]
 514 0038 5A73     		strb	r2, [r3, #13]
 530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 515              		.loc 1 530 1
 516 003a 00BF     		nop
 517 003c 0837     		adds	r7, r7, #8
 518              		.cfi_def_cfa_offset 8
 519 003e BD46     		mov	sp, r7
 520              		.cfi_def_cfa_register 13
 521              		@ sp needed
 522 0040 80BD     		pop	{r7, pc}
 523              	.L31:
 524 0042 00BF     		.align	2
 525              	.L30:
 526 0044 003C0240 		.word	1073888256
 527              		.cfi_endproc
 528              	.LFE75:
 530              		.section	.text.HAL_FLASHEx_AdvOBProgram,"ax",%progbits
 531              		.align	1
 532              		.global	HAL_FLASHEx_AdvOBProgram
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 537              	HAL_FLASHEx_AdvOBProgram:
 538              	.LFB76:
 531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_SPRMOD) || defined(FLASH_OBR_nRST_BFB2)
 533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Program option bytes
 536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for Cat2 & Cat3 devices for PCROP and Cat4 & Cat5 for BF
 537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  pAdvOBInit pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_AdvOBProgram (FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 539              		.loc 1 543 1
 540              		.cfi_startproc
 541              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 20


 542              		@ frame_needed = 1, uses_anonymous_args = 0
 543 0000 80B5     		push	{r7, lr}
 544              		.cfi_def_cfa_offset 8
 545              		.cfi_offset 7, -8
 546              		.cfi_offset 14, -4
 547 0002 84B0     		sub	sp, sp, #16
 548              		.cfi_def_cfa_offset 24
 549 0004 00AF     		add	r7, sp, #0
 550              		.cfi_def_cfa_register 7
 551 0006 7860     		str	r0, [r7, #4]
 544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 552              		.loc 1 544 21
 553 0008 0123     		movs	r3, #1
 554 000a FB73     		strb	r3, [r7, #15]
 545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
 547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OBEX(pAdvOBInit->OptionType));
 548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_SPRMOD)
 550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Program PCROP option byte*/
 552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if ((pAdvOBInit->OptionType & OPTIONBYTE_PCROP) == OPTIONBYTE_PCROP)
 555              		.loc 1 552 18
 556 000c 7B68     		ldr	r3, [r7, #4]
 557 000e 1B68     		ldr	r3, [r3]
 558              		.loc 1 552 31
 559 0010 03F00103 		and	r3, r3, #1
 560              		.loc 1 552 6
 561 0014 002B     		cmp	r3, #0
 562 0016 19D0     		beq	.L33
 553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Check the parameters */
 555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     assert_param(IS_PCROPSTATE(pAdvOBInit->PCROPState));
 556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pAdvOBInit->PCROPState == OB_PCROP_STATE_ENABLE)
 563              		.loc 1 556 19
 564 0018 7B68     		ldr	r3, [r7, #4]
 565 001a 5B68     		ldr	r3, [r3, #4]
 566              		.loc 1 556 8
 567 001c 012B     		cmp	r3, #1
 568 001e 0AD1     		bne	.L34
 557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /*Enable of Write protection on the selected Sector*/
 559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_OB_PCROPConfig(pAdvOBInit, ENABLE);
 569              		.loc 1 559 16
 570 0020 0121     		movs	r1, #1
 571 0022 7868     		ldr	r0, [r7, #4]
 572 0024 FFF7FEFF 		bl	FLASH_OB_PCROPConfig
 573 0028 0346     		mov	r3, r0
 574 002a FB73     		strb	r3, [r7, #15]
 560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if (status != HAL_OK)
 575              		.loc 1 560 10
 576 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 577 002e 002B     		cmp	r3, #0
 578 0030 0CD0     		beq	.L33
 561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
 562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         return status;
 579              		.loc 1 562 16
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 21


 580 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 581 0034 0BE0     		b	.L35
 582              	.L34:
 563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
 564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
 566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Disable of Write protection on the selected Sector*/
 568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_OB_PCROPConfig(pAdvOBInit, DISABLE);
 583              		.loc 1 568 16
 584 0036 0021     		movs	r1, #0
 585 0038 7868     		ldr	r0, [r7, #4]
 586 003a FFF7FEFF 		bl	FLASH_OB_PCROPConfig
 587 003e 0346     		mov	r3, r0
 588 0040 FB73     		strb	r3, [r7, #15]
 569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if (status != HAL_OK)
 589              		.loc 1 569 10
 590 0042 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 591 0044 002B     		cmp	r3, #0
 592 0046 01D0     		beq	.L33
 570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
 571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         return status;
 593              		.loc 1 571 16
 594 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 595 004a 00E0     		b	.L35
 596              	.L33:
 572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
 573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_SPRMOD */
 577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_nRST_BFB2)
 579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Program BOOT config option byte */
 581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if ((pAdvOBInit->OptionType & OPTIONBYTE_BOOTCONFIG) == OPTIONBYTE_BOOTCONFIG)
 582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_OB_BootConfig(pAdvOBInit->BootConfig);
 584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_nRST_BFB2 */
 587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 597              		.loc 1 588 10
 598 004c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 599              	.L35:
 589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 600              		.loc 1 589 1
 601 004e 1846     		mov	r0, r3
 602 0050 1037     		adds	r7, r7, #16
 603              		.cfi_def_cfa_offset 8
 604 0052 BD46     		mov	sp, r7
 605              		.cfi_def_cfa_register 13
 606              		@ sp needed
 607 0054 80BD     		pop	{r7, pc}
 608              		.cfi_endproc
 609              	.LFE76:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 22


 611              		.section	.text.HAL_FLASHEx_AdvOBGetConfig,"ax",%progbits
 612              		.align	1
 613              		.global	HAL_FLASHEx_AdvOBGetConfig
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 618              	HAL_FLASHEx_AdvOBGetConfig:
 619              	.LFB77:
 590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Get the OBEX byte configuration
 593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for Cat2  & Cat3 devices for PCROP and Cat4 & Cat5 for B
 594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  pAdvOBInit pointer to an FLASH_AdvOBProgramInitTypeDef structure that
 595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
 598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** void HAL_FLASHEx_AdvOBGetConfig(FLASH_AdvOBProgramInitTypeDef *pAdvOBInit)
 600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 620              		.loc 1 600 1
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 16
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624              		@ link register save eliminated.
 625 0000 80B4     		push	{r7}
 626              		.cfi_def_cfa_offset 4
 627              		.cfi_offset 7, -4
 628 0002 85B0     		sub	sp, sp, #20
 629              		.cfi_def_cfa_offset 24
 630 0004 00AF     		add	r7, sp, #0
 631              		.cfi_def_cfa_register 7
 632 0006 7860     		str	r0, [r7, #4]
 601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pAdvOBInit->OptionType = 0U;
 633              		.loc 1 601 26
 634 0008 7B68     		ldr	r3, [r7, #4]
 635 000a 0022     		movs	r2, #0
 636 000c 1A60     		str	r2, [r3]
 602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_SPRMOD)
 604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pAdvOBInit->OptionType |= OPTIONBYTE_PCROP;
 637              		.loc 1 605 26
 638 000e 7B68     		ldr	r3, [r7, #4]
 639 0010 1B68     		ldr	r3, [r3]
 640 0012 43F00102 		orr	r2, r3, #1
 641 0016 7B68     		ldr	r3, [r7, #4]
 642 0018 1A60     		str	r2, [r3]
 606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get PCROP state */
 608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pAdvOBInit->PCROPState = (FLASH->OBR & FLASH_OBR_SPRMOD) >> POSITION_VAL(FLASH_OBR_SPRMOD);
 643              		.loc 1 608 34
 644 001a 0E4B     		ldr	r3, .L38
 645 001c DB69     		ldr	r3, [r3, #28]
 646              		.loc 1 608 40
 647 001e 03F48073 		and	r3, r3, #256
 648 0022 4FF48072 		mov	r2, #256
 649 0026 FA60     		str	r2, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 23


 650              	.LBB4:
 651              	.LBB5:
 652              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 24


  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 25


 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 26


 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 27


 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 28


 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 29


 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 30


 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 31


 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 32


 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 33


 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 34


 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 35


 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 36


 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 37


 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 38


 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 39


 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 40


 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 653              		.loc 2 988 4
 654 0028 FA68     		ldr	r2, [r7, #12]
 655              		.syntax unified
 656              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 657 002a 92FAA2F2 		rbit r2, r2
 658              	@ 0 "" 2
 659              		.thumb
 660              		.syntax unified
 661 002e BA60     		str	r2, [r7, #8]
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 662              		.loc 2 1001 10
 663 0030 BA68     		ldr	r2, [r7, #8]
 664              	.LBE5:
 665              	.LBE4:
 666              		.loc 1 608 63
 667 0032 B2FA82F2 		clz	r2, r2
 668 0036 D2B2     		uxtb	r2, r2
 669              		.loc 1 608 60
 670 0038 23FA02F2 		lsr	r2, r3, r2
 671              		.loc 1 608 26
 672 003c 7B68     		ldr	r3, [r7, #4]
 673 003e 5A60     		str	r2, [r3, #4]
 609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 41


 610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get PCROP protected sector from 0 to 31 */
 611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pAdvOBInit->PCROPSector0To31 = FLASH->WRPR1;
 674              		.loc 1 611 39
 675 0040 044B     		ldr	r3, .L38
 676 0042 1A6A     		ldr	r2, [r3, #32]
 677              		.loc 1 611 32
 678 0044 7B68     		ldr	r3, [r7, #4]
 679 0046 9A60     		str	r2, [r3, #8]
 612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xC) || defined(STM32L151xC) || defined(STM32L152xC) || defined(STM32L162xC)
 614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /*Get PCROP protected sector from 32 to 63 */
 616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pAdvOBInit->PCROPSector32To63 = FLASH->WRPR2;
 617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xC || STM32L151xC || STM32L152xC || STM32L162xC */
 619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_SPRMOD */
 620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_nRST_BFB2)
 622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pAdvOBInit->OptionType |= OPTIONBYTE_BOOTCONFIG;
 624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Get Boot config OB */
 626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pAdvOBInit->BootConfig = (FLASH->OBR & FLASH_OBR_nRST_BFB2) >> 16U;
 627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_nRST_BFB2 */
 629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 680              		.loc 1 629 1
 681 0048 00BF     		nop
 682 004a 1437     		adds	r7, r7, #20
 683              		.cfi_def_cfa_offset 4
 684 004c BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 004e 80BC     		pop	{r7}
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 0050 7047     		bx	lr
 691              	.L39:
 692 0052 00BF     		.align	2
 693              	.L38:
 694 0054 003C0240 		.word	1073888256
 695              		.cfi_endproc
 696              	.LFE77:
 698              		.section	.text.HAL_FLASHEx_OB_SelectPCROP,"ax",%progbits
 699              		.align	1
 700              		.global	HAL_FLASHEx_OB_SelectPCROP
 701              		.syntax unified
 702              		.thumb
 703              		.thumb_func
 705              	HAL_FLASHEx_OB_SelectPCROP:
 706              	.LFB78:
 630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_SPRMOD || FLASH_OBR_nRST_BFB2 */
 632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_SPRMOD)
 634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 42


 636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Select the Protection Mode (SPRMOD).
 637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32L151xBA, STM32L152xBA, STM32L151xC, STM32L152xC
 638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   Once SPRMOD bit is active, unprotection of a protected sector is not possible
 639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
 641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_SelectPCROP(void)
 643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 707              		.loc 1 643 1
 708              		.cfi_startproc
 709              		@ args = 0, pretend = 0, frame = 16
 710              		@ frame_needed = 1, uses_anonymous_args = 0
 711 0000 80B5     		push	{r7, lr}
 712              		.cfi_def_cfa_offset 8
 713              		.cfi_offset 7, -8
 714              		.cfi_offset 14, -4
 715 0002 84B0     		sub	sp, sp, #16
 716              		.cfi_def_cfa_offset 24
 717 0004 00AF     		add	r7, sp, #0
 718              		.cfi_def_cfa_register 7
 644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 719              		.loc 1 644 21
 720 0006 0023     		movs	r3, #0
 721 0008 FB73     		strb	r3, [r7, #15]
 645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint16_t tmp1 = 0U;
 722              		.loc 1 645 12
 723 000a 0023     		movs	r3, #0
 724 000c BB81     		strh	r3, [r7, #12]	@ movhi
 646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp2 = 0U;
 725              		.loc 1 646 12
 726 000e 0023     		movs	r3, #0
 727 0010 BB60     		str	r3, [r7, #8]
 647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint8_t optiontmp = 0U;
 728              		.loc 1 647 11
 729 0012 0023     		movs	r3, #0
 730 0014 FB71     		strb	r3, [r7, #7]
 648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint16_t optiontmp2 = 0U;
 731              		.loc 1 648 12
 732 0016 0023     		movs	r3, #0
 733 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 734              		.loc 1 650 12
 735 001a 4CF25030 		movw	r0, #50000
 736 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 737 0022 0346     		mov	r3, r0
 738 0024 FB73     		strb	r3, [r7, #15]
 651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Mask RDP Byte */
 653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   optiontmp =  (uint8_t)(*(__IO uint8_t *)(OB_BASE));
 739              		.loc 1 653 16
 740 0026 124B     		ldr	r3, .L43
 741              		.loc 1 653 13
 742 0028 1B78     		ldrb	r3, [r3]
 743 002a FB71     		strb	r3, [r7, #7]
 654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Update Option Byte */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 43


 656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   optiontmp2 = (uint16_t)(OB_PCROP_SELECTED | optiontmp);
 744              		.loc 1 656 45
 745 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 746 002e 1BB2     		sxth	r3, r3
 747 0030 43F48073 		orr	r3, r3, #256
 748 0034 1BB2     		sxth	r3, r3
 749              		.loc 1 656 14
 750 0036 BB80     		strh	r3, [r7, #4]	@ movhi
 657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* calculate the option byte to write */
 659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp1 = (uint16_t)(~(optiontmp2 ));
 751              		.loc 1 659 8
 752 0038 BB88     		ldrh	r3, [r7, #4]	@ movhi
 753 003a DB43     		mvns	r3, r3
 754 003c BB81     		strh	r3, [r7, #12]	@ movhi
 660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp2 = (uint32_t)(((uint32_t)((uint32_t)(tmp1) << 16U)) | ((uint32_t)optiontmp2));
 755              		.loc 1 660 33
 756 003e BB89     		ldrh	r3, [r7, #12]
 757              		.loc 1 660 22
 758 0040 1A04     		lsls	r2, r3, #16
 759              		.loc 1 660 62
 760 0042 BB88     		ldrh	r3, [r7, #4]
 761              		.loc 1 660 8
 762 0044 1343     		orrs	r3, r3, r2
 763 0046 BB60     		str	r3, [r7, #8]
 661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 764              		.loc 1 662 5
 765 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 766 004a 002B     		cmp	r3, #0
 767 004c 0BD1     		bne	.L41
 663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
 665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 768              		.loc 1 665 22
 769 004e 094B     		ldr	r3, .L43+4
 770 0050 0022     		movs	r2, #0
 771 0052 5A61     		str	r2, [r3, #20]
 666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* program PCRop */
 668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->RDP = tmp2;
 772              		.loc 1 668 7
 773 0054 064A     		ldr	r2, .L43
 774              		.loc 1 668 13
 775 0056 BB68     		ldr	r3, [r7, #8]
 776 0058 1360     		str	r3, [r2]
 669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 777              		.loc 1 671 14
 778 005a 4CF25030 		movw	r0, #50000
 779 005e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 780 0062 0346     		mov	r3, r0
 781 0064 FB73     		strb	r3, [r7, #15]
 782              	.L41:
 672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 44


 674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Read protection operation Status */
 675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 783              		.loc 1 675 10
 784 0066 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 785              		.loc 1 676 1
 786 0068 1846     		mov	r0, r3
 787 006a 1037     		adds	r7, r7, #16
 788              		.cfi_def_cfa_offset 8
 789 006c BD46     		mov	sp, r7
 790              		.cfi_def_cfa_register 13
 791              		@ sp needed
 792 006e 80BD     		pop	{r7, pc}
 793              	.L44:
 794              		.align	2
 795              	.L43:
 796 0070 0000F81F 		.word	536346624
 797 0074 00000000 		.word	pFlash
 798              		.cfi_endproc
 799              	.LFE78:
 801              		.section	.text.HAL_FLASHEx_OB_DeSelectPCROP,"ax",%progbits
 802              		.align	1
 803              		.global	HAL_FLASHEx_OB_DeSelectPCROP
 804              		.syntax unified
 805              		.thumb
 806              		.thumb_func
 808              	HAL_FLASHEx_OB_DeSelectPCROP:
 809              	.LFB79:
 677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Deselect the Protection Mode (SPRMOD).
 680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32L151xBA, STM32L152xBA, STM32L151xC, STM32L152xC
 681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   Once SPRMOD bit is active, unprotection of a protected sector is not possible
 682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   Read a protected sector will set RDERR Flag and write a protected sector will set WRPER
 683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
 684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OB_DeSelectPCROP(void)
 686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 810              		.loc 1 686 1
 811              		.cfi_startproc
 812              		@ args = 0, pretend = 0, frame = 16
 813              		@ frame_needed = 1, uses_anonymous_args = 0
 814 0000 80B5     		push	{r7, lr}
 815              		.cfi_def_cfa_offset 8
 816              		.cfi_offset 7, -8
 817              		.cfi_offset 14, -4
 818 0002 84B0     		sub	sp, sp, #16
 819              		.cfi_def_cfa_offset 24
 820 0004 00AF     		add	r7, sp, #0
 821              		.cfi_def_cfa_register 7
 687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 822              		.loc 1 687 21
 823 0006 0023     		movs	r3, #0
 824 0008 FB73     		strb	r3, [r7, #15]
 688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint16_t tmp1 = 0U;
 825              		.loc 1 688 12
 826 000a 0023     		movs	r3, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 45


 827 000c BB81     		strh	r3, [r7, #12]	@ movhi
 689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp2 = 0U;
 828              		.loc 1 689 12
 829 000e 0023     		movs	r3, #0
 830 0010 BB60     		str	r3, [r7, #8]
 690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint8_t optiontmp = 0U;
 831              		.loc 1 690 11
 832 0012 0023     		movs	r3, #0
 833 0014 FB71     		strb	r3, [r7, #7]
 691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint16_t optiontmp2 = 0U;
 834              		.loc 1 691 12
 835 0016 0023     		movs	r3, #0
 836 0018 BB80     		strh	r3, [r7, #4]	@ movhi
 692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 837              		.loc 1 693 12
 838 001a 4CF25030 		movw	r0, #50000
 839 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 840 0022 0346     		mov	r3, r0
 841 0024 FB73     		strb	r3, [r7, #15]
 694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Mask RDP Byte */
 696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   optiontmp =  (uint8_t)(*(__IO uint8_t *)(OB_BASE));
 842              		.loc 1 696 16
 843 0026 104B     		ldr	r3, .L48
 844              		.loc 1 696 13
 845 0028 1B78     		ldrb	r3, [r3]
 846 002a FB71     		strb	r3, [r7, #7]
 697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Update Option Byte */
 699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   optiontmp2 = (uint16_t)(OB_PCROP_DESELECTED | optiontmp);
 847              		.loc 1 699 14
 848 002c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 849 002e BB80     		strh	r3, [r7, #4]	@ movhi
 700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* calculate the option byte to write */
 702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp1 = (uint16_t)(~(optiontmp2 ));
 850              		.loc 1 702 8
 851 0030 BB88     		ldrh	r3, [r7, #4]	@ movhi
 852 0032 DB43     		mvns	r3, r3
 853 0034 BB81     		strh	r3, [r7, #12]	@ movhi
 703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp2 = (uint32_t)(((uint32_t)((uint32_t)(tmp1) << 16U)) | ((uint32_t)optiontmp2));
 854              		.loc 1 703 33
 855 0036 BB89     		ldrh	r3, [r7, #12]
 856              		.loc 1 703 22
 857 0038 1A04     		lsls	r2, r3, #16
 858              		.loc 1 703 62
 859 003a BB88     		ldrh	r3, [r7, #4]
 860              		.loc 1 703 8
 861 003c 1343     		orrs	r3, r3, r2
 862 003e BB60     		str	r3, [r7, #8]
 704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 863              		.loc 1 705 5
 864 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 865 0042 002B     		cmp	r3, #0
 866 0044 0BD1     		bne	.L46
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 46


 706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
 708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 867              		.loc 1 708 22
 868 0046 094B     		ldr	r3, .L48+4
 869 0048 0022     		movs	r2, #0
 870 004a 5A61     		str	r2, [r3, #20]
 709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* program PCRop */
 711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->RDP = tmp2;
 871              		.loc 1 711 7
 872 004c 064A     		ldr	r2, .L48
 873              		.loc 1 711 13
 874 004e BB68     		ldr	r3, [r7, #8]
 875 0050 1360     		str	r3, [r2]
 712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 876              		.loc 1 714 14
 877 0052 4CF25030 		movw	r0, #50000
 878 0056 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 879 005a 0346     		mov	r3, r0
 880 005c FB73     		strb	r3, [r7, #15]
 881              	.L46:
 715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Read protection operation Status */
 718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 882              		.loc 1 718 10
 883 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 884              		.loc 1 719 1
 885 0060 1846     		mov	r0, r3
 886 0062 1037     		adds	r7, r7, #16
 887              		.cfi_def_cfa_offset 8
 888 0064 BD46     		mov	sp, r7
 889              		.cfi_def_cfa_register 13
 890              		@ sp needed
 891 0066 80BD     		pop	{r7, pc}
 892              	.L49:
 893              		.align	2
 894              	.L48:
 895 0068 0000F81F 		.word	536346624
 896 006c 00000000 		.word	pFlash
 897              		.cfi_endproc
 898              	.LFE79:
 900              		.section	.text.HAL_FLASHEx_DATAEEPROM_Unlock,"ax",%progbits
 901              		.align	1
 902              		.global	HAL_FLASHEx_DATAEEPROM_Unlock
 903              		.syntax unified
 904              		.thumb
 905              		.thumb_func
 907              	HAL_FLASHEx_DATAEEPROM_Unlock:
 908              	.LFB80:
 720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_SPRMOD */
 722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 47


 723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
 725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group3 DATA EEPROM Programming functions
 728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  *  @brief   DATA EEPROM Programming functions
 729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  *
 730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** @verbatim
 731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  ===============================================================================
 732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****                      ##### DATA EEPROM Programming functions #####
 733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  ===============================================================================
 734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     [..] Any operation of erase or program should follow these steps:
 736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASHEx_DATAEEPROM_Unlock() function to enable the data EEPROM access
 737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         and Flash program erase control register access.
 738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the desired function to erase or program data.
 739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASHEx_DATAEEPROM_Lock() to disable the data EEPROM access
 740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         and Flash program erase control register access(recommended
 741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         to protect the DATA_EEPROM against possible unwanted operation).
 742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** @endverbatim
 744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
 745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Unlocks the data memory and FLASH_PECR register access.
 749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_DATAEEPROM_Unlock(void)
 752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 909              		.loc 1 752 1
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 0
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913              		@ link register save eliminated.
 914 0000 80B4     		push	{r7}
 915              		.cfi_def_cfa_offset 4
 916              		.cfi_offset 7, -4
 917 0002 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if((FLASH->PECR & FLASH_PECR_PELOCK) != RESET)
 919              		.loc 1 753 12
 920 0004 094B     		ldr	r3, .L54
 921 0006 5B68     		ldr	r3, [r3, #4]
 922              		.loc 1 753 19
 923 0008 03F00103 		and	r3, r3, #1
 924              		.loc 1 753 5
 925 000c 002B     		cmp	r3, #0
 926 000e 07D0     		beq	.L51
 754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Unlocking the Data memory and FLASH_PECR register access*/
 756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     FLASH->PEKEYR = FLASH_PEKEY1;
 927              		.loc 1 756 10
 928 0010 064B     		ldr	r3, .L54
 929              		.loc 1 756 19
 930 0012 074A     		ldr	r2, .L54+4
 931 0014 DA60     		str	r2, [r3, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 48


 757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     FLASH->PEKEYR = FLASH_PEKEY2;
 932              		.loc 1 757 10
 933 0016 054B     		ldr	r3, .L54
 934              		.loc 1 757 19
 935 0018 064A     		ldr	r2, .L54+8
 936 001a DA60     		str	r2, [r3, #12]
 758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
 760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     return HAL_ERROR;
 762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return HAL_OK;
 937              		.loc 1 763 10
 938 001c 0023     		movs	r3, #0
 939 001e 00E0     		b	.L53
 940              	.L51:
 761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 941              		.loc 1 761 12
 942 0020 0123     		movs	r3, #1
 943              	.L53:
 764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 944              		.loc 1 764 1
 945 0022 1846     		mov	r0, r3
 946 0024 BD46     		mov	sp, r7
 947              		.cfi_def_cfa_register 13
 948              		@ sp needed
 949 0026 80BC     		pop	{r7}
 950              		.cfi_restore 7
 951              		.cfi_def_cfa_offset 0
 952 0028 7047     		bx	lr
 953              	.L55:
 954 002a 00BF     		.align	2
 955              	.L54:
 956 002c 003C0240 		.word	1073888256
 957 0030 EFCDAB89 		.word	-1985229329
 958 0034 05040302 		.word	33752069
 959              		.cfi_endproc
 960              	.LFE80:
 962              		.section	.text.HAL_FLASHEx_DATAEEPROM_Lock,"ax",%progbits
 963              		.align	1
 964              		.global	HAL_FLASHEx_DATAEEPROM_Lock
 965              		.syntax unified
 966              		.thumb
 967              		.thumb_func
 969              	HAL_FLASHEx_DATAEEPROM_Lock:
 970              	.LFB81:
 765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Locks the Data memory and FLASH_PECR register access.
 768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_DATAEEPROM_Lock(void)
 771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 971              		.loc 1 771 1
 972              		.cfi_startproc
 973              		@ args = 0, pretend = 0, frame = 0
 974              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 49


 975              		@ link register save eliminated.
 976 0000 80B4     		push	{r7}
 977              		.cfi_def_cfa_offset 4
 978              		.cfi_offset 7, -4
 979 0002 00AF     		add	r7, sp, #0
 980              		.cfi_def_cfa_register 7
 772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Set the PELOCK Bit to lock the data memory and FLASH_PECR register access */
 773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_PELOCK);
 981              		.loc 1 773 3
 982 0004 054B     		ldr	r3, .L58
 983 0006 5B68     		ldr	r3, [r3, #4]
 984 0008 044A     		ldr	r2, .L58
 985 000a 43F00103 		orr	r3, r3, #1
 986 000e 5360     		str	r3, [r2, #4]
 774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return HAL_OK;
 987              		.loc 1 775 10
 988 0010 0023     		movs	r3, #0
 776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 989              		.loc 1 776 1
 990 0012 1846     		mov	r0, r3
 991 0014 BD46     		mov	sp, r7
 992              		.cfi_def_cfa_register 13
 993              		@ sp needed
 994 0016 80BC     		pop	{r7}
 995              		.cfi_restore 7
 996              		.cfi_def_cfa_offset 0
 997 0018 7047     		bx	lr
 998              	.L59:
 999 001a 00BF     		.align	2
 1000              	.L58:
 1001 001c 003C0240 		.word	1073888256
 1002              		.cfi_endproc
 1003              	.LFE81:
 1005              		.section	.text.HAL_FLASHEx_DATAEEPROM_Erase,"ax",%progbits
 1006              		.align	1
 1007              		.global	HAL_FLASHEx_DATAEEPROM_Erase
 1008              		.syntax unified
 1009              		.thumb
 1010              		.thumb_func
 1012              	HAL_FLASHEx_DATAEEPROM_Erase:
 1013              	.LFB82:
 777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Erase a word in data memory.
 780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be erased.
 781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  TypeErase  Indicate the way to erase at a specified address.
 782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         This parameter can be a value of @ref FLASH_Type_Program
 783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASHEx_DATAEEPROM_Unlock() function
 784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         must be called before.
 785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASHEx_DATAEEPROM_Lock() to the data EEPROM access
 786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         and Flash program erase control register access(recommended to protect
 787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         the DATA_EEPROM against possible unwanted operation).
 788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_DATAEEPROM_Erase(uint32_t TypeErase, uint32_t Address)
 791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 50


 1014              		.loc 1 791 1
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 16
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018 0000 80B5     		push	{r7, lr}
 1019              		.cfi_def_cfa_offset 8
 1020              		.cfi_offset 7, -8
 1021              		.cfi_offset 14, -4
 1022 0002 84B0     		sub	sp, sp, #16
 1023              		.cfi_def_cfa_offset 24
 1024 0004 00AF     		add	r7, sp, #0
 1025              		.cfi_def_cfa_register 7
 1026 0006 7860     		str	r0, [r7, #4]
 1027 0008 3960     		str	r1, [r7]
 792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1028              		.loc 1 792 21
 1029 000a 0023     		movs	r3, #0
 1030 000c FB73     		strb	r3, [r7, #15]
 793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
 795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_TYPEERASEDATA(TypeErase));
 796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
 797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1031              		.loc 1 799 12
 1032 000e 4CF25030 		movw	r0, #50000
 1033 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1034 0016 0346     		mov	r3, r0
 1035 0018 FB73     		strb	r3, [r7, #15]
 800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1036              		.loc 1 801 5
 1037 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1038 001c 002B     		cmp	r3, #0
 1039 001e 1AD1     		bne	.L61
 802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
 804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1040              		.loc 1 804 22
 1041 0020 0F4B     		ldr	r3, .L66
 1042 0022 0022     		movs	r2, #0
 1043 0024 5A61     		str	r2, [r3, #20]
 805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(TypeErase == FLASH_TYPEERASEDATA_WORD)
 1044              		.loc 1 806 7
 1045 0026 7B68     		ldr	r3, [r7, #4]
 1046 0028 022B     		cmp	r3, #2
 1047 002a 02D1     		bne	.L62
 807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Write 00000000h to valid address in the data memory */
 809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       *(__IO uint32_t *) Address = 0x00000000U;
 1048              		.loc 1 809 8
 1049 002c 3B68     		ldr	r3, [r7]
 1050              		.loc 1 809 34
 1051 002e 0022     		movs	r2, #0
 1052 0030 1A60     		str	r2, [r3]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 51


 1053              	.L62:
 810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(TypeErase == FLASH_TYPEERASEDATA_HALFWORD)
 1054              		.loc 1 812 7
 1055 0032 7B68     		ldr	r3, [r7, #4]
 1056 0034 012B     		cmp	r3, #1
 1057 0036 02D1     		bne	.L63
 813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Write 0000h to valid address in the data memory */
 815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       *(__IO uint16_t *) Address = (uint16_t)0x0000;
 1058              		.loc 1 815 8
 1059 0038 3B68     		ldr	r3, [r7]
 1060              		.loc 1 815 34
 1061 003a 0022     		movs	r2, #0
 1062 003c 1A80     		strh	r2, [r3]	@ movhi
 1063              	.L63:
 816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(TypeErase == FLASH_TYPEERASEDATA_BYTE)
 1064              		.loc 1 818 7
 1065 003e 7B68     		ldr	r3, [r7, #4]
 1066 0040 002B     		cmp	r3, #0
 1067 0042 02D1     		bne	.L64
 819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Write 00h to valid address in the data memory */
 821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       *(__IO uint8_t *) Address = (uint8_t)0x00;
 1068              		.loc 1 821 8
 1069 0044 3B68     		ldr	r3, [r7]
 1070              		.loc 1 821 33
 1071 0046 0022     		movs	r2, #0
 1072 0048 1A70     		strb	r2, [r3]
 1073              	.L64:
 822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1074              		.loc 1 824 14
 1075 004a 4CF25030 		movw	r0, #50000
 1076 004e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1077 0052 0346     		mov	r3, r0
 1078 0054 FB73     		strb	r3, [r7, #15]
 1079              	.L61:
 825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the erase status */
 828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 1080              		.loc 1 828 10
 1081 0056 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1082              		.loc 1 829 1
 1083 0058 1846     		mov	r0, r3
 1084 005a 1037     		adds	r7, r7, #16
 1085              		.cfi_def_cfa_offset 8
 1086 005c BD46     		mov	sp, r7
 1087              		.cfi_def_cfa_register 13
 1088              		@ sp needed
 1089 005e 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 52


 1090              	.L67:
 1091              		.align	2
 1092              	.L66:
 1093 0060 00000000 		.word	pFlash
 1094              		.cfi_endproc
 1095              	.LFE82:
 1097              		.section	.text.HAL_FLASHEx_DATAEEPROM_Program,"ax",%progbits
 1098              		.align	1
 1099              		.global	HAL_FLASHEx_DATAEEPROM_Program
 1100              		.syntax unified
 1101              		.thumb
 1102              		.thumb_func
 1104              	HAL_FLASHEx_DATAEEPROM_Program:
 1105              	.LFB83:
 830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Program word at a specified address
 833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASHEx_DATAEEPROM_Unlock() function
 834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         must be called before.
 835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASHEx_DATAEEPROM_Unlock() to he data EEPROM access
 836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         and Flash program erase control register access(recommended to protect
 837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         the DATA_EEPROM against possible unwanted operation).
 838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram() can be called before
 839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         this function to configure the Fixed Time Programming.
 840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  TypeProgram  Indicate the way to program at a specified address.
 841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         This parameter can be a value of @ref FLASHEx_Type_Program_Data
 842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address  specifie the address to be programmed.
 843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Data     specifie the data to be programmed
 844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** HAL_StatusTypeDef   HAL_FLASHEx_DATAEEPROM_Program(uint32_t TypeProgram, uint32_t Address, uint32_t
 849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1106              		.loc 1 849 1
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 24
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110 0000 80B5     		push	{r7, lr}
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 7, -8
 1113              		.cfi_offset 14, -4
 1114 0002 86B0     		sub	sp, sp, #24
 1115              		.cfi_def_cfa_offset 32
 1116 0004 00AF     		add	r7, sp, #0
 1117              		.cfi_def_cfa_register 7
 1118 0006 F860     		str	r0, [r7, #12]
 1119 0008 B960     		str	r1, [r7, #8]
 1120 000a 7A60     		str	r2, [r7, #4]
 850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1121              		.loc 1 850 21
 1122 000c 0123     		movs	r3, #1
 1123 000e FB75     		strb	r3, [r7, #23]
 851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Process Locked */
 853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 1124              		.loc 1 853 3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 53


 1125 0010 314B     		ldr	r3, .L78
 1126 0012 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 1127 0014 012B     		cmp	r3, #1
 1128 0016 01D1     		bne	.L69
 1129              		.loc 1 853 3 is_stmt 0 discriminator 1
 1130 0018 0223     		movs	r3, #2
 1131 001a 58E0     		b	.L70
 1132              	.L69:
 1133              		.loc 1 853 3 discriminator 2
 1134 001c 2E4B     		ldr	r3, .L78
 1135 001e 0122     		movs	r2, #1
 1136 0020 1A74     		strb	r2, [r3, #16]
 854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
 856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_TYPEPROGRAMDATA(TypeProgram));
 857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 859:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1137              		.loc 1 859 12 is_stmt 1 discriminator 2
 1138 0022 4CF25030 		movw	r0, #50000
 1139 0026 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1140 002a 0346     		mov	r3, r0
 1141 002c FB75     		strb	r3, [r7, #23]
 860:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 861:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1142              		.loc 1 861 5 discriminator 2
 1143 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1144 0030 002B     		cmp	r3, #0
 1145 0032 48D1     		bne	.L71
 862:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 863:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
 864:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1146              		.loc 1 864 22
 1147 0034 284B     		ldr	r3, .L78
 1148 0036 0022     		movs	r2, #0
 1149 0038 5A61     		str	r2, [r3, #20]
 865:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 866:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(TypeProgram == FLASH_TYPEPROGRAMDATA_WORD)
 1150              		.loc 1 866 7
 1151 003a FB68     		ldr	r3, [r7, #12]
 1152 003c 022B     		cmp	r3, #2
 1153 003e 06D1     		bne	.L72
 867:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 868:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Program word (32-bit) at a specified address.*/
 869:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_DATAEEPROM_ProgramWord(Address, (uint32_t) Data);
 1154              		.loc 1 869 16
 1155 0040 7968     		ldr	r1, [r7, #4]
 1156 0042 B868     		ldr	r0, [r7, #8]
 1157 0044 FFF7FEFF 		bl	FLASH_DATAEEPROM_ProgramWord
 1158 0048 0346     		mov	r3, r0
 1159 004a FB75     		strb	r3, [r7, #23]
 1160 004c 3BE0     		b	.L71
 1161              	.L72:
 870:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 871:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else if(TypeProgram == FLASH_TYPEPROGRAMDATA_HALFWORD)
 1162              		.loc 1 871 12
 1163 004e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 54


 1164 0050 012B     		cmp	r3, #1
 1165 0052 08D1     		bne	.L73
 872:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 873:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Program halfword (16-bit) at a specified address.*/
 874:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_DATAEEPROM_ProgramHalfWord(Address, (uint16_t) Data);
 1166              		.loc 1 874 16
 1167 0054 7B68     		ldr	r3, [r7, #4]
 1168 0056 9BB2     		uxth	r3, r3
 1169 0058 1946     		mov	r1, r3
 1170 005a B868     		ldr	r0, [r7, #8]
 1171 005c FFF7FEFF 		bl	FLASH_DATAEEPROM_ProgramHalfWord
 1172 0060 0346     		mov	r3, r0
 1173 0062 FB75     		strb	r3, [r7, #23]
 1174 0064 2FE0     		b	.L71
 1175              	.L73:
 875:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 876:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else if(TypeProgram == FLASH_TYPEPROGRAMDATA_BYTE)
 1176              		.loc 1 876 12
 1177 0066 FB68     		ldr	r3, [r7, #12]
 1178 0068 002B     		cmp	r3, #0
 1179 006a 08D1     		bne	.L74
 877:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 878:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Program byte (8-bit) at a specified address.*/
 879:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_DATAEEPROM_ProgramByte(Address, (uint8_t) Data);
 1180              		.loc 1 879 16
 1181 006c 7B68     		ldr	r3, [r7, #4]
 1182 006e DBB2     		uxtb	r3, r3
 1183 0070 1946     		mov	r1, r3
 1184 0072 B868     		ldr	r0, [r7, #8]
 1185 0074 FFF7FEFF 		bl	FLASH_DATAEEPROM_ProgramByte
 1186 0078 0346     		mov	r3, r0
 1187 007a FB75     		strb	r3, [r7, #23]
 1188 007c 23E0     		b	.L71
 1189              	.L74:
 880:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 881:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else if(TypeProgram == FLASH_TYPEPROGRAMDATA_FASTBYTE)
 1190              		.loc 1 881 12
 1191 007e FB68     		ldr	r3, [r7, #12]
 1192 0080 042B     		cmp	r3, #4
 1193 0082 08D1     		bne	.L75
 882:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 883:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /*Program word (8-bit) at a specified address.*/
 884:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_DATAEEPROM_FastProgramByte(Address, (uint8_t) Data);
 1194              		.loc 1 884 16
 1195 0084 7B68     		ldr	r3, [r7, #4]
 1196 0086 DBB2     		uxtb	r3, r3
 1197 0088 1946     		mov	r1, r3
 1198 008a B868     		ldr	r0, [r7, #8]
 1199 008c FFF7FEFF 		bl	FLASH_DATAEEPROM_FastProgramByte
 1200 0090 0346     		mov	r3, r0
 1201 0092 FB75     		strb	r3, [r7, #23]
 1202 0094 17E0     		b	.L71
 1203              	.L75:
 885:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 886:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else if(TypeProgram == FLASH_TYPEPROGRAMDATA_FASTHALFWORD)
 1204              		.loc 1 886 12
 1205 0096 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 55


 1206 0098 082B     		cmp	r3, #8
 1207 009a 08D1     		bne	.L76
 887:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 888:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Program halfword (16-bit) at a specified address.*/
 889:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_DATAEEPROM_FastProgramHalfWord(Address, (uint16_t) Data);
 1208              		.loc 1 889 16
 1209 009c 7B68     		ldr	r3, [r7, #4]
 1210 009e 9BB2     		uxth	r3, r3
 1211 00a0 1946     		mov	r1, r3
 1212 00a2 B868     		ldr	r0, [r7, #8]
 1213 00a4 FFF7FEFF 		bl	FLASH_DATAEEPROM_FastProgramHalfWord
 1214 00a8 0346     		mov	r3, r0
 1215 00aa FB75     		strb	r3, [r7, #23]
 1216 00ac 0BE0     		b	.L71
 1217              	.L76:
 890:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 891:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else if(TypeProgram == FLASH_TYPEPROGRAMDATA_FASTWORD)
 1218              		.loc 1 891 12
 1219 00ae FB68     		ldr	r3, [r7, #12]
 1220 00b0 102B     		cmp	r3, #16
 1221 00b2 06D1     		bne	.L77
 892:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 893:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Program word (32-bit) at a specified address.*/
 894:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_DATAEEPROM_FastProgramWord(Address, (uint32_t) Data);
 1222              		.loc 1 894 16
 1223 00b4 7968     		ldr	r1, [r7, #4]
 1224 00b6 B868     		ldr	r0, [r7, #8]
 1225 00b8 FFF7FEFF 		bl	FLASH_DATAEEPROM_FastProgramWord
 1226 00bc 0346     		mov	r3, r0
 1227 00be FB75     		strb	r3, [r7, #23]
 1228 00c0 01E0     		b	.L71
 1229              	.L77:
 895:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 896:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
 897:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 898:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = HAL_ERROR;
 1230              		.loc 1 898 14
 1231 00c2 0123     		movs	r3, #1
 1232 00c4 FB75     		strb	r3, [r7, #23]
 1233              	.L71:
 899:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
 900:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 901:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 902:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 903:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Process Unlocked */
 904:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 1234              		.loc 1 904 3
 1235 00c6 044B     		ldr	r3, .L78
 1236 00c8 0022     		movs	r2, #0
 1237 00ca 1A74     		strb	r2, [r3, #16]
 905:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 906:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 1238              		.loc 1 906 10
 1239 00cc FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1240              	.L70:
 907:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1241              		.loc 1 907 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 56


 1242 00ce 1846     		mov	r0, r3
 1243 00d0 1837     		adds	r7, r7, #24
 1244              		.cfi_def_cfa_offset 8
 1245 00d2 BD46     		mov	sp, r7
 1246              		.cfi_def_cfa_register 13
 1247              		@ sp needed
 1248 00d4 80BD     		pop	{r7, pc}
 1249              	.L79:
 1250 00d6 00BF     		.align	2
 1251              	.L78:
 1252 00d8 00000000 		.word	pFlash
 1253              		.cfi_endproc
 1254              	.LFE83:
 1256              		.section	.text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram,"ax",%progbits
 1257              		.align	1
 1258              		.global	HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram
 1259              		.syntax unified
 1260              		.thumb
 1261              		.thumb_func
 1263              	HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:
 1264              	.LFB84:
 908:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 909:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 910:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Enable DATA EEPROM fixed Time programming (2*Tprog).
 911:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
 912:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 913:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** void HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram(void)
 914:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1265              		.loc 1 914 1
 1266              		.cfi_startproc
 1267              		@ args = 0, pretend = 0, frame = 0
 1268              		@ frame_needed = 1, uses_anonymous_args = 0
 1269              		@ link register save eliminated.
 1270 0000 80B4     		push	{r7}
 1271              		.cfi_def_cfa_offset 4
 1272              		.cfi_offset 7, -4
 1273 0002 00AF     		add	r7, sp, #0
 1274              		.cfi_def_cfa_register 7
 915:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_FTDW);
 1275              		.loc 1 915 3
 1276 0004 044B     		ldr	r3, .L81
 1277 0006 5B68     		ldr	r3, [r3, #4]
 1278 0008 034A     		ldr	r2, .L81
 1279 000a 43F48073 		orr	r3, r3, #256
 1280 000e 5360     		str	r3, [r2, #4]
 916:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1281              		.loc 1 916 1
 1282 0010 00BF     		nop
 1283 0012 BD46     		mov	sp, r7
 1284              		.cfi_def_cfa_register 13
 1285              		@ sp needed
 1286 0014 80BC     		pop	{r7}
 1287              		.cfi_restore 7
 1288              		.cfi_def_cfa_offset 0
 1289 0016 7047     		bx	lr
 1290              	.L82:
 1291              		.align	2
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 57


 1292              	.L81:
 1293 0018 003C0240 		.word	1073888256
 1294              		.cfi_endproc
 1295              	.LFE84:
 1297              		.section	.text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram,"ax",%progbits
 1298              		.align	1
 1299              		.global	HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram
 1300              		.syntax unified
 1301              		.thumb
 1302              		.thumb_func
 1304              	HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:
 1305              	.LFB85:
 917:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 918:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 919:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Disables DATA EEPROM fixed Time programming (2*Tprog).
 920:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
 921:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 922:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** void HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram(void)
 923:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1306              		.loc 1 923 1
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 1, uses_anonymous_args = 0
 1310              		@ link register save eliminated.
 1311 0000 80B4     		push	{r7}
 1312              		.cfi_def_cfa_offset 4
 1313              		.cfi_offset 7, -4
 1314 0002 00AF     		add	r7, sp, #0
 1315              		.cfi_def_cfa_register 7
 924:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   CLEAR_BIT(FLASH->PECR, FLASH_PECR_FTDW);
 1316              		.loc 1 924 3
 1317 0004 044B     		ldr	r3, .L84
 1318 0006 5B68     		ldr	r3, [r3, #4]
 1319 0008 034A     		ldr	r2, .L84
 1320 000a 23F48073 		bic	r3, r3, #256
 1321 000e 5360     		str	r3, [r2, #4]
 925:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1322              		.loc 1 925 1
 1323 0010 00BF     		nop
 1324 0012 BD46     		mov	sp, r7
 1325              		.cfi_def_cfa_register 13
 1326              		@ sp needed
 1327 0014 80BC     		pop	{r7}
 1328              		.cfi_restore 7
 1329              		.cfi_def_cfa_offset 0
 1330 0016 7047     		bx	lr
 1331              	.L85:
 1332              		.align	2
 1333              	.L84:
 1334 0018 003C0240 		.word	1073888256
 1335              		.cfi_endproc
 1336              	.LFE85:
 1338              		.section	.text.FLASH_OB_RDPConfig,"ax",%progbits
 1339              		.align	1
 1340              		.syntax unified
 1341              		.thumb
 1342              		.thumb_func
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 58


 1344              	FLASH_OB_RDPConfig:
 1345              	.LFB86:
 926:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 927:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 928:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
 929:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 930:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 931:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 932:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
 933:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 934:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 935:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 936:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  * @{
 937:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  */
 938:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 939:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /*
 940:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** ==============================================================================
 941:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****               OPTIONS BYTES
 942:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** ==============================================================================
 943:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** */
 944:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
 945:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Enables or disables the read out protection.
 946:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_OB_Unlock() function
 947:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         must be called before.
 948:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  OB_RDP specifies the read protection level.
 949:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be:
 950:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_RDP_LEVEL_0 No protection
 951:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 952:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_RDP_LEVEL_2 Chip protection
 953:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 954:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *  !!!Warning!!! When enabling OB_RDP_LEVEL_2 it's no more possible to go back to level 1 or 0
 955:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *
 956:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
 957:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
 958:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDPConfig(uint8_t OB_RDP)
 959:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1346              		.loc 1 959 1
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 24
 1349              		@ frame_needed = 1, uses_anonymous_args = 0
 1350 0000 80B5     		push	{r7, lr}
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 7, -8
 1353              		.cfi_offset 14, -4
 1354 0002 86B0     		sub	sp, sp, #24
 1355              		.cfi_def_cfa_offset 32
 1356 0004 00AF     		add	r7, sp, #0
 1357              		.cfi_def_cfa_register 7
 1358 0006 0346     		mov	r3, r0
 1359 0008 FB71     		strb	r3, [r7, #7]
 960:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1360              		.loc 1 960 21
 1361 000a 0023     		movs	r3, #0
 1362 000c FB75     		strb	r3, [r7, #23]
 961:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp1 = 0U, tmp2 = 0U, tmp3 = 0U;
 1363              		.loc 1 961 12
 1364 000e 0023     		movs	r3, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 59


 1365 0010 3B61     		str	r3, [r7, #16]
 1366              		.loc 1 961 23
 1367 0012 0023     		movs	r3, #0
 1368 0014 FB60     		str	r3, [r7, #12]
 1369              		.loc 1 961 34
 1370 0016 0023     		movs	r3, #0
 1371 0018 BB60     		str	r3, [r7, #8]
 962:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 963:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
 964:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP(OB_RDP));
 965:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 966:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp1 = (uint32_t)(OB->RDP & FLASH_OBR_RDPRT);
 1372              		.loc 1 966 23
 1373 001a 1C4B     		ldr	r3, .L90
 1374 001c 1B68     		ldr	r3, [r3]
 1375              		.loc 1 966 8
 1376 001e DBB2     		uxtb	r3, r3
 1377 0020 3B61     		str	r3, [r7, #16]
 967:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 968:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* According to errata sheet, DocID022054 Rev 5, par2.1.5
 969:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   Before setting Level0 in the RDP register, check that the current level is not equal to Level0.
 970:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   If the current level is not equal to Level0, Level0 can be activated.
 971:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   If the current level is Level0 then the RDP register must not be written again with Level0. */
 972:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 973:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if ((tmp1 == OB_RDP_LEVEL_0) && (OB_RDP == OB_RDP_LEVEL_0))
 1378              		.loc 1 973 6
 1379 0022 3B69     		ldr	r3, [r7, #16]
 1380 0024 AA2B     		cmp	r3, #170
 1381 0026 05D1     		bne	.L87
 1382              		.loc 1 973 32 discriminator 1
 1383 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1384 002a AA2B     		cmp	r3, #170
 1385 002c 02D1     		bne	.L87
 974:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 975:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /*current level is Level0 then the RDP register must not be written again with Level0. */
 976:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = HAL_ERROR;
 1386              		.loc 1 976 12
 1387 002e 0123     		movs	r3, #1
 1388 0030 FB75     		strb	r3, [r7, #23]
 1389 0032 25E0     		b	.L88
 1390              	.L87:
 977:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 978:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
 979:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
 980:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_SPRMOD)
 981:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Mask SPRMOD bit */
 982:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp3 = (uint32_t)(OB->RDP & FLASH_OBR_SPRMOD);
 1391              		.loc 1 982 25
 1392 0034 154B     		ldr	r3, .L90
 1393 0036 1B68     		ldr	r3, [r3]
 1394              		.loc 1 982 10
 1395 0038 03F48073 		and	r3, r3, #256
 1396 003c BB60     		str	r3, [r7, #8]
 983:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif
 984:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 985:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* calculate the option byte to write */
 986:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (~((uint32_t)(OB_RDP | tmp3)));
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 60


 1397              		.loc 1 986 15
 1398 003e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1399 0040 BB68     		ldr	r3, [r7, #8]
 1400 0042 1343     		orrs	r3, r3, r2
 1401              		.loc 1 986 10
 1402 0044 DB43     		mvns	r3, r3
 1403 0046 3B61     		str	r3, [r7, #16]
 987:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)(((uint32_t)((uint32_t)(tmp1) << 16U)) | ((uint32_t)(OB_RDP | tmp3)));
 1404              		.loc 1 987 24
 1405 0048 3B69     		ldr	r3, [r7, #16]
 1406 004a 1A04     		lsls	r2, r3, #16
 1407              		.loc 1 987 64
 1408 004c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1409 004e BB68     		ldr	r3, [r7, #8]
 1410 0050 0B43     		orrs	r3, r3, r1
 1411              		.loc 1 987 10
 1412 0052 1343     		orrs	r3, r3, r2
 1413 0054 FB60     		str	r3, [r7, #12]
 988:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 989:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 990:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1414              		.loc 1 990 14
 1415 0056 4CF25030 		movw	r0, #50000
 1416 005a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1417 005e 0346     		mov	r3, r0
 1418 0060 FB75     		strb	r3, [r7, #23]
 991:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 992:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(status == HAL_OK)
 1419              		.loc 1 992 7
 1420 0062 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1421 0064 002B     		cmp	r3, #0
 1422 0066 0BD1     		bne	.L88
 993:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
 994:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Clean the error context */
 995:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1423              		.loc 1 995 24
 1424 0068 094B     		ldr	r3, .L90+4
 1425 006a 0022     		movs	r2, #0
 1426 006c 5A61     		str	r2, [r3, #20]
 996:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 997:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* program read protection level */
 998:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       OB->RDP = tmp2;
 1427              		.loc 1 998 9
 1428 006e 074A     		ldr	r2, .L90
 1429              		.loc 1 998 15
 1430 0070 FB68     		ldr	r3, [r7, #12]
 1431 0072 1360     		str	r3, [r2]
 999:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1000:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
1001:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1432              		.loc 1 1001 16
 1433 0074 4CF25030 		movw	r0, #50000
 1434 0078 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1435 007c 0346     		mov	r3, r0
 1436 007e FB75     		strb	r3, [r7, #23]
 1437              	.L88:
1002:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 61


1003:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1004:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1005:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Read protection operation Status */
1006:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 1438              		.loc 1 1006 10
 1439 0080 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1007:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1440              		.loc 1 1007 1
 1441 0082 1846     		mov	r0, r3
 1442 0084 1837     		adds	r7, r7, #24
 1443              		.cfi_def_cfa_offset 8
 1444 0086 BD46     		mov	sp, r7
 1445              		.cfi_def_cfa_register 13
 1446              		@ sp needed
 1447 0088 80BD     		pop	{r7, pc}
 1448              	.L91:
 1449 008a 00BF     		.align	2
 1450              	.L90:
 1451 008c 0000F81F 		.word	536346624
 1452 0090 00000000 		.word	pFlash
 1453              		.cfi_endproc
 1454              	.LFE86:
 1456              		.section	.text.FLASH_OB_BORConfig,"ax",%progbits
 1457              		.align	1
 1458              		.syntax unified
 1459              		.thumb
 1460              		.thumb_func
 1462              	FLASH_OB_BORConfig:
 1463              	.LFB87:
1008:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1009:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1010:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Programs the FLASH brownout reset threshold level Option Byte.
1011:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  OB_BOR Selects the brownout reset threshold level.
1012:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1013:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_OFF BOR is disabled at power down, the reset is asserted when the VDD
1014:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *                      power supply reaches the PDR(Power Down Reset) threshold (1.5V)
1015:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL1 BOR Reset threshold levels for 1.7V - 1.8V VDD power supply
1016:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL2 BOR Reset threshold levels for 1.9V - 2.0V VDD power supply
1017:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL3 BOR Reset threshold levels for 2.3V - 2.4V VDD power supply
1018:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL4 BOR Reset threshold levels for 2.55V - 2.65V VDD power supply
1019:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOR_LEVEL5 BOR Reset threshold levels for 2.8V - 2.9V VDD power supply
1020:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1021:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1022:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BORConfig(uint8_t OB_BOR)
1023:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1464              		.loc 1 1023 1
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 24
 1467              		@ frame_needed = 1, uses_anonymous_args = 0
 1468 0000 80B5     		push	{r7, lr}
 1469              		.cfi_def_cfa_offset 8
 1470              		.cfi_offset 7, -8
 1471              		.cfi_offset 14, -4
 1472 0002 86B0     		sub	sp, sp, #24
 1473              		.cfi_def_cfa_offset 32
 1474 0004 00AF     		add	r7, sp, #0
 1475              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 62


 1476 0006 0346     		mov	r3, r0
 1477 0008 FB71     		strb	r3, [r7, #7]
1024:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1478              		.loc 1 1024 21
 1479 000a 0023     		movs	r3, #0
 1480 000c FB75     		strb	r3, [r7, #23]
1025:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 1481              		.loc 1 1025 12
 1482 000e 0023     		movs	r3, #0
 1483 0010 3B61     		str	r3, [r7, #16]
 1484              		.loc 1 1025 22
 1485 0012 0023     		movs	r3, #0
 1486 0014 FB60     		str	r3, [r7, #12]
1026:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1027:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1028:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_BOR_LEVEL(OB_BOR));
1029:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1030:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Get the User Option byte register */
1031:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp1 = OB->USER & ((~FLASH_OBR_BOR_LEV) >> 16U);
 1487              		.loc 1 1031 12
 1488 0016 164B     		ldr	r3, .L95
 1489 0018 5A68     		ldr	r2, [r3, #4]
 1490              		.loc 1 1031 8
 1491 001a 4FF6F073 		movw	r3, #65520
 1492 001e 1340     		ands	r3, r3, r2
 1493 0020 FB60     		str	r3, [r7, #12]
1032:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1033:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Calculate the option byte to write - [0xFFU | nUSER | 0x00U | USER]*/
1034:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp = (uint32_t)~((OB_BOR | tmp1)) << 16U;
 1494              		.loc 1 1034 29
 1495 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1496 0024 FB68     		ldr	r3, [r7, #12]
 1497 0026 1343     		orrs	r3, r3, r2
 1498              		.loc 1 1034 9
 1499 0028 DB43     		mvns	r3, r3
 1500              		.loc 1 1034 7
 1501 002a 1B04     		lsls	r3, r3, #16
 1502 002c 3B61     		str	r3, [r7, #16]
1035:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp |= (OB_BOR | tmp1);
 1503              		.loc 1 1035 18
 1504 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1505 0030 FB68     		ldr	r3, [r7, #12]
 1506 0032 1343     		orrs	r3, r3, r2
 1507              		.loc 1 1035 7
 1508 0034 3A69     		ldr	r2, [r7, #16]
 1509 0036 1343     		orrs	r3, r3, r2
 1510 0038 3B61     		str	r3, [r7, #16]
1036:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1037:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1038:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1511              		.loc 1 1038 12
 1512 003a 4CF25030 		movw	r0, #50000
 1513 003e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1514 0042 0346     		mov	r3, r0
 1515 0044 FB75     		strb	r3, [r7, #23]
1039:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1040:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 63


 1516              		.loc 1 1040 5
 1517 0046 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1518 0048 002B     		cmp	r3, #0
 1519 004a 0BD1     		bne	.L93
1041:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1042:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
1043:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1520              		.loc 1 1043 22
 1521 004c 094B     		ldr	r3, .L95+4
 1522 004e 0022     		movs	r2, #0
 1523 0050 5A61     		str	r2, [r3, #20]
1044:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1045:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Write the BOR Option Byte */
1046:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->USER = tmp;
 1524              		.loc 1 1046 7
 1525 0052 074A     		ldr	r2, .L95
 1526              		.loc 1 1046 14
 1527 0054 3B69     		ldr	r3, [r7, #16]
 1528 0056 5360     		str	r3, [r2, #4]
1047:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1048:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1049:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1529              		.loc 1 1049 14
 1530 0058 4CF25030 		movw	r0, #50000
 1531 005c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1532 0060 0346     		mov	r3, r0
 1533 0062 FB75     		strb	r3, [r7, #23]
 1534              	.L93:
1050:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1051:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1052:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Option Byte BOR Programming Status */
1053:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 1535              		.loc 1 1053 10
 1536 0064 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1054:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1537              		.loc 1 1054 1
 1538 0066 1846     		mov	r0, r3
 1539 0068 1837     		adds	r7, r7, #24
 1540              		.cfi_def_cfa_offset 8
 1541 006a BD46     		mov	sp, r7
 1542              		.cfi_def_cfa_register 13
 1543              		@ sp needed
 1544 006c 80BD     		pop	{r7, pc}
 1545              	.L96:
 1546 006e 00BF     		.align	2
 1547              	.L95:
 1548 0070 0000F81F 		.word	536346624
 1549 0074 00000000 		.word	pFlash
 1550              		.cfi_endproc
 1551              	.LFE87:
 1553              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 1554              		.align	1
 1555              		.syntax unified
 1556              		.thumb
 1557              		.thumb_func
 1559              	FLASH_OB_GetUser:
 1560              	.LFB88:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 64


1055:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1056:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1057:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Returns the FLASH User Option Bytes values.
1058:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval The FLASH User Option Bytes.
1059:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1060:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
1061:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1561              		.loc 1 1061 1
 1562              		.cfi_startproc
 1563              		@ args = 0, pretend = 0, frame = 0
 1564              		@ frame_needed = 1, uses_anonymous_args = 0
 1565              		@ link register save eliminated.
 1566 0000 80B4     		push	{r7}
 1567              		.cfi_def_cfa_offset 4
 1568              		.cfi_offset 7, -4
 1569 0002 00AF     		add	r7, sp, #0
 1570              		.cfi_def_cfa_register 7
1062:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the User Option Byte */
1063:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return (uint8_t)((FLASH->OBR & (FLASH_OBR_IWDG_SW | FLASH_OBR_nRST_STOP | FLASH_OBR_nRST_STDBY)) 
 1571              		.loc 1 1063 26
 1572 0004 054B     		ldr	r3, .L99
 1573 0006 DB69     		ldr	r3, [r3, #28]
 1574              		.loc 1 1063 100
 1575 0008 1B0C     		lsrs	r3, r3, #16
 1576              		.loc 1 1063 10
 1577 000a DBB2     		uxtb	r3, r3
 1578 000c 03F07003 		and	r3, r3, #112
 1579 0010 DBB2     		uxtb	r3, r3
1064:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1580              		.loc 1 1064 1
 1581 0012 1846     		mov	r0, r3
 1582 0014 BD46     		mov	sp, r7
 1583              		.cfi_def_cfa_register 13
 1584              		@ sp needed
 1585 0016 80BC     		pop	{r7}
 1586              		.cfi_restore 7
 1587              		.cfi_def_cfa_offset 0
 1588 0018 7047     		bx	lr
 1589              	.L100:
 1590 001a 00BF     		.align	2
 1591              	.L99:
 1592 001c 003C0240 		.word	1073888256
 1593              		.cfi_endproc
 1594              	.LFE88:
 1596              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
 1597              		.align	1
 1598              		.syntax unified
 1599              		.thumb
 1600              		.thumb_func
 1602              	FLASH_OB_GetRDP:
 1603              	.LFB89:
1065:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1066:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1067:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
1068:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval FLASH RDP level
1069:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
1070:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 65


1071:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
1072:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_2 Full chip protection
1073:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1074:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetRDP(void)
1075:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1604              		.loc 1 1075 1
 1605              		.cfi_startproc
 1606              		@ args = 0, pretend = 0, frame = 8
 1607              		@ frame_needed = 1, uses_anonymous_args = 0
 1608              		@ link register save eliminated.
 1609 0000 80B4     		push	{r7}
 1610              		.cfi_def_cfa_offset 4
 1611              		.cfi_offset 7, -4
 1612 0002 83B0     		sub	sp, sp, #12
 1613              		.cfi_def_cfa_offset 16
 1614 0004 00AF     		add	r7, sp, #0
 1615              		.cfi_def_cfa_register 7
1076:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint8_t rdp_level = (uint8_t)(FLASH->OBR & FLASH_OBR_RDPRT);
 1616              		.loc 1 1076 38
 1617 0006 084B     		ldr	r3, .L104
 1618 0008 DB69     		ldr	r3, [r3, #28]
 1619              		.loc 1 1076 11
 1620 000a FB71     		strb	r3, [r7, #7]
1077:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1078:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if ((rdp_level != OB_RDP_LEVEL_0) && (rdp_level != OB_RDP_LEVEL_2))
 1621              		.loc 1 1078 6
 1622 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1623 000e AA2B     		cmp	r3, #170
 1624 0010 04D0     		beq	.L102
 1625              		.loc 1 1078 37 discriminator 1
 1626 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1627 0014 CC2B     		cmp	r3, #204
 1628 0016 01D0     		beq	.L102
1079:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1080:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     return (OB_RDP_LEVEL_1);
 1629              		.loc 1 1080 12
 1630 0018 BB23     		movs	r3, #187
 1631 001a 00E0     		b	.L103
 1632              	.L102:
1081:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1082:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
1083:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1084:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     return (rdp_level);
 1633              		.loc 1 1084 12
 1634 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1635              	.L103:
1085:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1086:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1636              		.loc 1 1086 1
 1637 001e 1846     		mov	r0, r3
 1638 0020 0C37     		adds	r7, r7, #12
 1639              		.cfi_def_cfa_offset 4
 1640 0022 BD46     		mov	sp, r7
 1641              		.cfi_def_cfa_register 13
 1642              		@ sp needed
 1643 0024 80BC     		pop	{r7}
 1644              		.cfi_restore 7
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 66


 1645              		.cfi_def_cfa_offset 0
 1646 0026 7047     		bx	lr
 1647              	.L105:
 1648              		.align	2
 1649              	.L104:
 1650 0028 003C0240 		.word	1073888256
 1651              		.cfi_endproc
 1652              	.LFE89:
 1654              		.section	.text.FLASH_OB_GetBOR,"ax",%progbits
 1655              		.align	1
 1656              		.syntax unified
 1657              		.thumb
 1658              		.thumb_func
 1660              	FLASH_OB_GetBOR:
 1661              	.LFB90:
1087:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1088:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1089:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Returns the FLASH BOR level.
1090:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval The BOR level Option Bytes.
1091:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1092:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetBOR(void)
1093:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1662              		.loc 1 1093 1
 1663              		.cfi_startproc
 1664              		@ args = 0, pretend = 0, frame = 0
 1665              		@ frame_needed = 1, uses_anonymous_args = 0
 1666              		@ link register save eliminated.
 1667 0000 80B4     		push	{r7}
 1668              		.cfi_def_cfa_offset 4
 1669              		.cfi_offset 7, -4
 1670 0002 00AF     		add	r7, sp, #0
 1671              		.cfi_def_cfa_register 7
1094:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the BOR level */
1095:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return (uint8_t)((FLASH->OBR & (uint32_t)FLASH_OBR_BOR_LEV) >> 16U);
 1672              		.loc 1 1095 26
 1673 0004 054B     		ldr	r3, .L108
 1674 0006 DB69     		ldr	r3, [r3, #28]
 1675              		.loc 1 1095 63
 1676 0008 1B0C     		lsrs	r3, r3, #16
 1677              		.loc 1 1095 10
 1678 000a DBB2     		uxtb	r3, r3
 1679 000c 03F00F03 		and	r3, r3, #15
 1680 0010 DBB2     		uxtb	r3, r3
1096:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1681              		.loc 1 1096 1
 1682 0012 1846     		mov	r0, r3
 1683 0014 BD46     		mov	sp, r7
 1684              		.cfi_def_cfa_register 13
 1685              		@ sp needed
 1686 0016 80BC     		pop	{r7}
 1687              		.cfi_restore 7
 1688              		.cfi_def_cfa_offset 0
 1689 0018 7047     		bx	lr
 1690              	.L109:
 1691 001a 00BF     		.align	2
 1692              	.L108:
 1693 001c 003C0240 		.word	1073888256
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 67


 1694              		.cfi_endproc
 1695              	.LFE90:
 1697              		.section	.text.FLASH_OB_WRPConfig,"ax",%progbits
 1698              		.align	1
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1703              	FLASH_OB_WRPConfig:
 1704              	.LFB91:
1097:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1098:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1099:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Write protects the desired pages of the first 64KB of the Flash.
1100:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
1101:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains WRP parameters.
1102:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages Wtite protection.
1103:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be: ENABLE or DISABLE.
1104:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef
1105:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1106:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_WRPConfig(FLASH_OBProgramInitTypeDef *pOBInit, FunctionalState Ne
1107:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1705              		.loc 1 1107 1
 1706              		.cfi_startproc
 1707              		@ args = 0, pretend = 0, frame = 16
 1708              		@ frame_needed = 1, uses_anonymous_args = 0
 1709 0000 80B5     		push	{r7, lr}
 1710              		.cfi_def_cfa_offset 8
 1711              		.cfi_offset 7, -8
 1712              		.cfi_offset 14, -4
 1713 0002 84B0     		sub	sp, sp, #16
 1714              		.cfi_def_cfa_offset 24
 1715 0004 00AF     		add	r7, sp, #0
 1716              		.cfi_def_cfa_register 7
 1717 0006 7860     		str	r0, [r7, #4]
 1718 0008 0B46     		mov	r3, r1
 1719 000a FB70     		strb	r3, [r7, #3]
1108:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1720              		.loc 1 1108 21
 1721 000c 0023     		movs	r3, #0
 1722 000e FB73     		strb	r3, [r7, #15]
1109:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1110:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1111:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1723              		.loc 1 1111 12
 1724 0010 4CF25030 		movw	r0, #50000
 1725 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1726 0018 0346     		mov	r3, r0
 1727 001a FB73     		strb	r3, [r7, #15]
1112:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1113:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1728              		.loc 1 1113 5
 1729 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1730 001e 002B     		cmp	r3, #0
 1731 0020 13D1     		bne	.L111
1114:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1115:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
1116:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1732              		.loc 1 1116 22
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 68


 1733 0022 0C4B     		ldr	r3, .L114
 1734 0024 0022     		movs	r2, #0
 1735 0026 5A61     		str	r2, [r3, #20]
1117:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1118:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* WRP for sector between 0 to 31 */
1119:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pOBInit->WRPSector0To31 != 0U)
 1736              		.loc 1 1119 16
 1737 0028 7B68     		ldr	r3, [r7, #4]
 1738 002a 9B68     		ldr	r3, [r3, #8]
 1739              		.loc 1 1119 8
 1740 002c 002B     		cmp	r3, #0
 1741 002e 06D0     		beq	.L112
1120:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1121:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       FLASH_OB_WRPConfigWRP1OrPCROP1(pOBInit->WRPSector0To31, NewState);
 1742              		.loc 1 1121 7
 1743 0030 7B68     		ldr	r3, [r7, #4]
 1744 0032 9B68     		ldr	r3, [r3, #8]
 1745 0034 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1746 0036 1146     		mov	r1, r2
 1747 0038 1846     		mov	r0, r3
 1748 003a FFF7FEFF 		bl	FLASH_OB_WRPConfigWRP1OrPCROP1
 1749              	.L112:
1122:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1123:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1124:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xC) || defined(STM32L151xC) || defined(STM32L152xC) || defined(STM32L162xC)   
1125:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L151xCA) || defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xCA)
1126:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xD) || defined(STM32L152xDX) || defined(STM32L162xCA) || defined(STM32L162xD) 
1127:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE)
1128:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1129:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Pages for Cat3, Cat4 & Cat5 devices*/
1130:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* WRP for sector between 32 to 63 */
1131:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pOBInit->WRPSector32To63 != 0U)
1132:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1133:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       FLASH_OB_WRPConfigWRP2OrPCROP2(pOBInit->WRPSector32To63, NewState);
1134:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1135:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1136:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xC || STM32L151xC || STM32L152xC || (...) || STM32L151xE || STM32L152xE || STM32
1137:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1138:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xD) || defined(STM32L152xDX) 
1139:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xD) || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE)  
1140:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xE)
1141:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1142:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Pages for devices with FLASH >= 256KB*/
1143:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* WRP for sector between 64 to 95 */
1144:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pOBInit->WRPSector64To95 != 0U)
1145:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1146:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       FLASH_OB_WRPConfigWRP3(pOBInit->WRPSector64To95, NewState);
1147:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1148:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1149:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xD || STM32L152xD || STM32L162xD || STM32L151xE || STM32L152xE || STM32L162xE */
1150:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1151:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE) || defined(STM32L151xDX) \
1152:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xDX) || defined(STM32L162xDX)
1153:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1154:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Pages for Cat5 devices*/
1155:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* WRP for sector between 96 to 127 */
1156:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pOBInit->WRPSector96To127 != 0U)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 69


1157:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1158:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       FLASH_OB_WRPConfigWRP4(pOBInit->WRPSector96To127, NewState);
1159:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1160:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1161:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xE || STM32L152xE || STM32L162xE || STM32L151xDX || ... */
1162:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1163:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1164:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1750              		.loc 1 1164 14
 1751 003e 4CF25030 		movw	r0, #50000
 1752 0042 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1753 0046 0346     		mov	r3, r0
 1754 0048 FB73     		strb	r3, [r7, #15]
 1755              	.L111:
1165:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1166:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1167:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the write protection operation Status */
1168:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 1756              		.loc 1 1168 10
 1757 004a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1169:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1758              		.loc 1 1169 1
 1759 004c 1846     		mov	r0, r3
 1760 004e 1037     		adds	r7, r7, #16
 1761              		.cfi_def_cfa_offset 8
 1762 0050 BD46     		mov	sp, r7
 1763              		.cfi_def_cfa_register 13
 1764              		@ sp needed
 1765 0052 80BD     		pop	{r7, pc}
 1766              	.L115:
 1767              		.align	2
 1768              	.L114:
 1769 0054 00000000 		.word	pFlash
 1770              		.cfi_endproc
 1771              	.LFE91:
 1773              		.section	.text.FLASH_OB_PCROPConfig,"ax",%progbits
 1774              		.align	1
 1775              		.syntax unified
 1776              		.thumb
 1777              		.thumb_func
 1779              	FLASH_OB_PCROPConfig:
 1780              	.LFB92:
1170:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1171:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xBA) || defined(STM32L152xBA) || defined(STM32L151xC) || defined(STM32L152xC) 
1172:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xC)
1173:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1174:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Enables the read/write protection (PCROP) of the desired
1175:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         sectors.
1176:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for Cat2 & Cat3 devices
1177:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  pAdvOBInit pointer to an FLASH_AdvOBProgramInitTypeDef structure that
1178:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         contains PCROP parameters.
1179:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages read/Write protection.
1180:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be: ENABLE or DISABLE.
1181:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1182:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1183:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_PCROPConfig(FLASH_AdvOBProgramInitTypeDef *pAdvOBInit, Functional
1184:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 70


 1781              		.loc 1 1184 1
 1782              		.cfi_startproc
 1783              		@ args = 0, pretend = 0, frame = 16
 1784              		@ frame_needed = 1, uses_anonymous_args = 0
 1785 0000 80B5     		push	{r7, lr}
 1786              		.cfi_def_cfa_offset 8
 1787              		.cfi_offset 7, -8
 1788              		.cfi_offset 14, -4
 1789 0002 84B0     		sub	sp, sp, #16
 1790              		.cfi_def_cfa_offset 24
 1791 0004 00AF     		add	r7, sp, #0
 1792              		.cfi_def_cfa_register 7
 1793 0006 7860     		str	r0, [r7, #4]
 1794 0008 0B46     		mov	r3, r1
 1795 000a FB70     		strb	r3, [r7, #3]
1185:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1796              		.loc 1 1185 21
 1797 000c 0023     		movs	r3, #0
 1798 000e FB73     		strb	r3, [r7, #15]
1186:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   FunctionalState pcropstate = DISABLE;
 1799              		.loc 1 1186 19
 1800 0010 0023     		movs	r3, #0
 1801 0012 BB73     		strb	r3, [r7, #14]
1187:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1188:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1189:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1802              		.loc 1 1189 12
 1803 0014 4CF25030 		movw	r0, #50000
 1804 0018 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1805 001c 0346     		mov	r3, r0
 1806 001e FB73     		strb	r3, [r7, #15]
1190:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1191:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Invert state to use same function of WRP */
1192:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (NewState == DISABLE)
 1807              		.loc 1 1192 6
 1808 0020 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1809 0022 002B     		cmp	r3, #0
 1810 0024 01D1     		bne	.L117
1193:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1194:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pcropstate = ENABLE;
 1811              		.loc 1 1194 16
 1812 0026 0123     		movs	r3, #1
 1813 0028 BB73     		strb	r3, [r7, #14]
 1814              	.L117:
1195:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1196:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1197:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 1815              		.loc 1 1197 5
 1816 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1817 002c 002B     		cmp	r3, #0
 1818 002e 13D1     		bne	.L118
1198:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1199:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
1200:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1819              		.loc 1 1200 22
 1820 0030 0C4B     		ldr	r3, .L121
 1821 0032 0022     		movs	r2, #0
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 71


 1822 0034 5A61     		str	r2, [r3, #20]
1201:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1202:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Pages for Cat2 devices*/
1203:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* PCROP for sector between 0 to 31 */
1204:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pAdvOBInit->PCROPSector0To31 != 0U)
 1823              		.loc 1 1204 19
 1824 0036 7B68     		ldr	r3, [r7, #4]
 1825 0038 9B68     		ldr	r3, [r3, #8]
 1826              		.loc 1 1204 8
 1827 003a 002B     		cmp	r3, #0
 1828 003c 06D0     		beq	.L119
1205:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1206:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       FLASH_OB_WRPConfigWRP1OrPCROP1(pAdvOBInit->PCROPSector0To31, pcropstate);
 1829              		.loc 1 1206 7
 1830 003e 7B68     		ldr	r3, [r7, #4]
 1831 0040 9B68     		ldr	r3, [r3, #8]
 1832 0042 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1833 0044 1146     		mov	r1, r2
 1834 0046 1846     		mov	r0, r3
 1835 0048 FFF7FEFF 		bl	FLASH_OB_WRPConfigWRP1OrPCROP1
 1836              	.L119:
1207:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1208:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1209:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xC) || defined(STM32L151xC) || defined(STM32L152xC) || defined(STM32L162xC)
1210:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1211:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Pages for Cat3 devices*/
1212:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* WRP for sector between 32 to 63 */
1213:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if (pAdvOBInit->PCROPSector32To63 != 0U)
1214:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1215:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       FLASH_OB_WRPConfigWRP2OrPCROP2(pAdvOBInit->PCROPSector32To63, pcropstate);
1216:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1217:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1218:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xC || STM32L151xC || STM32L152xC || STM32L162xC  */
1219:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1220:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1221:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 1837              		.loc 1 1221 14
 1838 004c 4CF25030 		movw	r0, #50000
 1839 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1840 0054 0346     		mov	r3, r0
 1841 0056 FB73     		strb	r3, [r7, #15]
 1842              	.L118:
1222:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1223:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1224:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the write protection operation Status */
1225:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 1843              		.loc 1 1225 10
 1844 0058 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1226:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1845              		.loc 1 1226 1
 1846 005a 1846     		mov	r0, r3
 1847 005c 1037     		adds	r7, r7, #16
 1848              		.cfi_def_cfa_offset 8
 1849 005e BD46     		mov	sp, r7
 1850              		.cfi_def_cfa_register 13
 1851              		@ sp needed
 1852 0060 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 72


 1853              	.L122:
 1854 0062 00BF     		.align	2
 1855              	.L121:
 1856 0064 00000000 		.word	pFlash
 1857              		.cfi_endproc
 1858              	.LFE92:
 1860              		.section	.text.FLASH_OB_WRPConfigWRP1OrPCROP1,"ax",%progbits
 1861              		.align	1
 1862              		.syntax unified
 1863              		.thumb
 1864              		.thumb_func
 1866              	FLASH_OB_WRPConfigWRP1OrPCROP1:
 1867              	.LFB93:
1227:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xBA || STM32L152xBA || STM32L151xC || STM32L152xC || STM32L162xC */
1228:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1229:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1230:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Write protects the desired pages of the first 128KB of the Flash.
1231:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  WRP1OrPCROP1 specifies the address of the pages to be write protected.
1232:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be a combination of @ref FLASHEx_Option_Bytes_Write_Protection1
1233:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages Write protection.
1234:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be: ENABLE or DISABLE.
1235:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
1236:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1237:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void FLASH_OB_WRPConfigWRP1OrPCROP1(uint32_t WRP1OrPCROP1, FunctionalState NewState)
1238:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 1868              		.loc 1 1238 1
 1869              		.cfi_startproc
 1870              		@ args = 0, pretend = 0, frame = 24
 1871              		@ frame_needed = 1, uses_anonymous_args = 0
 1872              		@ link register save eliminated.
 1873 0000 80B4     		push	{r7}
 1874              		.cfi_def_cfa_offset 4
 1875              		.cfi_offset 7, -4
 1876 0002 87B0     		sub	sp, sp, #28
 1877              		.cfi_def_cfa_offset 32
 1878 0004 00AF     		add	r7, sp, #0
 1879              		.cfi_def_cfa_register 7
 1880 0006 7860     		str	r0, [r7, #4]
 1881 0008 0B46     		mov	r3, r1
 1882 000a FB70     		strb	r3, [r7, #3]
1239:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t wrp01data = 0U, wrp23data = 0U;
 1883              		.loc 1 1239 12
 1884 000c 0023     		movs	r3, #0
 1885 000e 7B61     		str	r3, [r7, #20]
 1886              		.loc 1 1239 28
 1887 0010 0023     		movs	r3, #0
 1888 0012 3B61     		str	r3, [r7, #16]
1240:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1241:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
 1889              		.loc 1 1241 12
 1890 0014 0023     		movs	r3, #0
 1891 0016 FB60     		str	r3, [r7, #12]
 1892              		.loc 1 1241 23
 1893 0018 0023     		movs	r3, #0
 1894 001a BB60     		str	r3, [r7, #8]
1242:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1243:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 73


1244:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WRP1OrPCROP1));
1245:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1246:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1247:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (NewState != DISABLE)
 1895              		.loc 1 1247 6
 1896 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1897 001e 002B     		cmp	r3, #0
 1898 0020 23D0     		beq	.L124
1248:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1249:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp01data = (uint16_t)(((WRP1OrPCROP1 & WRP_MASK_LOW) | OB->WRP01));
 1899              		.loc 1 1249 17
 1900 0022 7B68     		ldr	r3, [r7, #4]
 1901 0024 9AB2     		uxth	r2, r3
 1902              		.loc 1 1249 63
 1903 0026 264B     		ldr	r3, .L127
 1904 0028 9B68     		ldr	r3, [r3, #8]
 1905              		.loc 1 1249 17
 1906 002a 9BB2     		uxth	r3, r3
 1907 002c 1343     		orrs	r3, r3, r2
 1908 002e 9BB2     		uxth	r3, r3
 1909              		.loc 1 1249 15
 1910 0030 7B61     		str	r3, [r7, #20]
1250:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp23data = (uint16_t)((((WRP1OrPCROP1 & WRP_MASK_HIGH)>>16U | OB->WRP23)));
 1911              		.loc 1 1250 60
 1912 0032 7B68     		ldr	r3, [r7, #4]
 1913 0034 1B0C     		lsrs	r3, r3, #16
 1914              		.loc 1 1250 17
 1915 0036 9AB2     		uxth	r2, r3
 1916              		.loc 1 1250 70
 1917 0038 214B     		ldr	r3, .L127
 1918 003a DB68     		ldr	r3, [r3, #12]
 1919              		.loc 1 1250 17
 1920 003c 9BB2     		uxth	r3, r3
 1921 003e 1343     		orrs	r3, r3, r2
 1922 0040 9BB2     		uxth	r3, r3
 1923              		.loc 1 1250 15
 1924 0042 3B61     		str	r3, [r7, #16]
1251:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)(~(wrp01data) << 16U)|(wrp01data);
 1925              		.loc 1 1251 23
 1926 0044 7B69     		ldr	r3, [r7, #20]
 1927 0046 DB43     		mvns	r3, r3
 1928              		.loc 1 1251 36
 1929 0048 1B04     		lsls	r3, r3, #16
 1930              		.loc 1 1251 10
 1931 004a 7A69     		ldr	r2, [r7, #20]
 1932 004c 1343     		orrs	r3, r3, r2
 1933 004e FB60     		str	r3, [r7, #12]
1252:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP01 = tmp1;
 1934              		.loc 1 1252 7
 1935 0050 1B4A     		ldr	r2, .L127
 1936              		.loc 1 1252 15
 1937 0052 FB68     		ldr	r3, [r7, #12]
 1938 0054 9360     		str	r3, [r2, #8]
1253:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1254:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)(~(wrp23data) << 16U)|(wrp23data);
 1939              		.loc 1 1254 23
 1940 0056 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 74


 1941 0058 DB43     		mvns	r3, r3
 1942              		.loc 1 1254 36
 1943 005a 1B04     		lsls	r3, r3, #16
 1944              		.loc 1 1254 10
 1945 005c 3A69     		ldr	r2, [r7, #16]
 1946 005e 1343     		orrs	r3, r3, r2
 1947 0060 BB60     		str	r3, [r7, #8]
1255:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP23 = tmp2;
 1948              		.loc 1 1255 7
 1949 0062 174A     		ldr	r2, .L127
 1950              		.loc 1 1255 15
 1951 0064 BB68     		ldr	r3, [r7, #8]
 1952 0066 D360     		str	r3, [r2, #12]
1256:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1257:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
1258:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp01data = (uint16_t)(~WRP1OrPCROP1 & (WRP_MASK_LOW & OB->WRP01));
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp23data = (uint16_t)((((~WRP1OrPCROP1 & WRP_MASK_HIGH)>>16U & OB->WRP23)));
1261:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)((~wrp01data) << 16U)|(wrp01data);
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP01 = tmp1;
1264:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)((~wrp23data) << 16U)|(wrp23data);
1266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP23 = tmp2;
1267:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1268:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 1953              		.loc 1 1268 1
 1954 0068 25E0     		b	.L126
 1955              	.L124:
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp23data = (uint16_t)((((~WRP1OrPCROP1 & WRP_MASK_HIGH)>>16U & OB->WRP23)));
 1956              		.loc 1 1259 17
 1957 006a 7B68     		ldr	r3, [r7, #4]
 1958 006c 9BB2     		uxth	r3, r3
 1959 006e DB43     		mvns	r3, r3
 1960 0070 9AB2     		uxth	r2, r3
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp23data = (uint16_t)((((~WRP1OrPCROP1 & WRP_MASK_HIGH)>>16U & OB->WRP23)));
 1961              		.loc 1 1259 62
 1962 0072 134B     		ldr	r3, .L127
 1963 0074 9B68     		ldr	r3, [r3, #8]
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp23data = (uint16_t)((((~WRP1OrPCROP1 & WRP_MASK_HIGH)>>16U & OB->WRP23)));
 1964              		.loc 1 1259 17
 1965 0076 9BB2     		uxth	r3, r3
 1966 0078 1340     		ands	r3, r3, r2
 1967 007a 9BB2     		uxth	r3, r3
1259:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp23data = (uint16_t)((((~WRP1OrPCROP1 & WRP_MASK_HIGH)>>16U & OB->WRP23)));
 1968              		.loc 1 1259 15
 1969 007c 7B61     		str	r3, [r7, #20]
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1970              		.loc 1 1260 31
 1971 007e 7B68     		ldr	r3, [r7, #4]
 1972 0080 DB43     		mvns	r3, r3
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1973              		.loc 1 1260 61
 1974 0082 1B0C     		lsrs	r3, r3, #16
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1975              		.loc 1 1260 17
 1976 0084 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 75


1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1977              		.loc 1 1260 71
 1978 0086 0E4B     		ldr	r3, .L127
 1979 0088 DB68     		ldr	r3, [r3, #12]
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1980              		.loc 1 1260 17
 1981 008a 9BB2     		uxth	r3, r3
 1982 008c 1340     		ands	r3, r3, r2
 1983 008e 9BB2     		uxth	r3, r3
1260:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1984              		.loc 1 1260 15
 1985 0090 3B61     		str	r3, [r7, #16]
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP01 = tmp1;
 1986              		.loc 1 1262 24
 1987 0092 7B69     		ldr	r3, [r7, #20]
 1988 0094 DB43     		mvns	r3, r3
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP01 = tmp1;
 1989              		.loc 1 1262 36
 1990 0096 1B04     		lsls	r3, r3, #16
1262:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP01 = tmp1;
 1991              		.loc 1 1262 10
 1992 0098 7A69     		ldr	r2, [r7, #20]
 1993 009a 1343     		orrs	r3, r3, r2
 1994 009c FB60     		str	r3, [r7, #12]
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1995              		.loc 1 1263 7
 1996 009e 084A     		ldr	r2, .L127
1263:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
 1997              		.loc 1 1263 15
 1998 00a0 FB68     		ldr	r3, [r7, #12]
 1999 00a2 9360     		str	r3, [r2, #8]
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP23 = tmp2;
 2000              		.loc 1 1265 24
 2001 00a4 3B69     		ldr	r3, [r7, #16]
 2002 00a6 DB43     		mvns	r3, r3
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP23 = tmp2;
 2003              		.loc 1 1265 36
 2004 00a8 1B04     		lsls	r3, r3, #16
1265:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP23 = tmp2;
 2005              		.loc 1 1265 10
 2006 00aa 3A69     		ldr	r2, [r7, #16]
 2007 00ac 1343     		orrs	r3, r3, r2
 2008 00ae BB60     		str	r3, [r7, #8]
1266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 2009              		.loc 1 1266 7
 2010 00b0 034A     		ldr	r2, .L127
1266:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
 2011              		.loc 1 1266 15
 2012 00b2 BB68     		ldr	r3, [r7, #8]
 2013 00b4 D360     		str	r3, [r2, #12]
 2014              	.L126:
 2015              		.loc 1 1268 1
 2016 00b6 00BF     		nop
 2017 00b8 1C37     		adds	r7, r7, #28
 2018              		.cfi_def_cfa_offset 4
 2019 00ba BD46     		mov	sp, r7
 2020              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 76


 2021              		@ sp needed
 2022 00bc 80BC     		pop	{r7}
 2023              		.cfi_restore 7
 2024              		.cfi_def_cfa_offset 0
 2025 00be 7047     		bx	lr
 2026              	.L128:
 2027              		.align	2
 2028              	.L127:
 2029 00c0 0000F81F 		.word	536346624
 2030              		.cfi_endproc
 2031              	.LFE93:
 2033              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 2034              		.align	1
 2035              		.syntax unified
 2036              		.thumb
 2037              		.thumb_func
 2039              	FLASH_OB_UserConfig:
 2040              	.LFB94:
1269:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1270:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xC) || defined(STM32L151xC) || defined(STM32L152xC) || defined(STM32L162xC)   
1271:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L151xCA) || defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xCA)
1272:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xD) || defined(STM32L152xDX) || defined(STM32L162xCA) || defined(STM32L162xD) 
1273:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE)
1274:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1275:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Enable Write protects the desired pages of the second 128KB of the Flash.
1276:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for Cat3, Cat4  & Cat5 devices.
1277:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  WRP2OrPCROP2 specifies the address of the pages to be write protected.
1278:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be a combination of @ref FLASHEx_Option_Bytes_Write_Protection2
1279:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages Wtite protection.
1280:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be: ENABLE or DISABLE.
1281:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
1282:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1283:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void FLASH_OB_WRPConfigWRP2OrPCROP2(uint32_t WRP2OrPCROP2, FunctionalState NewState)
1284:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
1285:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t wrp45data = 0U, wrp67data = 0U;
1286:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1287:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
1288:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1289:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1290:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WRP2OrPCROP2));
1291:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1292:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1293:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (NewState != DISABLE)
1294:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1295:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp45data = (uint16_t)(((WRP2OrPCROP2 & WRP_MASK_LOW) | OB->WRP45));
1296:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp67data = (uint16_t)((((WRP2OrPCROP2 & WRP_MASK_HIGH)>>16U | OB->WRP67)));
1297:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)(~(wrp45data) << 16U)|(wrp45data);
1298:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP45 = tmp1;
1299:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1300:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)(~(wrp67data) << 16U)|(wrp67data);
1301:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP67 = tmp2;
1302:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1303:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
1304:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1305:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp45data = (uint16_t)(~WRP2OrPCROP2 & (WRP_MASK_LOW & OB->WRP45));
1306:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp67data = (uint16_t)((((~WRP2OrPCROP2 & WRP_MASK_HIGH)>>16U & OB->WRP67)));
1307:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 77


1308:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)((~wrp45data) << 16U)|(wrp45data);
1309:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP45 = tmp1;
1310:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1311:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)((~wrp67data) << 16U)|(wrp67data);
1312:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP67 = tmp2;
1313:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1314:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
1315:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xC || STM32L151xC || STM32L152xC || (...) || STM32L151xE || STM32L152xE || STM32
1316:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1317:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xD) || defined(STM32L151xDX) || defined(STM32L152xD) || defined(STM32L152xDX) 
1318:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xD) || defined(STM32L162xDX) || defined(STM32L151xE) || defined(STM32L152xE)  
1319:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L162xE)
1320:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1321:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Enable Write protects the desired pages of the third 128KB of the Flash.
1322:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for STM32L151xD, STM32L152xD, STM32L162xD  & Cat5 device
1323:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  WRP3 specifies the address of the pages to be write protected.
1324:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be a combination of @ref FLASHEx_Option_Bytes_Write_Protection3
1325:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages Wtite protection.
1326:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be: ENABLE or DISABLE.
1327:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
1328:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1329:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void FLASH_OB_WRPConfigWRP3(uint32_t WRP3, FunctionalState NewState)
1330:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
1331:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t wrp89data = 0U, wrp1011data = 0U;
1332:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1333:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
1334:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1335:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1336:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WRP3));
1337:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1338:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1339:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (NewState != DISABLE)
1340:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1341:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp89data = (uint16_t)(((WRP3 & WRP_MASK_LOW) | OB->WRP89));
1342:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp1011data = (uint16_t)((((WRP3 & WRP_MASK_HIGH)>>16U | OB->WRP1011)));
1343:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)(~(wrp89data) << 16U)|(wrp89data);
1344:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP89 = tmp1;
1345:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1346:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)(~(wrp1011data) << 16U)|(wrp1011data);
1347:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP1011 = tmp2;
1348:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1349:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
1350:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1351:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp89data = (uint16_t)(~WRP3 & (WRP_MASK_LOW & OB->WRP89));
1352:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp1011data = (uint16_t)((((~WRP3 & WRP_MASK_HIGH)>>16U & OB->WRP1011)));
1353:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1354:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)((~wrp89data) << 16U)|(wrp89data);
1355:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP89 = tmp1;
1356:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1357:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)((~wrp1011data) << 16U)|(wrp1011data);
1358:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP1011 = tmp2;
1359:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1360:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
1361:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xD || STM32L152xD || STM32L162xD || STM32L151xE || STM32L152xE || STM32L162xE */
1362:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1363:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L151xE) || defined(STM32L152xE) || defined(STM32L162xE) || defined(STM32L151xDX) \
1364:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  || defined(STM32L152xDX) || defined(STM32L162xDX)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 78


1365:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1366:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Enable Write protects the desired pages of the Fourth 128KB of the Flash.
1367:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function can be used only for Cat5 & STM32L1xxDX devices.
1368:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  WRP4 specifies the address of the pages to be write protected.
1369:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be a combination of @ref FLASHEx_Option_Bytes_Write_Protection4
1370:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  NewState new state of the specified FLASH Pages Wtite protection.
1371:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be: ENABLE or DISABLE.
1372:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
1373:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1374:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static void FLASH_OB_WRPConfigWRP4(uint32_t WRP4, FunctionalState NewState)
1375:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
1376:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t wrp1213data = 0U, wrp1415data = 0U;
1377:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1378:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp1 = 0U, tmp2 = 0U;
1379:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1380:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1381:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WRP4));
1382:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1383:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1384:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if (NewState != DISABLE)
1385:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1386:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp1213data = (uint16_t)(((WRP4 & WRP_MASK_LOW) | OB->WRP1213));
1387:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp1415data = (uint16_t)((((WRP4 & WRP_MASK_HIGH)>>16U | OB->WRP1415)));
1388:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)(~(wrp1213data) << 16U)|(wrp1213data);
1389:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP1213 = tmp1;
1390:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1391:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)(~(wrp1415data) << 16U)|(wrp1415data);
1392:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP1415 = tmp2;
1393:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1394:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   else
1395:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1396:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp1213data = (uint16_t)(~WRP4 & (WRP_MASK_LOW & OB->WRP1213));
1397:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     wrp1415data = (uint16_t)((((~WRP4 & WRP_MASK_HIGH)>>16U & OB->WRP1415)));
1398:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1399:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp1 = (uint32_t)((~wrp1213data) << 16U)|(wrp1213data);
1400:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP1213 = tmp1;
1401:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1402:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     tmp2 = (uint32_t)((~wrp1415data) << 16U)|(wrp1415data);
1403:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->WRP1415 = tmp2;
1404:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1405:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
1406:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L151xE || STM32L152xE || STM32L162xE || STM32L151xDX || ... */
1407:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1408:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1409:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Programs the FLASH User Option Byte: IWDG_SW / RST_STOP / RST_STDBY.
1410:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  OB_IWDG Selects the WDG mode.
1411:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1412:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_IWDG_SW Software WDG selected
1413:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_IWDG_HW Hardware WDG selected
1414:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  OB_STOP Reset event when entering STOP mode.
1415:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1416:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_STOP_NORST No reset generated when entering in STOP
1417:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_STOP_RST Reset generated when entering in STOP
1418:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  OB_STDBY Reset event when entering Standby mode.
1419:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1420:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_STDBY_NORST No reset generated when entering in STANDBY
1421:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_STDBY_RST Reset generated when entering in STANDBY
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 79


1422:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1423:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1424:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t OB_IWDG, uint8_t OB_STOP, uint8_t OB_STDBY)
1425:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2041              		.loc 1 1425 1
 2042              		.cfi_startproc
 2043              		@ args = 0, pretend = 0, frame = 24
 2044              		@ frame_needed = 1, uses_anonymous_args = 0
 2045 0000 80B5     		push	{r7, lr}
 2046              		.cfi_def_cfa_offset 8
 2047              		.cfi_offset 7, -8
 2048              		.cfi_offset 14, -4
 2049 0002 86B0     		sub	sp, sp, #24
 2050              		.cfi_def_cfa_offset 32
 2051 0004 00AF     		add	r7, sp, #0
 2052              		.cfi_def_cfa_register 7
 2053 0006 0346     		mov	r3, r0
 2054 0008 FB71     		strb	r3, [r7, #7]
 2055 000a 0B46     		mov	r3, r1
 2056 000c BB71     		strb	r3, [r7, #6]
 2057 000e 1346     		mov	r3, r2
 2058 0010 7B71     		strb	r3, [r7, #5]
1426:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2059              		.loc 1 1426 21
 2060 0012 0023     		movs	r3, #0
 2061 0014 FB75     		strb	r3, [r7, #23]
1427:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmp1 = 0U;
 2062              		.loc 1 1427 12
 2063 0016 0023     		movs	r3, #0
 2064 0018 3B61     		str	r3, [r7, #16]
 2065              		.loc 1 1427 22
 2066 001a 0023     		movs	r3, #0
 2067 001c FB60     		str	r3, [r7, #12]
1428:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1429:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1430:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE(OB_IWDG));
1431:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE(OB_STOP));
1432:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE(OB_STDBY));
1433:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1434:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Get the User Option byte register */
1435:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp1 = OB->USER & ((~(FLASH_OBR_IWDG_SW | FLASH_OBR_nRST_STOP | FLASH_OBR_nRST_STDBY)) >> 16U);
 2068              		.loc 1 1435 12
 2069 001e 1D4B     		ldr	r3, .L132
 2070 0020 5A68     		ldr	r2, [r3, #4]
 2071              		.loc 1 1435 8
 2072 0022 4FF68F73 		movw	r3, #65423
 2073 0026 1340     		ands	r3, r3, r2
 2074 0028 FB60     		str	r3, [r7, #12]
1436:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1437:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Calculate the user option byte to write */
1438:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp = (uint32_t)(((uint32_t)~((uint32_t)((uint32_t)(OB_IWDG) | (uint32_t)(OB_STOP) | (uint32_t)(O
 2075              		.loc 1 1438 86
 2076 002a FA79     		ldrb	r2, [r7, #7]
 2077 002c BB79     		ldrb	r3, [r7, #6]
 2078 002e 1343     		orrs	r3, r3, r2
 2079 0030 DAB2     		uxtb	r2, r3
 2080 0032 7B79     		ldrb	r3, [r7, #5]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 80


 2081 0034 1343     		orrs	r3, r3, r2
 2082 0036 DBB2     		uxtb	r3, r3
 2083 0038 1A46     		mov	r2, r3
 2084              		.loc 1 1438 33
 2085 003a FB68     		ldr	r3, [r7, #12]
 2086 003c 1343     		orrs	r3, r3, r2
 2087              		.loc 1 1438 21
 2088 003e DB43     		mvns	r3, r3
 2089              		.loc 1 1438 7
 2090 0040 1B04     		lsls	r3, r3, #16
 2091 0042 3B61     		str	r3, [r7, #16]
1439:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp |= ((uint32_t)(OB_IWDG) | ((uint32_t)OB_STOP) | (uint32_t)(OB_STDBY) | tmp1);
 2092              		.loc 1 1439 53
 2093 0044 FA79     		ldrb	r2, [r7, #7]
 2094 0046 BB79     		ldrb	r3, [r7, #6]
 2095 0048 1343     		orrs	r3, r3, r2
 2096 004a DAB2     		uxtb	r2, r3
 2097 004c 7B79     		ldrb	r3, [r7, #5]
 2098 004e 1343     		orrs	r3, r3, r2
 2099 0050 DBB2     		uxtb	r3, r3
 2100 0052 1A46     		mov	r2, r3
 2101              		.loc 1 1439 76
 2102 0054 FB68     		ldr	r3, [r7, #12]
 2103 0056 1343     		orrs	r3, r3, r2
 2104              		.loc 1 1439 7
 2105 0058 3A69     		ldr	r2, [r7, #16]
 2106 005a 1343     		orrs	r3, r3, r2
 2107 005c 3B61     		str	r3, [r7, #16]
1440:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1441:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1442:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2108              		.loc 1 1442 12
 2109 005e 4CF25030 		movw	r0, #50000
 2110 0062 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2111 0066 0346     		mov	r3, r0
 2112 0068 FB75     		strb	r3, [r7, #23]
1443:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1444:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2113              		.loc 1 1444 5
 2114 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2115 006c 002B     		cmp	r3, #0
 2116 006e 0BD1     		bne	.L130
1445:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1446:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
1447:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 2117              		.loc 1 1447 22
 2118 0070 094B     		ldr	r3, .L132+4
 2119 0072 0022     		movs	r2, #0
 2120 0074 5A61     		str	r2, [r3, #20]
1448:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1449:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Write the User Option Byte */
1450:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->USER = tmp;
 2121              		.loc 1 1450 7
 2122 0076 074A     		ldr	r2, .L132
 2123              		.loc 1 1450 14
 2124 0078 3B69     		ldr	r3, [r7, #16]
 2125 007a 5360     		str	r3, [r2, #4]
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 81


1451:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1452:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1453:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2126              		.loc 1 1453 14
 2127 007c 4CF25030 		movw	r0, #50000
 2128 0080 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2129 0084 0346     		mov	r3, r0
 2130 0086 FB75     		strb	r3, [r7, #23]
 2131              	.L130:
1454:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1455:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1456:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Option Byte program Status */
1457:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 2132              		.loc 1 1457 10
 2133 0088 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1458:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2134              		.loc 1 1458 1
 2135 008a 1846     		mov	r0, r3
 2136 008c 1837     		adds	r7, r7, #24
 2137              		.cfi_def_cfa_offset 8
 2138 008e BD46     		mov	sp, r7
 2139              		.cfi_def_cfa_register 13
 2140              		@ sp needed
 2141 0090 80BD     		pop	{r7, pc}
 2142              	.L133:
 2143 0092 00BF     		.align	2
 2144              	.L132:
 2145 0094 0000F81F 		.word	536346624
 2146 0098 00000000 		.word	pFlash
 2147              		.cfi_endproc
 2148              	.LFE94:
 2150              		.section	.text.FLASH_DATAEEPROM_FastProgramByte,"ax",%progbits
 2151              		.align	1
 2152              		.syntax unified
 2153              		.thumb
 2154              		.thumb_func
 2156              	FLASH_DATAEEPROM_FastProgramByte:
 2157              	.LFB95:
1459:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1460:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(FLASH_OBR_nRST_BFB2)
1461:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1462:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Configures to boot from Bank1 or Bank2.
1463:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  OB_BOOT select the FLASH Bank to boot from.
1464:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *   This parameter can be one of the following values:
1465:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOOT_BANK2 At startup, if boot pins are set in boot from user Flash
1466:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        position and this parameter is selected the device will boot from Bank2 or Bank1,
1467:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        depending on the activation of the bank. The active banks are checked in
1468:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        the following order: Bank2, followed by Bank1.
1469:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        The active bank is recognized by the value programmed at the base address
1470:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        of the respective bank (corresponding to the initial stack pointer value
1471:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        in the interrupt vector table).
1472:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *     @arg @ref OB_BOOT_BANK1 At startup, if boot pins are set in boot from user Flash
1473:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        position and this parameter is selected the device will boot from Bank1(Default).
1474:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *        For more information, please refer to AN2606 from www.st.com.
1475:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1476:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1477:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_BootConfig(uint8_t OB_BOOT)
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 82


1478:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
1479:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
1480:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmp1 = 0U;
1481:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1482:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1483:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT_BANK(OB_BOOT));
1484:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1485:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Get the User Option byte register  and BOR Level*/
1486:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp1 = OB->USER & ((~FLASH_OBR_nRST_BFB2) >> 16U);
1487:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1488:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Calculate the option byte to write */
1489:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp = (uint32_t)~(OB_BOOT | tmp1) << 16U;
1490:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   tmp |= (OB_BOOT | tmp1);
1491:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1492:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1493:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1494:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1495:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
1496:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1497:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clean the error context */
1498:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
1499:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1500:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Write the BOOT Option Byte */
1501:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     OB->USER = tmp;
1502:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1503:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1504:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1505:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1506:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1507:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Option Byte program Status */
1508:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
1509:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
1510:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1511:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* FLASH_OBR_nRST_BFB2 */
1512:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1513:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /*
1514:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** ==============================================================================
1515:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****               DATA
1516:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** ==============================================================================
1517:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** */
1518:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1519:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1520:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Write a Byte at a specified address in data memory.
1521:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be written.
1522:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Data specifies the data to be written.
1523:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function assumes that the is data word is already erased.
1524:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1525:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1526:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_DATAEEPROM_FastProgramByte(uint32_t Address, uint8_t Data)
1527:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2158              		.loc 1 1527 1
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 16
 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162 0000 80B5     		push	{r7, lr}
 2163              		.cfi_def_cfa_offset 8
 2164              		.cfi_offset 7, -8
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 83


 2165              		.cfi_offset 14, -4
 2166 0002 84B0     		sub	sp, sp, #16
 2167              		.cfi_def_cfa_offset 24
 2168 0004 00AF     		add	r7, sp, #0
 2169              		.cfi_def_cfa_register 7
 2170 0006 7860     		str	r0, [r7, #4]
 2171 0008 0B46     		mov	r3, r1
 2172 000a FB70     		strb	r3, [r7, #3]
1528:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2173              		.loc 1 1528 21
 2174 000c 0023     		movs	r3, #0
 2175 000e FB73     		strb	r3, [r7, #15]
1529:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1530:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmpaddr = 0U;
1531:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1532:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1533:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1534:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
1535:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1536:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1537:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2176              		.loc 1 1537 12
 2177 0010 4CF25030 		movw	r0, #50000
 2178 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2179 0018 0346     		mov	r3, r0
 2180 001a FB73     		strb	r3, [r7, #15]
1538:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1539:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2181              		.loc 1 1539 5
 2182 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2183 001e 002B     		cmp	r3, #0
 2184 0020 0ED1     		bne	.L135
1540:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1541:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clear the FTDW bit */
1542:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->PECR, FLASH_PECR_FTDW);
 2185              		.loc 1 1542 5
 2186 0022 0A4B     		ldr	r3, .L137
 2187 0024 5B68     		ldr	r3, [r3, #4]
 2188 0026 094A     		ldr	r2, .L137
 2189 0028 23F48073 		bic	r3, r3, #256
 2190 002c 5360     		str	r3, [r2, #4]
1543:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1544:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1545:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Possible only on Cat1 devices */
1546:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(Data != (uint8_t)0x00U)
1547:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1548:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* If the previous operation is completed, proceed to write the new Data */
1549:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       *(__IO uint8_t *)Address = Data;
1550:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1551:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
1552:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1553:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1554:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
1555:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1556:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmpaddr = Address & 0xFFFFFFFCU;
1557:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmp = * (__IO uint32_t *) tmpaddr;
1558:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmpaddr = 0xFFU << ((uint32_t) (0x8U * (Address & 0x3U)));
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 84


1559:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmp &= ~tmpaddr;
1560:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = HAL_FLASHEx_DATAEEPROM_Erase(FLASH_TYPEERASEDATA_WORD, Address & 0xFFFFFFFCU);
1561:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
1562:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
1563:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTWORD, (Address & 0xFFFFFFFC
1564:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Locked */
1565:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_LOCK(&pFlash);
1566:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1567:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #else /*!Cat1*/
1568:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to write the new Data */
1569:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     *(__IO uint8_t *)Address = Data;
 2191              		.loc 1 1569 6
 2192 002e 7B68     		ldr	r3, [r7, #4]
 2193              		.loc 1 1569 30
 2194 0030 FA78     		ldrb	r2, [r7, #3]
 2195 0032 1A70     		strb	r2, [r3]
1570:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1571:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1572:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2196              		.loc 1 1572 14
 2197 0034 4CF25030 		movw	r0, #50000
 2198 0038 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2199 003c 0346     		mov	r3, r0
 2200 003e FB73     		strb	r3, [r7, #15]
 2201              	.L135:
1573:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1574:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1575:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Write Status */
1576:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 2202              		.loc 1 1576 10
 2203 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1577:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2204              		.loc 1 1577 1
 2205 0042 1846     		mov	r0, r3
 2206 0044 1037     		adds	r7, r7, #16
 2207              		.cfi_def_cfa_offset 8
 2208 0046 BD46     		mov	sp, r7
 2209              		.cfi_def_cfa_register 13
 2210              		@ sp needed
 2211 0048 80BD     		pop	{r7, pc}
 2212              	.L138:
 2213 004a 00BF     		.align	2
 2214              	.L137:
 2215 004c 003C0240 		.word	1073888256
 2216              		.cfi_endproc
 2217              	.LFE95:
 2219              		.section	.text.FLASH_DATAEEPROM_FastProgramHalfWord,"ax",%progbits
 2220              		.align	1
 2221              		.syntax unified
 2222              		.thumb
 2223              		.thumb_func
 2225              	FLASH_DATAEEPROM_FastProgramHalfWord:
 2226              	.LFB96:
1578:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1579:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1580:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Writes a half word at a specified address in data memory.
1581:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be written.
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 85


1582:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Data specifies the data to be written.
1583:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function assumes that the is data word is already erased.
1584:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1585:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1586:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_DATAEEPROM_FastProgramHalfWord(uint32_t Address, uint16_t Data)
1587:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2227              		.loc 1 1587 1
 2228              		.cfi_startproc
 2229              		@ args = 0, pretend = 0, frame = 16
 2230              		@ frame_needed = 1, uses_anonymous_args = 0
 2231 0000 80B5     		push	{r7, lr}
 2232              		.cfi_def_cfa_offset 8
 2233              		.cfi_offset 7, -8
 2234              		.cfi_offset 14, -4
 2235 0002 84B0     		sub	sp, sp, #16
 2236              		.cfi_def_cfa_offset 24
 2237 0004 00AF     		add	r7, sp, #0
 2238              		.cfi_def_cfa_register 7
 2239 0006 7860     		str	r0, [r7, #4]
 2240 0008 0B46     		mov	r3, r1
 2241 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1588:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2242              		.loc 1 1588 21
 2243 000c 0023     		movs	r3, #0
 2244 000e FB73     		strb	r3, [r7, #15]
1589:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1590:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmpaddr = 0U;
1591:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1592:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1593:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1594:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
1595:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1596:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1597:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2245              		.loc 1 1597 12
 2246 0010 4CF25030 		movw	r0, #50000
 2247 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2248 0018 0346     		mov	r3, r0
 2249 001a FB73     		strb	r3, [r7, #15]
1598:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1599:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2250              		.loc 1 1599 5
 2251 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2252 001e 002B     		cmp	r3, #0
 2253 0020 0ED1     		bne	.L140
1600:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1601:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clear the FTDW bit */
1602:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->PECR, FLASH_PECR_FTDW);
 2254              		.loc 1 1602 5
 2255 0022 0A4B     		ldr	r3, .L142
 2256 0024 5B68     		ldr	r3, [r3, #4]
 2257 0026 094A     		ldr	r2, .L142
 2258 0028 23F48073 		bic	r3, r3, #256
 2259 002c 5360     		str	r3, [r2, #4]
1603:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1604:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1605:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Possible only on Cat1 devices */
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 86


1606:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(Data != (uint16_t)0x0000U)
1607:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1608:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* If the previous operation is completed, proceed to write the new data */
1609:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       *(__IO uint16_t *)Address = Data;
1610:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1611:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
1612:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1613:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1614:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
1615:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1616:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
1617:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
1618:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if((Address & 0x3U) != 0x3U)
1619:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
1620:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmpaddr = Address & 0xFFFFFFFCU;
1621:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmp = * (__IO uint32_t *) tmpaddr;
1622:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmpaddr = 0xFFFFU << ((uint32_t) (0x8U * (Address & 0x3U)));
1623:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmp &= ~tmpaddr;
1624:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         status = HAL_FLASHEx_DATAEEPROM_Erase(FLASH_TYPEERASEDATA_WORD, Address & 0xFFFFFFFCU);
1625:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         status = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTWORD, (Address & 0xFFFFFF
1626:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
1627:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       else
1628:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
1629:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTBYTE, Address, 0x00U);
1630:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTBYTE, Address + 1U, 0x00U);
1631:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
1632:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Locked */
1633:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_LOCK(&pFlash);
1634:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1635:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #else /* !Cat1 */
1636:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to write the new data */
1637:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     *(__IO uint16_t *)Address = Data;
 2260              		.loc 1 1637 6
 2261 002e 7B68     		ldr	r3, [r7, #4]
 2262              		.loc 1 1637 31
 2263 0030 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2264 0032 1A80     		strh	r2, [r3]	@ movhi
1638:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1639:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1640:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2265              		.loc 1 1640 14
 2266 0034 4CF25030 		movw	r0, #50000
 2267 0038 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2268 003c 0346     		mov	r3, r0
 2269 003e FB73     		strb	r3, [r7, #15]
 2270              	.L140:
1641:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1642:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1643:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Write Status */
1644:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 2271              		.loc 1 1644 10
 2272 0040 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1645:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2273              		.loc 1 1645 1
 2274 0042 1846     		mov	r0, r3
 2275 0044 1037     		adds	r7, r7, #16
 2276              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 87


 2277 0046 BD46     		mov	sp, r7
 2278              		.cfi_def_cfa_register 13
 2279              		@ sp needed
 2280 0048 80BD     		pop	{r7, pc}
 2281              	.L143:
 2282 004a 00BF     		.align	2
 2283              	.L142:
 2284 004c 003C0240 		.word	1073888256
 2285              		.cfi_endproc
 2286              	.LFE96:
 2288              		.section	.text.FLASH_DATAEEPROM_FastProgramWord,"ax",%progbits
 2289              		.align	1
 2290              		.syntax unified
 2291              		.thumb
 2292              		.thumb_func
 2294              	FLASH_DATAEEPROM_FastProgramWord:
 2295              	.LFB97:
1646:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1647:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1648:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Programs a word at a specified address in data memory.
1649:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be written.
1650:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Data specifies the data to be written.
1651:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   This function assumes that the is data word is already erased.
1652:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1653:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1654:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_DATAEEPROM_FastProgramWord(uint32_t Address, uint32_t Data)
1655:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2296              		.loc 1 1655 1
 2297              		.cfi_startproc
 2298              		@ args = 0, pretend = 0, frame = 16
 2299              		@ frame_needed = 1, uses_anonymous_args = 0
 2300 0000 80B5     		push	{r7, lr}
 2301              		.cfi_def_cfa_offset 8
 2302              		.cfi_offset 7, -8
 2303              		.cfi_offset 14, -4
 2304 0002 84B0     		sub	sp, sp, #16
 2305              		.cfi_def_cfa_offset 24
 2306 0004 00AF     		add	r7, sp, #0
 2307              		.cfi_def_cfa_register 7
 2308 0006 7860     		str	r0, [r7, #4]
 2309 0008 3960     		str	r1, [r7]
1656:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2310              		.loc 1 1656 21
 2311 000a 0023     		movs	r3, #0
 2312 000c FB73     		strb	r3, [r7, #15]
1657:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1658:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1659:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
1660:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1661:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1662:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2313              		.loc 1 1662 12
 2314 000e 4CF25030 		movw	r0, #50000
 2315 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2316 0016 0346     		mov	r3, r0
 2317 0018 FB73     		strb	r3, [r7, #15]
1663:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 88


1664:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2318              		.loc 1 1664 5
 2319 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2320 001c 002B     		cmp	r3, #0
 2321 001e 0ED1     		bne	.L145
1665:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1666:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Clear the FTDW bit */
1667:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->PECR, FLASH_PECR_FTDW);
 2322              		.loc 1 1667 5
 2323 0020 094B     		ldr	r3, .L147
 2324 0022 5B68     		ldr	r3, [r3, #4]
 2325 0024 084A     		ldr	r2, .L147
 2326 0026 23F48073 		bic	r3, r3, #256
 2327 002a 5360     		str	r3, [r2, #4]
1668:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1669:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to program the new data */
1670:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     *(__IO uint32_t *)Address = Data;
 2328              		.loc 1 1670 6
 2329 002c 7B68     		ldr	r3, [r7, #4]
 2330              		.loc 1 1670 31
 2331 002e 3A68     		ldr	r2, [r7]
 2332 0030 1A60     		str	r2, [r3]
1671:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1672:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1673:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2333              		.loc 1 1673 14
 2334 0032 4CF25030 		movw	r0, #50000
 2335 0036 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2336 003a 0346     		mov	r3, r0
 2337 003c FB73     		strb	r3, [r7, #15]
 2338              	.L145:
1674:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1675:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Write Status */
1676:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 2339              		.loc 1 1676 10
 2340 003e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1677:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2341              		.loc 1 1677 1
 2342 0040 1846     		mov	r0, r3
 2343 0042 1037     		adds	r7, r7, #16
 2344              		.cfi_def_cfa_offset 8
 2345 0044 BD46     		mov	sp, r7
 2346              		.cfi_def_cfa_register 13
 2347              		@ sp needed
 2348 0046 80BD     		pop	{r7, pc}
 2349              	.L148:
 2350              		.align	2
 2351              	.L147:
 2352 0048 003C0240 		.word	1073888256
 2353              		.cfi_endproc
 2354              	.LFE97:
 2356              		.section	.text.FLASH_DATAEEPROM_ProgramByte,"ax",%progbits
 2357              		.align	1
 2358              		.syntax unified
 2359              		.thumb
 2360              		.thumb_func
 2362              	FLASH_DATAEEPROM_ProgramByte:
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 89


 2363              	.LFB98:
1678:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1679:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1680:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Write a Byte at a specified address in data memory without erase.
1681:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be written.
1682:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Data specifies the data to be written.
1683:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1684:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1685:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_DATAEEPROM_ProgramByte(uint32_t Address, uint8_t Data)
1686:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2364              		.loc 1 1686 1
 2365              		.cfi_startproc
 2366              		@ args = 0, pretend = 0, frame = 16
 2367              		@ frame_needed = 1, uses_anonymous_args = 0
 2368 0000 80B5     		push	{r7, lr}
 2369              		.cfi_def_cfa_offset 8
 2370              		.cfi_offset 7, -8
 2371              		.cfi_offset 14, -4
 2372 0002 84B0     		sub	sp, sp, #16
 2373              		.cfi_def_cfa_offset 24
 2374 0004 00AF     		add	r7, sp, #0
 2375              		.cfi_def_cfa_register 7
 2376 0006 7860     		str	r0, [r7, #4]
 2377 0008 0B46     		mov	r3, r1
 2378 000a FB70     		strb	r3, [r7, #3]
1687:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2379              		.loc 1 1687 21
 2380 000c 0023     		movs	r3, #0
 2381 000e FB73     		strb	r3, [r7, #15]
1688:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1689:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmpaddr = 0U;
1690:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1691:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1692:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1693:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
1694:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1695:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1696:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2382              		.loc 1 1696 12
 2383 0010 4CF25030 		movw	r0, #50000
 2384 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2385 0018 0346     		mov	r3, r0
 2386 001a FB73     		strb	r3, [r7, #15]
1697:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1698:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2387              		.loc 1 1698 5
 2388 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2389 001e 002B     		cmp	r3, #0
 2390 0020 08D1     		bne	.L150
1699:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1700:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1701:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(Data != (uint8_t) 0x00U)
1702:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1703:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       *(__IO uint8_t *)Address = Data;
1704:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1705:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
1706:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 90


1707:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1708:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1709:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
1710:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1711:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmpaddr = Address & 0xFFFFFFFCU;
1712:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmp = * (__IO uint32_t *) tmpaddr;
1713:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmpaddr = 0xFFU << ((uint32_t) (0x8U * (Address & 0x3U)));
1714:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       tmp &= ~tmpaddr;
1715:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = HAL_FLASHEx_DATAEEPROM_Erase(FLASH_TYPEERASEDATA_WORD, Address & 0xFFFFFFFCU);
1716:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
1717:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
1718:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTWORD, (Address & 0xFFFFFFFC
1719:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Locked */
1720:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_LOCK(&pFlash);
1721:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1722:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #else /* Not Cat1*/
1723:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     *(__IO uint8_t *)Address = Data;
 2391              		.loc 1 1723 6
 2392 0022 7B68     		ldr	r3, [r7, #4]
 2393              		.loc 1 1723 30
 2394 0024 FA78     		ldrb	r2, [r7, #3]
 2395 0026 1A70     		strb	r2, [r3]
1724:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1725:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1726:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2396              		.loc 1 1726 14
 2397 0028 4CF25030 		movw	r0, #50000
 2398 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2399 0030 0346     		mov	r3, r0
 2400 0032 FB73     		strb	r3, [r7, #15]
 2401              	.L150:
1727:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1728:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1729:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Write Status */
1730:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 2402              		.loc 1 1730 10
 2403 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1731:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2404              		.loc 1 1731 1
 2405 0036 1846     		mov	r0, r3
 2406 0038 1037     		adds	r7, r7, #16
 2407              		.cfi_def_cfa_offset 8
 2408 003a BD46     		mov	sp, r7
 2409              		.cfi_def_cfa_register 13
 2410              		@ sp needed
 2411 003c 80BD     		pop	{r7, pc}
 2412              		.cfi_endproc
 2413              	.LFE98:
 2415              		.section	.text.FLASH_DATAEEPROM_ProgramHalfWord,"ax",%progbits
 2416              		.align	1
 2417              		.syntax unified
 2418              		.thumb
 2419              		.thumb_func
 2421              	FLASH_DATAEEPROM_ProgramHalfWord:
 2422              	.LFB99:
1732:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1733:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 91


1734:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Writes a half word at a specified address in data memory without erase.
1735:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be written.
1736:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Data specifies the data to be written.
1737:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1738:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1739:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_DATAEEPROM_ProgramHalfWord(uint32_t Address, uint16_t Data)
1740:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2423              		.loc 1 1740 1
 2424              		.cfi_startproc
 2425              		@ args = 0, pretend = 0, frame = 16
 2426              		@ frame_needed = 1, uses_anonymous_args = 0
 2427 0000 80B5     		push	{r7, lr}
 2428              		.cfi_def_cfa_offset 8
 2429              		.cfi_offset 7, -8
 2430              		.cfi_offset 14, -4
 2431 0002 84B0     		sub	sp, sp, #16
 2432              		.cfi_def_cfa_offset 24
 2433 0004 00AF     		add	r7, sp, #0
 2434              		.cfi_def_cfa_register 7
 2435 0006 7860     		str	r0, [r7, #4]
 2436 0008 0B46     		mov	r3, r1
 2437 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1741:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2438              		.loc 1 1741 21
 2439 000c 0023     		movs	r3, #0
 2440 000e FB73     		strb	r3, [r7, #15]
1742:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1743:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   uint32_t tmp = 0U, tmpaddr = 0U;
1744:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1745:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1746:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1747:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
1748:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1749:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1750:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2441              		.loc 1 1750 12
 2442 0010 4CF25030 		movw	r0, #50000
 2443 0014 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2444 0018 0346     		mov	r3, r0
 2445 001a FB73     		strb	r3, [r7, #15]
1751:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1752:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2446              		.loc 1 1752 5
 2447 001c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2448 001e 002B     		cmp	r3, #0
 2449 0020 08D1     		bne	.L153
1753:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1754:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #if defined(STM32L100xB) || defined(STM32L151xB) || defined(STM32L152xB)
1755:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     if(Data != (uint16_t)0x0000U)
1756:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
1757:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       *(__IO uint16_t *)Address = Data;
1758:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1759:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
1760:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
1761:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1762:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     else
1763:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     {
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 92


1764:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Unlocked */
1765:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
1766:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       if((Address & 0x3U) != 0x3U)
1767:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
1768:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmpaddr = Address & 0xFFFFFFFCU;
1769:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmp = * (__IO uint32_t *) tmpaddr;
1770:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmpaddr = 0xFFFFU << ((uint32_t) (0x8U * (Address & 0x3U)));
1771:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         tmp &= ~tmpaddr;
1772:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         status = HAL_FLASHEx_DATAEEPROM_Erase(FLASH_TYPEERASEDATA_WORD, Address & 0xFFFFFFFCU);
1773:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         status = HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTWORD, (Address & 0xFFFFFF
1774:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
1775:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       else
1776:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       {
1777:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTBYTE, Address, 0x00U);
1778:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****         HAL_FLASHEx_DATAEEPROM_Program(FLASH_TYPEPROGRAMDATA_FASTBYTE, Address + 1U, 0x00U);
1779:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       }
1780:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       /* Process Locked */
1781:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****       __HAL_LOCK(&pFlash);
1782:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     }
1783:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #else /* Not Cat1*/
1784:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     *(__IO uint16_t *)Address = Data;
 2450              		.loc 1 1784 6
 2451 0022 7B68     		ldr	r3, [r7, #4]
 2452              		.loc 1 1784 31
 2453 0024 7A88     		ldrh	r2, [r7, #2]	@ movhi
 2454 0026 1A80     		strh	r2, [r3]	@ movhi
1785:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1786:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1787:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2455              		.loc 1 1787 14
 2456 0028 4CF25030 		movw	r0, #50000
 2457 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2458 0030 0346     		mov	r3, r0
 2459 0032 FB73     		strb	r3, [r7, #15]
 2460              	.L153:
1788:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** #endif /* STM32L100xB || STM32L151xB || STM32L152xB  */
1789:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1790:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Write Status */
1791:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 2461              		.loc 1 1791 10
 2462 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1792:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2463              		.loc 1 1792 1
 2464 0036 1846     		mov	r0, r3
 2465 0038 1037     		adds	r7, r7, #16
 2466              		.cfi_def_cfa_offset 8
 2467 003a BD46     		mov	sp, r7
 2468              		.cfi_def_cfa_register 13
 2469              		@ sp needed
 2470 003c 80BD     		pop	{r7, pc}
 2471              		.cfi_endproc
 2472              	.LFE99:
 2474              		.section	.text.FLASH_DATAEEPROM_ProgramWord,"ax",%progbits
 2475              		.align	1
 2476              		.syntax unified
 2477              		.thumb
 2478              		.thumb_func
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 93


 2480              	FLASH_DATAEEPROM_ProgramWord:
 2481              	.LFB100:
1793:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1794:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1795:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Programs a word at a specified address in data memory without erase.
1796:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be written.
1797:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  Data specifies the data to be written.
1798:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval HAL status
1799:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1800:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_DATAEEPROM_ProgramWord(uint32_t Address, uint32_t Data)
1801:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2482              		.loc 1 1801 1
 2483              		.cfi_startproc
 2484              		@ args = 0, pretend = 0, frame = 16
 2485              		@ frame_needed = 1, uses_anonymous_args = 0
 2486 0000 80B5     		push	{r7, lr}
 2487              		.cfi_def_cfa_offset 8
 2488              		.cfi_offset 7, -8
 2489              		.cfi_offset 14, -4
 2490 0002 84B0     		sub	sp, sp, #16
 2491              		.cfi_def_cfa_offset 24
 2492 0004 00AF     		add	r7, sp, #0
 2493              		.cfi_def_cfa_register 7
 2494 0006 7860     		str	r0, [r7, #4]
 2495 0008 3960     		str	r1, [r7]
1802:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 2496              		.loc 1 1802 21
 2497 000a 0023     		movs	r3, #0
 2498 000c FB73     		strb	r3, [r7, #15]
1803:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1804:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Check the parameters */
1805:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_DATA_ADDRESS(Address));
1806:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1807:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1808:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2499              		.loc 1 1808 12
 2500 000e 4CF25030 		movw	r0, #50000
 2501 0012 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2502 0016 0346     		mov	r3, r0
 2503 0018 FB73     		strb	r3, [r7, #15]
1809:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1810:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 2504              		.loc 1 1810 5
 2505 001a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2506 001c 002B     		cmp	r3, #0
 2507 001e 08D1     		bne	.L156
1811:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   {
1812:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     *(__IO uint32_t *)Address = Data;
 2508              		.loc 1 1812 6
 2509 0020 7B68     		ldr	r3, [r7, #4]
 2510              		.loc 1 1812 31
 2511 0022 3A68     		ldr	r2, [r7]
 2512 0024 1A60     		str	r2, [r3]
1813:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1814:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1815:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation(FLASH_TIMEOUT_VALUE);
 2513              		.loc 1 1815 14
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 94


 2514 0026 4CF25030 		movw	r0, #50000
 2515 002a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 2516 002e 0346     		mov	r3, r0
 2517 0030 FB73     		strb	r3, [r7, #15]
 2518              	.L156:
1816:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   }
1817:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Return the Write Status */
1818:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   return status;
 2519              		.loc 1 1818 10
 2520 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1819:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2521              		.loc 1 1819 1
 2522 0034 1846     		mov	r0, r3
 2523 0036 1037     		adds	r7, r7, #16
 2524              		.cfi_def_cfa_offset 8
 2525 0038 BD46     		mov	sp, r7
 2526              		.cfi_def_cfa_register 13
 2527              		@ sp needed
 2528 003a 80BD     		pop	{r7, pc}
 2529              		.cfi_endproc
 2530              	.LFE100:
 2532              		.section	.text.FLASH_PageErase,"ax",%progbits
 2533              		.align	1
 2534              		.global	FLASH_PageErase
 2535              		.syntax unified
 2536              		.thumb
 2537              		.thumb_func
 2539              	FLASH_PageErase:
 2540              	.LFB101:
1820:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1821:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1822:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
1823:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1824:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1825:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1826:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @}
1827:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1828:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1829:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @addtogroup FLASH
1830:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @{
1831:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1832:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1833:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1834:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Functions
1835:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  * @{
1836:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****  */
1837:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1838:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** /**
1839:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @brief  Erases a specified page in program memory.
1840:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @param  PageAddress The page address in program memory to be erased.
1841:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @note   A Page is erased in the Program memory only if the address to load
1842:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *         is the start address of a page (multiple of @ref FLASH_PAGE_SIZE bytes).
1843:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   * @retval None
1844:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   */
1845:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** void FLASH_PageErase(uint32_t PageAddress)
1846:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** {
 2541              		.loc 1 1846 1
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 95


 2542              		.cfi_startproc
 2543              		@ args = 0, pretend = 0, frame = 8
 2544              		@ frame_needed = 1, uses_anonymous_args = 0
 2545              		@ link register save eliminated.
 2546 0000 80B4     		push	{r7}
 2547              		.cfi_def_cfa_offset 4
 2548              		.cfi_offset 7, -4
 2549 0002 83B0     		sub	sp, sp, #12
 2550              		.cfi_def_cfa_offset 16
 2551 0004 00AF     		add	r7, sp, #0
 2552              		.cfi_def_cfa_register 7
 2553 0006 7860     		str	r0, [r7, #4]
1847:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Clean the error context */
1848:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 2554              		.loc 1 1848 20
 2555 0008 0C4B     		ldr	r3, .L159
 2556 000a 0022     		movs	r2, #0
 2557 000c 5A61     		str	r2, [r3, #20]
1849:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1850:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Set the ERASE bit */
1851:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_ERASE);
 2558              		.loc 1 1851 3
 2559 000e 0C4B     		ldr	r3, .L159+4
 2560 0010 5B68     		ldr	r3, [r3, #4]
 2561 0012 0B4A     		ldr	r2, .L159+4
 2562 0014 43F40073 		orr	r3, r3, #512
 2563 0018 5360     		str	r3, [r2, #4]
1852:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1853:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Set PROG bit */
1854:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   SET_BIT(FLASH->PECR, FLASH_PECR_PROG);
 2564              		.loc 1 1854 3
 2565 001a 094B     		ldr	r3, .L159+4
 2566 001c 5B68     		ldr	r3, [r3, #4]
 2567 001e 084A     		ldr	r2, .L159+4
 2568 0020 43F00803 		orr	r3, r3, #8
 2569 0024 5360     		str	r3, [r2, #4]
1855:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** 
1856:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   /* Write 00000000h to the first word of the program page to erase */
1857:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c ****   *(__IO uint32_t *)(uint32_t)(PageAddress & ~(FLASH_PAGE_SIZE - 1)) = 0x00000000;
 2570              		.loc 1 1857 21
 2571 0026 7B68     		ldr	r3, [r7, #4]
 2572 0028 23F0FF03 		bic	r3, r3, #255
 2573              		.loc 1 1857 4
 2574 002c 1A46     		mov	r2, r3
 2575              		.loc 1 1857 70
 2576 002e 0023     		movs	r3, #0
 2577 0030 1360     		str	r3, [r2]
1858:Drivers/STM32L1xx_HAL_Driver/Src/stm32l1xx_hal_flash_ex.c **** }
 2578              		.loc 1 1858 1
 2579 0032 00BF     		nop
 2580 0034 0C37     		adds	r7, r7, #12
 2581              		.cfi_def_cfa_offset 4
 2582 0036 BD46     		mov	sp, r7
 2583              		.cfi_def_cfa_register 13
 2584              		@ sp needed
 2585 0038 80BC     		pop	{r7}
 2586              		.cfi_restore 7
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 96


 2587              		.cfi_def_cfa_offset 0
 2588 003a 7047     		bx	lr
 2589              	.L160:
 2590              		.align	2
 2591              	.L159:
 2592 003c 00000000 		.word	pFlash
 2593 0040 003C0240 		.word	1073888256
 2594              		.cfi_endproc
 2595              	.LFE101:
 2597              		.text
 2598              	.Letext0:
 2599              		.file 3 "c:\\st\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\machine\\_default_
 2600              		.file 4 "c:\\st\\tools\\gcc-arm-none-eabi-10.3-2021.10\\arm-none-eabi\\include\\sys\\_stdint.h"
 2601              		.file 5 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l151xba.h"
 2602              		.file 6 "Drivers/CMSIS/Device/ST/STM32L1xx/Include/stm32l1xx.h"
 2603              		.file 7 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_def.h"
 2604              		.file 8 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_flash.h"
 2605              		.file 9 "Drivers/STM32L1xx_HAL_Driver/Inc/stm32l1xx_hal_flash_ex.h"
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 97


DEFINED SYMBOLS
                            *ABS*:00000000 stm32l1xx_hal_flash_ex.c
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:18     .text.HAL_FLASHEx_Erase:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:24     .text.HAL_FLASHEx_Erase:00000000 HAL_FLASHEx_Erase
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2539   .text.FLASH_PageErase:00000000 FLASH_PageErase
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:149    .text.HAL_FLASHEx_Erase:000000a8 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:155    .text.HAL_FLASHEx_Erase_IT:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:161    .text.HAL_FLASHEx_Erase_IT:00000000 HAL_FLASHEx_Erase_IT
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:260    .text.HAL_FLASHEx_Erase_IT:0000007c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:266    .text.HAL_FLASHEx_OBProgram:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:272    .text.HAL_FLASHEx_OBProgram:00000000 HAL_FLASHEx_OBProgram
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1703   .text.FLASH_OB_WRPConfig:00000000 FLASH_OB_WRPConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1344   .text.FLASH_OB_RDPConfig:00000000 FLASH_OB_RDPConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2039   .text.FLASH_OB_UserConfig:00000000 FLASH_OB_UserConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1462   .text.FLASH_OB_BORConfig:00000000 FLASH_OB_BORConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:458    .text.HAL_FLASHEx_OBProgram:00000104 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:463    .text.HAL_FLASHEx_OBGetConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:469    .text.HAL_FLASHEx_OBGetConfig:00000000 HAL_FLASHEx_OBGetConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1602   .text.FLASH_OB_GetRDP:00000000 FLASH_OB_GetRDP
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1559   .text.FLASH_OB_GetUser:00000000 FLASH_OB_GetUser
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1660   .text.FLASH_OB_GetBOR:00000000 FLASH_OB_GetBOR
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:526    .text.HAL_FLASHEx_OBGetConfig:00000044 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:531    .text.HAL_FLASHEx_AdvOBProgram:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:537    .text.HAL_FLASHEx_AdvOBProgram:00000000 HAL_FLASHEx_AdvOBProgram
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1779   .text.FLASH_OB_PCROPConfig:00000000 FLASH_OB_PCROPConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:612    .text.HAL_FLASHEx_AdvOBGetConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:618    .text.HAL_FLASHEx_AdvOBGetConfig:00000000 HAL_FLASHEx_AdvOBGetConfig
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:694    .text.HAL_FLASHEx_AdvOBGetConfig:00000054 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:699    .text.HAL_FLASHEx_OB_SelectPCROP:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:705    .text.HAL_FLASHEx_OB_SelectPCROP:00000000 HAL_FLASHEx_OB_SelectPCROP
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:796    .text.HAL_FLASHEx_OB_SelectPCROP:00000070 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:802    .text.HAL_FLASHEx_OB_DeSelectPCROP:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:808    .text.HAL_FLASHEx_OB_DeSelectPCROP:00000000 HAL_FLASHEx_OB_DeSelectPCROP
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:895    .text.HAL_FLASHEx_OB_DeSelectPCROP:00000068 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:901    .text.HAL_FLASHEx_DATAEEPROM_Unlock:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:907    .text.HAL_FLASHEx_DATAEEPROM_Unlock:00000000 HAL_FLASHEx_DATAEEPROM_Unlock
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:956    .text.HAL_FLASHEx_DATAEEPROM_Unlock:0000002c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:963    .text.HAL_FLASHEx_DATAEEPROM_Lock:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:969    .text.HAL_FLASHEx_DATAEEPROM_Lock:00000000 HAL_FLASHEx_DATAEEPROM_Lock
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1001   .text.HAL_FLASHEx_DATAEEPROM_Lock:0000001c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1006   .text.HAL_FLASHEx_DATAEEPROM_Erase:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1012   .text.HAL_FLASHEx_DATAEEPROM_Erase:00000000 HAL_FLASHEx_DATAEEPROM_Erase
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1093   .text.HAL_FLASHEx_DATAEEPROM_Erase:00000060 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1098   .text.HAL_FLASHEx_DATAEEPROM_Program:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1104   .text.HAL_FLASHEx_DATAEEPROM_Program:00000000 HAL_FLASHEx_DATAEEPROM_Program
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2480   .text.FLASH_DATAEEPROM_ProgramWord:00000000 FLASH_DATAEEPROM_ProgramWord
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2421   .text.FLASH_DATAEEPROM_ProgramHalfWord:00000000 FLASH_DATAEEPROM_ProgramHalfWord
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2362   .text.FLASH_DATAEEPROM_ProgramByte:00000000 FLASH_DATAEEPROM_ProgramByte
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2156   .text.FLASH_DATAEEPROM_FastProgramByte:00000000 FLASH_DATAEEPROM_FastProgramByte
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2225   .text.FLASH_DATAEEPROM_FastProgramHalfWord:00000000 FLASH_DATAEEPROM_FastProgramHalfWord
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2294   .text.FLASH_DATAEEPROM_FastProgramWord:00000000 FLASH_DATAEEPROM_FastProgramWord
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1252   .text.HAL_FLASHEx_DATAEEPROM_Program:000000d8 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1257   .text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1263   .text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:00000000 HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1293   .text.HAL_FLASHEx_DATAEEPROM_EnableFixedTimeProgram:00000018 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1298   .text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1304   .text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:00000000 HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 98


C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1334   .text.HAL_FLASHEx_DATAEEPROM_DisableFixedTimeProgram:00000018 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1339   .text.FLASH_OB_RDPConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1451   .text.FLASH_OB_RDPConfig:0000008c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1457   .text.FLASH_OB_BORConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1548   .text.FLASH_OB_BORConfig:00000070 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1554   .text.FLASH_OB_GetUser:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1592   .text.FLASH_OB_GetUser:0000001c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1597   .text.FLASH_OB_GetRDP:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1650   .text.FLASH_OB_GetRDP:00000028 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1655   .text.FLASH_OB_GetBOR:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1693   .text.FLASH_OB_GetBOR:0000001c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1698   .text.FLASH_OB_WRPConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1866   .text.FLASH_OB_WRPConfigWRP1OrPCROP1:00000000 FLASH_OB_WRPConfigWRP1OrPCROP1
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1769   .text.FLASH_OB_WRPConfig:00000054 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1774   .text.FLASH_OB_PCROPConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1856   .text.FLASH_OB_PCROPConfig:00000064 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:1861   .text.FLASH_OB_WRPConfigWRP1OrPCROP1:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2029   .text.FLASH_OB_WRPConfigWRP1OrPCROP1:000000c0 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2034   .text.FLASH_OB_UserConfig:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2145   .text.FLASH_OB_UserConfig:00000094 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2151   .text.FLASH_DATAEEPROM_FastProgramByte:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2215   .text.FLASH_DATAEEPROM_FastProgramByte:0000004c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2220   .text.FLASH_DATAEEPROM_FastProgramHalfWord:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2284   .text.FLASH_DATAEEPROM_FastProgramHalfWord:0000004c $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2289   .text.FLASH_DATAEEPROM_FastProgramWord:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2352   .text.FLASH_DATAEEPROM_FastProgramWord:00000048 $d
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2357   .text.FLASH_DATAEEPROM_ProgramByte:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2416   .text.FLASH_DATAEEPROM_ProgramHalfWord:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2475   .text.FLASH_DATAEEPROM_ProgramWord:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2533   .text.FLASH_PageErase:00000000 $t
C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s:2592   .text.FLASH_PageErase:0000003c $d
                           .group:00000000 wm4.0.7208a4f1159f7563e5a3c98e917e78ea
                           .group:00000000 wm4.stm32l1xx_hal_conf.h.37.6f4ad034cd0fae16c71589731e1d3893
                           .group:00000000 wm4.stm32l1xx.h.39.e0d89f765e6228edd2d07f7d0817bcd8
                           .group:00000000 wm4.stm32l151xba.h.37.a6e9532bd093c2a203d12d168d13167e
                           .group:00000000 wm4._newlib_version.h.4.bfdf54b0af045d4a71376ae00f63a22c
                           .group:00000000 wm4.features.h.33.318b64d71e0957639cfb30f1db1f7ec8
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.cmsis_version.h.32.4d5822004c01a829a975260e854b5f8e
                           .group:00000000 wm4.core_cm3.h.66.fc46cac19810db8f98d67da7ef88f42c
                           .group:00000000 wm4.cmsis_gcc.h.26.4f5798e999d5690b80e6ded3ecc94b37
                           .group:00000000 wm4.core_cm3.h.127.552ab6bb923680fc31d1142d4ea8743c
                           .group:00000000 wm4.mpu_armv7.h.32.27b4593cb2f8d3152ca5d97a9d72b321
                           .group:00000000 wm4.stm32l151xba.h.562.85f2a02125efc3b0700b06ee1b5b83e7
                           .group:00000000 wm4.stm32l1xx.h.188.884cd6efb98206df5cd0c303eb0771fb
                           .group:00000000 wm4.stm32_hal_legacy.h.23.4caecc6d9e081e04fa2c0bc654646384
                           .group:00000000 wm4.stddef.h.39.144cf5ddcd53cbfdac30259dc1a6c87f
                           .group:00000000 wm4.stm32l1xx_hal_def.h.58.10c500df30faeb1fa16afd36d46e1ba5
                           .group:00000000 wm4.stm32l1xx_hal_rcc.h.48.7aac246abb8a85d0d2aa6192ea8742ce
                           .group:00000000 wm4.stm32l1xx_hal_rcc_ex.h.22.d8e6f48664255020cb04bc2dadba6c5d
                           .group:00000000 wm4.stm32l1xx_hal_gpio.h.22.3ca3b7aa358d476454694f01adf692e6
                           .group:00000000 wm4.stm32l1xx_hal_gpio_ex.h.22.27ab914f694b65e32683f896478b1e43
                           .group:00000000 wm4.stm32l1xx_hal_dma.h.22.b347843d8366866f9db3a74a45c6ec19
                           .group:00000000 wm4.stm32l1xx_hal_cortex.h.22.d9367fefb01ff1ce24aa22897bc6b6aa
ARM GAS  C:\Users\SOLDER~1\AppData\Local\Temp\ccW6BxXj.s 			page 99


                           .group:00000000 wm4.stm32l1xx_hal_flash.h.22.a9321185db3487d735cd57e0209e130c
                           .group:00000000 wm4.stm32l1xx_hal_flash_ex.h.22.6d421ff2169cdd4785a0e089f62c0b66
                           .group:00000000 wm4.stm32l1xx_hal_pwr.h.22.b9782bf82907a6f9cc11b48e4bbbd39f
                           .group:00000000 wm4.stm32l1xx_hal_pwr_ex.h.22.7a0296b358d7a46f3411697cd28c4060
                           .group:00000000 wm4.stm32l1xx_hal_uart.h.22.e342491b9dfc7c2668d500ebb911970f
                           .group:00000000 wm4.stm32l1xx_hal_exti.h.22.e466ba38c16bb4377db5ccc70057e402
                           .group:00000000 wm4.stm32l1xx_hal.h.50.d478bd919f6859a9754dea37e78cfbf7

UNDEFINED SYMBOLS
FLASH_WaitForLastOperation
pFlash
